{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/types/EventTypes.ts"],"sourcesContent":["export type EventSource<T extends AssistantEvent = AssistantEvent> =\n  T extends `${infer Source}.${string}` ? Source : never;\n\ntype ScopeConfig = {\n  composer: \"thread\" | \"message\";\n  thread: never;\n  \"thread-list-item\": never;\n};\n\nexport type SourceByScope<TScope extends AssistantEventScope<AssistantEvent>> =\n  | (TScope extends \"*\" ? EventSource : never)\n  | (TScope extends keyof ScopeConfig ? TScope : never)\n  | {\n      [K in keyof ScopeConfig]: TScope extends ScopeConfig[K] ? K : never;\n    }[keyof ScopeConfig];\n\nexport type AssistantEventScope<TEvent extends AssistantEvent> =\n  | \"*\"\n  | EventSource<TEvent>\n  | ScopeConfig[EventSource<TEvent>];\n\nexport type AssistantEventSelector<TEvent extends AssistantEvent> =\n  | TEvent\n  | {\n      scope: AssistantEventScope<TEvent>;\n      event: TEvent;\n    };\n\nexport type AssistantEvent = keyof AssistantEventMap;\n\nexport type AssistantEventMap = {\n  // Thread events (from ThreadRuntimeEventType)\n  \"thread.run-start\": {\n    threadId: string;\n  };\n  \"thread.run-end\": {\n    threadId: string;\n  };\n  \"thread.initialize\": {\n    threadId: string;\n  };\n  \"thread.model-context-update\": {\n    threadId: string;\n  };\n\n  // Composer events (from ComposerRuntimeEventType)\n  \"composer.send\": {\n    threadId: string;\n    messageId?: string;\n  };\n  \"composer.attachment-add\": {\n    threadId: string;\n    messageId?: string;\n  };\n\n  // Thread list item events (from ThreadListItemEventType)\n  \"thread-list-item.switched-to\": {\n    threadId: string;\n  };\n  \"thread-list-item.switched-away\": {\n    threadId: string;\n  };\n\n  // Catch-all\n  \"*\": {\n    [K in Exclude<keyof AssistantEventMap, \"*\">]: {\n      event: K;\n      payload: AssistantEventMap[K];\n    };\n  }[Exclude<keyof AssistantEventMap, \"*\">];\n};\n\nexport const normalizeEventSelector = <TEvent extends AssistantEvent>(\n  selector: AssistantEventSelector<TEvent>,\n) => {\n  if (typeof selector === \"string\") {\n    const source = selector.split(\".\")[0] as AssistantEventScope<TEvent>;\n    return {\n      scope: source,\n      event: selector,\n    };\n  }\n\n  return {\n    scope: selector.scope,\n    event: selector.event,\n  };\n};\n\nexport const checkEventScope = <\n  TEvent extends AssistantEvent,\n  TExpectedScope extends AssistantEventScope<AssistantEvent>,\n>(\n  expectedScope: TExpectedScope,\n  scope: AssistantEventScope<TEvent>,\n  _event: TEvent,\n): _event is Extract<TEvent, `${SourceByScope<TExpectedScope>}.${string}`> => {\n  return scope === expectedScope;\n};\n\nexport type AssistantEventCallback<TEvent extends AssistantEvent> = (\n  payload: AssistantEventMap[TEvent],\n) => void;\n"],"names":[],"mappings":";;;;;;;AAwEO,IAAM,yBAAyB,CACpC,aACG;IACH,IAAI,OAAO,aAAa,UAAU;QAChC,MAAM,SAAS,SAAS,KAAA,CAAM,GAAG,CAAA,CAAE,CAAC,CAAA;QACpC,OAAO;YACL,OAAO;YACP,OAAO;QACT;IACF;IAEA,OAAO;QACL,OAAO,SAAS,KAAA;QAChB,OAAO,SAAS,KAAA;IAClB;AACF;AAEO,IAAM,kBAAkB,CAI7B,eACA,OACA,WAC4E;IAC5E,OAAO,UAAU;AACnB","debugId":null}},
    {"offset": {"line": 33, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/context/stores/ThreadViewport.tsx"],"sourcesContent":["\"use client\";\n\nimport { create } from \"zustand\";\nimport type { Unsubscribe } from \"../../types/Unsubscribe\";\n\nexport type ThreadViewportState = {\n  readonly isAtBottom: boolean;\n  readonly scrollToBottom: () => void;\n  readonly onScrollToBottom: (callback: () => void) => Unsubscribe;\n};\n\nexport const makeThreadViewportStore = () => {\n  const scrollToBottomListeners = new Set<() => void>();\n\n  return create<ThreadViewportState>(() => ({\n    isAtBottom: true,\n    scrollToBottom: () => {\n      for (const listener of scrollToBottomListeners) {\n        listener();\n      }\n    },\n    onScrollToBottom: (callback) => {\n      scrollToBottomListeners.add(callback);\n      return () => {\n        scrollToBottomListeners.delete(callback);\n      };\n    },\n  }));\n};\n"],"names":[],"mappings":";;;;;AAEA,SAAS,cAAc;;;AAShB,IAAM,0BAA0B,MAAM;IAC3C,MAAM,0BAA0B,aAAA,GAAA,IAAI,IAAgB;IAEpD,WAAO,qJAAA,EAA4B,IAAA,CAAO;YACxC,YAAY;YACZ,gBAAgB,MAAM;gBACpB,KAAA,MAAW,YAAY,wBAAyB;oBAC9C,SAAS;gBACX;YACF;YACA,kBAAkB,CAAC,aAAa;gBAC9B,wBAAwB,GAAA,CAAI,QAAQ;gBACpC,OAAO,MAAM;oBACX,wBAAwB,MAAA,CAAO,QAAQ;gBACzC;YACF;QACF,CAAA,CAAE;AACJ","debugId":null}},
    {"offset": {"line": 64, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/context/react/utils/createContextHook.ts"],"sourcesContent":["\"use client\";\n\nimport { useContext, Context } from \"react\";\n\n/**\n * Creates a context hook with optional support.\n * @param context - The React context to consume.\n * @param providerName - The name of the provider for error messages.\n * @returns A hook function that provides the context value.\n */\nexport function createContextHook<T>(\n  context: Context<T | null>,\n  providerName: string,\n) {\n  function useContextHook(options?: {\n    optional?: boolean | undefined;\n  }): T | null {\n    const contextValue = useContext(context);\n    if (!options?.optional && !contextValue) {\n      throw new Error(`This component must be used within ${providerName}.`);\n    }\n    return contextValue;\n  }\n\n  return useContextHook;\n}\n"],"names":[],"mappings":";;;;;AAEA,SAAS,kBAA2B;;;AAQ7B,SAAS,kBACd,OAAA,EACA,YAAA,EACA;IACA,SAAS,eAAe,OAAA,EAEX;QACX,MAAM,mBAAe,2KAAA,EAAW,OAAO;QACvC,IAAI,oDAAC,QAAS,QAAA,KAAY,CAAC,cAAc;YACvC,MAAM,IAAI,MAAM,sCAAkD,OAAZ,YAAY,EAAA,EAAG;QACvE;QACA,OAAO;IACT;IAEA,OAAO;AACT","debugId":null}},
    {"offset": {"line": 88, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/context/react/utils/createContextStoreHook.ts"],"sourcesContent":["import { UseBoundStore } from \"zustand\";\nimport { ReadonlyStore } from \"../../ReadonlyStore\";\n\n/**\n * Creates hooks for accessing a store within a context.\n * @param contextHook - The hook to access the context.\n * @param contextKey - The key of the store in the context.\n * @returns An object containing the hooks: `use...` and `use...Store`.\n */\nexport function createContextStoreHook<T, K extends keyof T & string>(\n  contextHook: (options?: { optional?: boolean }) => T | null,\n  contextKey: K,\n) {\n  type StoreType = T[K];\n  type StateType = StoreType extends ReadonlyStore<infer S> ? S : never;\n\n  // Define useStoreStoreHook with overloads\n  function useStoreStoreHook(): ReadonlyStore<StateType>;\n  function useStoreStoreHook(options: {\n    optional: true;\n  }): ReadonlyStore<StateType> | null;\n  function useStoreStoreHook(options?: {\n    optional?: boolean;\n  }): ReadonlyStore<StateType> | null {\n    const context = contextHook(options);\n    if (!context) return null;\n    return context[contextKey] as ReadonlyStore<StateType>;\n  }\n\n  // Define useStoreHook with overloads\n  function useStoreHook(): StateType;\n  function useStoreHook<TSelected>(\n    selector: (state: StateType) => TSelected,\n  ): TSelected;\n  function useStoreHook(options: { optional: true }): StateType | null;\n  function useStoreHook<TSelected>(options: {\n    optional: true;\n    selector?: (state: StateType) => TSelected;\n  }): TSelected | null;\n  function useStoreHook<TSelected>(\n    param?:\n      | ((state: StateType) => TSelected)\n      | {\n          optional?: boolean;\n          selector?: (state: StateType) => TSelected;\n        },\n  ): TSelected | StateType | null {\n    let optional = false;\n    let selector: ((state: StateType) => TSelected) | undefined;\n\n    if (typeof param === \"function\") {\n      selector = param;\n    } else if (param && typeof param === \"object\") {\n      optional = !!param.optional;\n      selector = param.selector;\n    }\n\n    const store = useStoreStoreHook({\n      optional,\n    } as any) as UseBoundStore<ReadonlyStore<StateType>>;\n    if (!store) return null;\n    return selector ? store(selector) : store();\n  }\n\n  // Return an object with keys based on contextKey\n  return {\n    [contextKey]: useStoreHook,\n    [`${contextKey}Store`]: useStoreStoreHook,\n  } as {\n    [P in K]: typeof useStoreHook;\n  } & {\n    [P in `${K}Store`]: typeof useStoreStoreHook;\n  };\n}\n"],"names":[],"mappings":";;;;;AASO,SAAS,uBACd,WAAA,EACA,UAAA,EACA;IASA,SAAS,kBAAkB,OAAA,EAES;QAClC,MAAM,UAAU,YAAY,OAAO;QACnC,IAAI,CAAC,QAAS,CAAA,OAAO;QACrB,OAAO,OAAA,CAAQ,UAAU,CAAA;IAC3B;IAYA,SAAS,aACP,KAAA,EAM8B;QAC9B,IAAI,WAAW;QACf,IAAI;QAEJ,IAAI,OAAO,UAAU,YAAY;YAC/B,WAAW;QACb,OAAA,IAAW,SAAS,OAAO,UAAU,UAAU;YAC7C,WAAW,CAAC,CAAC,MAAM,QAAA;YACnB,WAAW,MAAM,QAAA;QACnB;QAEA,MAAM,QAAQ,kBAAkB;YAC9B;QACF,CAAQ;QACR,IAAI,CAAC,MAAO,CAAA,OAAO;QACnB,OAAO,WAAW,MAAM,QAAQ,IAAI,MAAM;IAC5C;IAGA,OAAO;QACL,CAAC,UAAU,CAAA,EAAG;QACd,CAAC,GAAa,OAAV,UAAU,EAAA,MAAO,GAAA,EAAG;IAC1B;AAKF","debugId":null}},
    {"offset": {"line": 125, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/context/react/ThreadViewportContext.ts"],"sourcesContent":["\"use client\";\n\nimport { createContext } from \"react\";\nimport { ReadonlyStore } from \"../ReadonlyStore\";\nimport { UseBoundStore } from \"zustand\";\nimport { createContextHook } from \"./utils/createContextHook\";\nimport { createContextStoreHook } from \"./utils/createContextStoreHook\";\nimport { ThreadViewportState } from \"../stores\";\n\nexport type ThreadViewportContextValue = {\n  useThreadViewport: UseBoundStore<ReadonlyStore<ThreadViewportState>>;\n};\n\nexport const ThreadViewportContext =\n  createContext<ThreadViewportContextValue | null>(null);\n\nconst useThreadViewportContext = createContextHook(\n  ThreadViewportContext,\n  \"ThreadPrimitive.Viewport\",\n);\n\nexport const { useThreadViewport, useThreadViewportStore } =\n  createContextStoreHook(useThreadViewportContext, \"useThreadViewport\");\n"],"names":[],"mappings":";;;;;;;;;AAEA,SAAS,qBAAqB;AAG9B,SAAS,yBAAyB;AAClC,SAAS,8BAA8B;;;;;AAOhC,IAAM,4BACX,8KAAA,EAAiD,IAAI;AAEvD,IAAM,+BAA2B,4NAAA,EAC/B,uBACA;AAGK,IAAM,EAAE,iBAAA,EAAmB,sBAAA,CAAuB,CAAA,OACvD,sOAAA,EAAuB,0BAA0B,mBAAmB","debugId":null}},
    {"offset": {"line": 150, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/context/ReadonlyStore.ts"],"sourcesContent":["import type { StoreApi } from \"zustand\";\n\nexport type ReadonlyStore<T> = Omit<StoreApi<T>, \"setState\" | \"destroy\">;\n\nexport const writableStore = <T>(store: ReadonlyStore<T> | undefined) => {\n  return store as unknown as StoreApi<T>;\n};\n"],"names":[],"mappings":";;;;;AAIO,IAAM,gBAAgB,CAAI,UAAwC;IACvE,OAAO;AACT","debugId":null}},
    {"offset": {"line": 164, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/context/providers/ThreadViewportProvider.tsx"],"sourcesContent":["\"use client\";\n\nimport type { FC, PropsWithChildren } from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { makeThreadViewportStore } from \"../stores/ThreadViewport\";\nimport {\n  ThreadViewportContext,\n  ThreadViewportContextValue,\n  useThreadViewportStore,\n} from \"../react/ThreadViewportContext\";\nimport { writableStore } from \"../ReadonlyStore\";\n\nconst useThreadViewportStoreValue = () => {\n  const outerViewport = useThreadViewportStore({ optional: true });\n  const [store] = useState(() => makeThreadViewportStore());\n\n  useEffect(() => {\n    return outerViewport?.getState().onScrollToBottom(() => {\n      store.getState().scrollToBottom();\n    });\n  }, [outerViewport, store]);\n\n  useEffect(() => {\n    if (!outerViewport) return;\n    return store.subscribe((state) => {\n      if (outerViewport.getState().isAtBottom !== state.isAtBottom) {\n        writableStore(outerViewport).setState({ isAtBottom: state.isAtBottom });\n      }\n    });\n  }, [store, outerViewport]);\n\n  return store;\n};\n\nexport const ThreadViewportProvider: FC<PropsWithChildren> = ({ children }) => {\n  const useThreadViewport = useThreadViewportStoreValue();\n\n  const [context] = useState<ThreadViewportContextValue>(() => {\n    return {\n      useThreadViewport,\n    };\n  });\n\n  return (\n    <ThreadViewportContext.Provider value={context}>\n      {children}\n    </ThreadViewportContext.Provider>\n  );\n};\n"],"names":[],"mappings":";;;;;AAGA,SAAS,WAAW,gBAAgB;AACpC,SAAS,+BAA+B;AACxC;AAKA,SAAS,qBAAqB;AAkC1B;;;;;;;AAhCJ,IAAM,8BAA8B,MAAM;IACxC,MAAM,oBAAgB,4NAAA,EAAuB;QAAE,UAAU;IAAK,CAAC;IAC/D,MAAM,CAAC,KAAK,CAAA,GAAI,6KAAA;gDAAS,QAAM,uNAAA,CAAwB,CAAC;;IAExD,IAAA,0KAAA;iDAAU,MAAM;YACd,qEAAO,cAAe,QAAA,CAAS,EAAE,gBAAA;yDAAiB,MAAM;oBACtD,MAAM,QAAA,CAAS,EAAE,cAAA,CAAe;gBAClC,CAAC;;QACH;gDAAG;QAAC;QAAe,KAAK;KAAC;IAEzB,IAAA,0KAAA;iDAAU,MAAM;YACd,IAAI,CAAC,cAAe,CAAA;YACpB,OAAO,MAAM,SAAA;yDAAU,CAAC,UAAU;oBAChC,IAAI,cAAc,QAAA,CAAS,EAAE,UAAA,KAAe,MAAM,UAAA,EAAY;wBAC5D,IAAA,kMAAA,EAAc,aAAa,EAAE,QAAA,CAAS;4BAAE,YAAY,MAAM,UAAA;wBAAW,CAAC;oBACxE;gBACF,CAAC;;QACH;gDAAG;QAAC;QAAO,aAAa;KAAC;IAEzB,OAAO;AACT;AAEO,IAAM,yBAAgD;QAAC,EAAE,QAAA,CAAS,CAAA,KAAM;IAC7E,MAAM,oBAAoB,4BAA4B;IAEtD,MAAM,CAAC,OAAO,CAAA,OAAI,yKAAA;2CAAqC,MAAM;YAC3D,OAAO;gBACL;YACF;QACF,CAAC;;IAED,OACE,aAAA,GAAA,IAAA,6KAAA,EAAC,2NAAA,CAAsB,QAAA,EAAtB;QAA+B,OAAO;QACpC;IAAA,CACH;AAEJ","debugId":null}},
    {"offset": {"line": 239, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/context/react/AssistantApiContext.tsx"],"sourcesContent":["\"use client\";\n\nimport {\n  createContext,\n  FC,\n  PropsWithChildren,\n  useContext,\n  useMemo,\n} from \"react\";\n\nimport { ToolUIApi, ToolUIState, ToolUIMeta } from \"../../client/types/ToolUI\";\nimport {\n  MessageClientApi,\n  MessageClientState,\n} from \"../../client/types/Message\";\nimport {\n  ThreadListItemClientApi,\n  ThreadListItemClientState,\n} from \"../../client/types/ThreadListItem\";\nimport {\n  MessagePartClientApi,\n  MessagePartClientState,\n} from \"../../client/types/Part\";\nimport { ThreadClientApi, ThreadClientState } from \"../../client/types/Thread\";\nimport {\n  ComposerClientApi,\n  ComposerClientState,\n} from \"../../client/types/Composer\";\nimport {\n  AttachmentClientApi,\n  AttachmentClientState,\n} from \"../../client/types/Attachment\";\nimport { Unsubscribe } from \"@assistant-ui/tap\";\nimport { ModelContextProvider } from \"../../model-context\";\nimport { AssistantRuntime } from \"../../legacy-runtime/runtime/AssistantRuntime\";\nimport {\n  AssistantEvent,\n  AssistantEventCallback,\n  AssistantEventSelector,\n  normalizeEventSelector,\n} from \"../../types/EventTypes\";\nimport {\n  ThreadListClientApi,\n  ThreadListClientState,\n} from \"../../client/types/ThreadList\";\nimport { ThreadViewportProvider } from \"../providers/ThreadViewportProvider\";\n\nexport type AssistantState = {\n  readonly threads: ThreadListClientState;\n  readonly toolUIs: ToolUIState;\n\n  readonly threadListItem: ThreadListItemClientState;\n  readonly thread: ThreadClientState;\n  readonly composer: ComposerClientState;\n  readonly message: MessageClientState;\n  readonly part: MessagePartClientState;\n  readonly attachment: AttachmentClientState;\n};\n\ntype AssistantApiField<\n  TApi,\n  TMeta extends { source: string | null; query: any },\n> = (() => TApi) & (TMeta | { source: null; query: Record<string, never> });\n\n// Meta types for each API method\ntype ThreadsMeta = {\n  source: \"root\";\n  query: Record<string, never>;\n};\n\ntype ThreadListItemMeta = {\n  source: \"threads\";\n  query:\n    | { type: \"index\"; index: number; archived: boolean }\n    | { type: \"main\" }\n    | { type: \"id\"; id: string };\n};\n\ntype ThreadMeta = {\n  source: \"threads\";\n  query: { type: \"main\" };\n};\n\ntype ComposerMeta = {\n  source: \"message\" | \"thread\";\n  query: Record<string, never>;\n};\n\ntype MessageMeta = {\n  source: \"thread\";\n  query: { type: \"index\"; index: number };\n};\n\ntype PartMeta = {\n  source: \"message\" | \"root\";\n  query: { type: \"index\"; index: number } | Record<string, never>;\n};\n\ntype AttachmentMeta = {\n  source: \"message\" | \"composer\";\n  query: { type: \"index\"; index: number };\n};\n\nexport type AssistantApi = {\n  threads: AssistantApiField<ThreadListClientApi, ThreadsMeta>;\n  toolUIs: AssistantApiField<ToolUIApi, ToolUIMeta>;\n  threadListItem: AssistantApiField<\n    ThreadListItemClientApi,\n    ThreadListItemMeta\n  >;\n  thread: AssistantApiField<ThreadClientApi, ThreadMeta>;\n  composer: AssistantApiField<ComposerClientApi, ComposerMeta>;\n  message: AssistantApiField<MessageClientApi, MessageMeta>;\n  part: AssistantApiField<MessagePartClientApi, PartMeta>;\n  attachment: AssistantApiField<AttachmentClientApi, AttachmentMeta>;\n\n  subscribe(listener: () => void): Unsubscribe;\n  flushSync(): void;\n\n  on<TEvent extends AssistantEvent>(\n    event: AssistantEventSelector<TEvent>,\n    callback: AssistantEventCallback<TEvent>,\n  ): Unsubscribe;\n\n  // temp\n  registerModelContextProvider(provider: ModelContextProvider): void;\n  /** @internal */\n  __internal_getRuntime(): AssistantRuntime | null;\n};\n\nexport const createAssistantApiField = <\n  TApi,\n  TMeta extends { source: any; query: any },\n>(\n  config: {\n    get: () => TApi;\n  } & (TMeta | { source: null; query: Record<string, never> }),\n): AssistantApiField<TApi, TMeta> => {\n  const fn = config.get as AssistantApiField<TApi, TMeta>;\n  fn.source = config.source;\n  fn.query = config.query;\n  return fn;\n};\n\nconst NO_OP_FN = () => () => {};\n\nconst AssistantApiContext = createContext<AssistantApi>({\n  threads: createAssistantApiField({\n    source: null,\n    query: {},\n    get: () => {\n      throw new Error(\"Threads is only available inside <AssistantProvider />\");\n    },\n  }),\n  toolUIs: createAssistantApiField({\n    source: null,\n    query: {},\n    get: (): never => {\n      throw new Error(\"ToolUIs is only available inside <AssistantProvider />\");\n    },\n  }),\n  threadListItem: createAssistantApiField({\n    source: null,\n    query: {},\n    get: (): never => {\n      throw new Error(\n        \"ThreadListItem is only available inside <AssistantProvider />\",\n      );\n    },\n  }),\n  thread: createAssistantApiField({\n    source: null,\n    query: {},\n    get: (): never => {\n      throw new Error(\"Thread is only available inside <AssistantProvider />\");\n    },\n  }),\n  composer: createAssistantApiField({\n    source: null,\n    query: {},\n    get: (): never => {\n      throw new Error(\n        \"Composer is only available inside <AssistantProvider />\",\n      );\n    },\n  }),\n  message: createAssistantApiField({\n    source: null,\n    query: {},\n    get: (): never => {\n      throw new Error(\n        \"Message is only available inside <ThreadPrimitive.Messages />\",\n      );\n    },\n  }),\n  part: createAssistantApiField({\n    source: null,\n    query: {},\n    get: (): never => {\n      throw new Error(\n        \"Part is only available inside <MessagePrimitive.Parts />\",\n      );\n    },\n  }),\n  attachment: createAssistantApiField({\n    source: null,\n    query: {},\n    get: (): never => {\n      throw new Error(\n        \"Attachment is only available inside <MessagePrimitive.Attachments /> or <ComposerPrimitive.Attachments />\",\n      );\n    },\n  }),\n\n  subscribe: NO_OP_FN,\n  flushSync: NO_OP_FN,\n  on: (selector) => {\n    const { scope } = normalizeEventSelector(selector);\n    throw new Error(`Event scope is not available in this component: ${scope}`);\n  },\n\n  registerModelContextProvider: () => {\n    throw new Error(\n      \"Registering model context providers is only available inside <AssistantProvider />\",\n    );\n  },\n  __internal_getRuntime: () => {\n    return null;\n  },\n});\n\nexport const useAssistantApi = (): AssistantApi => {\n  return useContext(AssistantApiContext);\n};\n\nconst mergeFns = <TArgs extends Array<unknown>>(\n  fn1: (...args: TArgs) => void,\n  fn2: (...args: TArgs) => void,\n) => {\n  if (fn1 === NO_OP_FN) return fn2;\n  if (fn2 === NO_OP_FN) return fn1;\n\n  return (...args: TArgs) => {\n    fn1(...args);\n    fn2(...args);\n  };\n};\n\nconst mergeFnsWithUnsubscribe = <TArgs extends Array<unknown>>(\n  fn1: (...args: TArgs) => Unsubscribe,\n  fn2: (...args: TArgs) => Unsubscribe,\n) => {\n  if (fn1 === NO_OP_FN) return fn2;\n  if (fn2 === NO_OP_FN) return fn1;\n\n  return (...args: TArgs) => {\n    const unsubscribe1 = fn1(...args);\n    const unsubscribe2 = fn2(...args);\n\n    return () => {\n      unsubscribe1();\n      unsubscribe2();\n    };\n  };\n};\n\nconst extendApi = (\n  api: AssistantApi,\n  api2: Partial<AssistantApi>,\n): AssistantApi => {\n  const api2Subscribe = api2.subscribe;\n  const api2FlushSync = api2.flushSync;\n  return {\n    ...api,\n    ...api2,\n    subscribe: mergeFnsWithUnsubscribe(\n      api.subscribe,\n      api2Subscribe ?? NO_OP_FN,\n    ),\n    flushSync: mergeFns(api.flushSync, api2FlushSync ?? NO_OP_FN),\n  };\n};\n\nexport const AssistantProvider: FC<\n  PropsWithChildren<{ api: Partial<AssistantApi> }>\n> = ({ api: api2, children }) => {\n  const api = useAssistantApi();\n  const extendedApi = useMemo(() => extendApi(api, api2), [api, api2]);\n\n  return (\n    <AssistantApiContext.Provider value={extendedApi}>\n      {/* TODO temporarily allow accessing viewport state from outside the viewport */}\n      {/* TODO figure out if this behavior should be deprecated, since it is quite hacky */}\n      <ThreadViewportProvider>{children}</ThreadViewportProvider>\n    </AssistantApiContext.Provider>\n  );\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 395, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/utils/tap-store/store.ts"],"sourcesContent":["import {\n  tapMemo,\n  tapEffect,\n  ResourceElement,\n  resource,\n  createResource,\n  Unsubscribe,\n} from \"@assistant-ui/tap\";\n\nexport interface Store<TState> {\n  /**\n   * Get the current state of the store.\n   */\n  getState(): TState;\n\n  /**\n   * Subscribe to the store.\n   */\n  subscribe(listener: () => void): Unsubscribe;\n\n  /**\n   * Synchronously flush all the updates to the store.\n   */\n  flushSync(): void;\n}\n\nexport const asStore = resource(\n  <TState, TProps>(element: ResourceElement<TState, TProps>): Store<TState> => {\n    const resource = tapMemo(\n      () => createResource(element, true),\n      [element.type],\n    );\n\n    tapEffect(() => {\n      resource.updateInput(element.props);\n    });\n\n    return resource;\n  },\n);\n"],"names":["resource"],"mappings":";;;;;;;;AAAA;;AA0BO,IAAM,cAAU,mLAAA,EACrB,CAAiB,YAA4D;IAC3E,MAAMA,gBAAW,sLAAA,EACf,QAAM,+LAAA,EAAe,SAAS,IAAI,GAClC;QAAC,QAAQ,IAAI;KAAA;IAGf,IAAA,0LAAA,EAAU,MAAM;QACdA,UAAS,WAAA,CAAY,QAAQ,KAAK;IACpC,CAAC;IAED,OAAOA;AACT","debugId":null}},
    {"offset": {"line": 420, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/utils/tap-store/tap-api.ts"],"sourcesContent":["import { tapEffect, tapMemo, tapRef } from \"@assistant-ui/tap\";\n\nexport interface ApiObject {\n  [key: string]: ((...args: any[]) => any) | ApiObject;\n}\n\nclass ReadonlyApiHandler<TApi extends ApiObject> implements ProxyHandler<TApi> {\n  constructor(private readonly getApi: () => TApi) {}\n\n  get(_: unknown, prop: string | symbol) {\n    return this.getApi()[prop as keyof TApi];\n  }\n\n  ownKeys(): ArrayLike<string | symbol> {\n    return Object.keys(this.getApi() as object);\n  }\n\n  has(_: unknown, prop: string | symbol) {\n    return prop in (this.getApi() as object);\n  }\n\n  getOwnPropertyDescriptor(_: unknown, prop: string | symbol) {\n    return Object.getOwnPropertyDescriptor(this.getApi(), prop);\n  }\n\n  set() {\n    return false;\n  }\n  defineProperty() {\n    return false;\n  }\n  deleteProperty() {\n    return false;\n  }\n}\n\nexport const tapApi = <TApi extends ApiObject & { getState: () => any }>(\n  api: TApi,\n  options?: {\n    key?: string | undefined;\n  },\n) => {\n  const ref = tapRef(() => api);\n  tapEffect(() => {\n    ref.current = api;\n  });\n\n  const apiProxy = tapMemo(\n    () =>\n      new Proxy<TApi>({} as TApi, new ReadonlyApiHandler(() => ref.current)),\n    [],\n  );\n\n  const key = options?.key;\n  const state = api.getState();\n\n  return tapMemo(\n    () => ({\n      key,\n      state,\n      api: apiProxy,\n    }),\n    [state, key],\n  );\n};\n"],"names":[],"mappings":";;;;;;;AAAA,SAAS,WAAW,SAAS,cAAc;;AAM3C,IAAM,qBAAN,MAA+E;IAG7E,IAAI,CAAA,EAAY,IAAA,EAAuB;QACrC,OAAO,IAAA,CAAK,MAAA,CAAO,CAAA,CAAE,IAAkB,CAAA;IACzC;IAEA,UAAsC;QACpC,OAAO,OAAO,IAAA,CAAK,IAAA,CAAK,MAAA,CAAO,CAAW;IAC5C;IAEA,IAAI,CAAA,EAAY,IAAA,EAAuB;QACrC,OAAO,QAAS,IAAA,CAAK,MAAA,CAAO;IAC9B;IAEA,yBAAyB,CAAA,EAAY,IAAA,EAAuB;QAC1D,OAAO,OAAO,wBAAA,CAAyB,IAAA,CAAK,MAAA,CAAO,GAAG,IAAI;IAC5D;IAEA,MAAM;QACJ,OAAO;IACT;IACA,iBAAiB;QACf,OAAO;IACT;IACA,iBAAiB;QACf,OAAO;IACT;IA1BA,YAA6B,MAAA,CAAoB;QAApB,IAAA,CAAA,MAAA,GAAA;IAAqB;AA2BpD;AAEO,IAAM,SAAS,CACpB,KACA,YAGG;IACH,MAAM,UAAM,oLAAA,EAAO,IAAM,GAAG;IAC5B,IAAA,0LAAA,EAAU,MAAM;QACd,IAAI,OAAA,GAAU;IAChB,CAAC;IAED,MAAM,eAAW,sLAAA,EACf,IACE,IAAI,MAAY,CAAC,GAAW,IAAI,mBAAmB,IAAM,IAAI,OAAO,CAAC,GACvE,CAAC,CAAA;IAGH,MAAM,wDAAM,QAAS,GAAA;IACrB,MAAM,QAAQ,IAAI,QAAA,CAAS;IAE3B,OAAO,0LAAA,EACL,IAAA,CAAO;YACL;YACA;YACA,KAAK;QACP,CAAA,GACA;QAAC;QAAO,GAAG;KAAA;AAEf","debugId":null}},
    {"offset": {"line": 478, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/legacy-runtime/client/EventManagerRuntimeClient.ts"],"sourcesContent":["import { resource, tapMemo } from \"@assistant-ui/tap\";\nimport { Unsubscribe } from \"../../types/Unsubscribe\";\nimport {\n  AssistantEventMap,\n  AssistantEvent,\n  AssistantEventCallback,\n} from \"../../types/EventTypes\";\n\nexport type EventManager = {\n  on<TEvent extends AssistantEvent>(\n    event: TEvent,\n    callback: AssistantEventCallback<TEvent>,\n  ): Unsubscribe;\n  emit<TEvent extends Exclude<AssistantEvent, \"*\">>(\n    event: TEvent,\n    payload: AssistantEventMap[TEvent],\n  ): void;\n};\n\ntype ListenerMap = Omit<\n  Map<AssistantEvent, Set<AssistantEventCallback<AssistantEvent>>>,\n  \"get\" | \"set\"\n> & {\n  get<TEvent extends AssistantEvent>(\n    event: TEvent,\n  ): Set<AssistantEventCallback<TEvent>> | undefined;\n  set<TEvent extends AssistantEvent>(\n    event: TEvent,\n    value: Set<AssistantEventCallback<TEvent>>,\n  ): void;\n};\n\nexport const EventManager = resource(() => {\n  const events = tapMemo(() => {\n    const listeners: ListenerMap = new Map();\n\n    return {\n      on: (event, callback) => {\n        if (!listeners.has(event)) {\n          listeners.set(event, new Set());\n        }\n\n        const eventListeners = listeners.get(event)!;\n        eventListeners.add(callback);\n\n        return () => {\n          eventListeners.delete(callback);\n          if (eventListeners.size === 0) {\n            listeners.delete(event);\n          }\n        };\n      },\n\n      emit: (event, payload) => {\n        const eventListeners = listeners.get(event);\n        const wildcardListeners = listeners.get(\"*\");\n\n        if (!eventListeners && !wildcardListeners) return;\n\n        // make sure state updates flush\n        queueMicrotask(() => {\n          // Emit to specific event listeners\n          if (eventListeners) {\n            for (const callback of eventListeners) {\n              callback(payload);\n            }\n          }\n\n          // Emit to wildcard listeners\n          if (wildcardListeners) {\n            for (const callback of wildcardListeners) {\n              callback({ event, payload });\n            }\n          }\n        });\n      },\n    } satisfies EventManager;\n  }, []);\n\n  return events;\n});\n"],"names":[],"mappings":";;;;;;AAAA,SAAS,UAAU,eAAe;;AAgC3B,IAAM,mBAAe,mLAAA,EAAS,MAAM;IACzC,MAAM,aAAS,sLAAA,EAAQ,MAAM;QAC3B,MAAM,YAAyB,aAAA,GAAA,IAAI,IAAI;QAEvC,OAAO;YACL,IAAI,CAAC,OAAO,aAAa;gBACvB,IAAI,CAAC,UAAU,GAAA,CAAI,KAAK,GAAG;oBACzB,UAAU,GAAA,CAAI,OAAO,aAAA,GAAA,IAAI,IAAI,CAAC;gBAChC;gBAEA,MAAM,iBAAiB,UAAU,GAAA,CAAI,KAAK;gBAC1C,eAAe,GAAA,CAAI,QAAQ;gBAE3B,OAAO,MAAM;oBACX,eAAe,MAAA,CAAO,QAAQ;oBAC9B,IAAI,eAAe,IAAA,KAAS,GAAG;wBAC7B,UAAU,MAAA,CAAO,KAAK;oBACxB;gBACF;YACF;YAEA,MAAM,CAAC,OAAO,YAAY;gBACxB,MAAM,iBAAiB,UAAU,GAAA,CAAI,KAAK;gBAC1C,MAAM,oBAAoB,UAAU,GAAA,CAAI,GAAG;gBAE3C,IAAI,CAAC,kBAAkB,CAAC,kBAAmB,CAAA;gBAG3C,eAAe,MAAM;oBAEnB,IAAI,gBAAgB;wBAClB,KAAA,MAAW,YAAY,eAAgB;4BACrC,SAAS,OAAO;wBAClB;oBACF;oBAGA,IAAI,mBAAmB;wBACrB,KAAA,MAAW,YAAY,kBAAmB;4BACxC,SAAS;gCAAE;gCAAO;4BAAQ,CAAC;wBAC7B;oBACF;gBACF,CAAC;YACH;QACF;IACF,GAAG,CAAC,CAAC;IAEL,OAAO;AACT,CAAC","debugId":null}},
    {"offset": {"line": 533, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/client/ToolUIClient.ts"],"sourcesContent":["import { resource, tapState } from \"@assistant-ui/tap\";\nimport { tapApi } from \"../utils/tap-store\";\nimport { ToolUIState, ToolUIApi } from \"./types/ToolUI\";\n\nexport const ToolUIClient = resource(() => {\n  const [state, setState] = tapState<ToolUIState>(() => ({}));\n\n  return tapApi<ToolUIApi>({\n    getState: () => state,\n\n    setToolUI: (toolName, render) => {\n      setState((prev) => {\n        return {\n          ...prev,\n          [toolName]: [...(prev[toolName] ?? []), render],\n        };\n      });\n\n      return () => {\n        setState((prev) => {\n          return {\n            ...prev,\n            [toolName]: prev[toolName]?.filter((r) => r !== render) ?? [],\n          };\n        });\n      };\n    },\n  });\n});\n"],"names":[],"mappings":";;;;;;AAAA,SAAS,UAAU,gBAAgB;AACnC,SAAS,cAAc;;;AAGhB,IAAM,mBAAe,mLAAA,EAAS,MAAM;IACzC,MAAM,CAAC,OAAO,QAAQ,CAAA,OAAI,wLAAA,EAAsB,IAAA,CAAO,CAAC,CAAA,CAAE;IAE1D,WAAO,sMAAA,EAAkB;QACvB,UAAU,IAAM;QAEhB,WAAW,CAAC,UAAU,WAAW;YAC/B,SAAS,CAAC,SAAS;;gBACjB,OAAO;oBACL,GAAG,IAAA;oBACH,CAAC,QAAQ,CAAA,EAAG,CAAC;iDAAI,CAAK,QAAQ,CAAA,0CAAb,iBAAkB,CAAC,CAAA;wBAAI,MAAM;qBAAA;gBAChD;YACF,CAAC;YAED,OAAO,MAAM;gBACX,SAAS,CAAC,SAAS;;;oBACjB,OAAO;wBACL,GAAG,IAAA;wBACH,CAAC,QAAQ,CAAA,iDAAG,CAAK,QAAQ,CAAA,kEAAG,MAAA,CAAO,CAAC,IAAM,MAAM,MAAM,kDAA1C,wBAA+C,CAAC,CAAA;oBAC9D;gBACF,CAAC;YACH;QACF;IACF,CAAC;AACH,CAAC","debugId":null}},
    {"offset": {"line": 577, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/client/EventContext.ts"],"sourcesContent":["import {\n  createContext,\n  tapContext,\n  withContextProvider,\n} from \"@assistant-ui/tap\";\nimport { EventManager } from \"../legacy-runtime/client/EventManagerRuntimeClient\";\n\nconst EventsContext = createContext<EventManager | null>(null);\n\nexport const withEventsProvider = <TResult>(\n  events: EventManager,\n  fn: () => TResult,\n) => {\n  return withContextProvider(EventsContext, events, fn);\n};\n\nexport const tapEvents = () => {\n  const events = tapContext(EventsContext);\n  if (!events) throw new Error(\"Events context is not available\");\n\n  return events;\n};\n"],"names":[],"mappings":";;;;;;;AAAA;;AAOA,IAAM,oBAAgB,uLAAA,EAAmC,IAAI;AAEtD,IAAM,qBAAqB,CAChC,QACA,OACG;IACH,WAAO,6LAAA,EAAoB,eAAe,QAAQ,EAAE;AACtD;AAEO,IAAM,YAAY,MAAM;IAC7B,MAAM,aAAS,oLAAA,EAAW,aAAa;IACvC,IAAI,CAAC,OAAQ,CAAA,MAAM,IAAI,MAAM,iCAAiC;IAE9D,OAAO;AACT","debugId":null}},
    {"offset": {"line": 601, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/client/AssistantClient.ts"],"sourcesContent":["import {\n  tapMemo,\n  resource,\n  Unsubscribe,\n  tapInlineResource,\n  ResourceElement,\n  tapResource,\n} from \"@assistant-ui/tap\";\nimport { ThreadListClientApi, ThreadListClientState } from \"./types/ThreadList\";\nimport { AssistantRuntime } from \"../legacy-runtime/runtime/AssistantRuntime\";\nimport { ModelContextProvider } from \"../model-context\";\nimport { asStore, Store, tapApi } from \"../utils/tap-store\";\nimport { useResource } from \"@assistant-ui/tap/react\";\nimport { useMemo } from \"react\";\nimport {\n  AssistantEvent,\n  AssistantEventCallback,\n  checkEventScope,\n  normalizeEventSelector,\n} from \"../types/EventTypes\";\nimport { EventManager } from \"../legacy-runtime/client/EventManagerRuntimeClient\";\nimport {\n  AssistantApi,\n  createAssistantApiField,\n} from \"../context/react/AssistantApiContext\";\nimport { ToolUIClient } from \"./ToolUIClient\";\nimport { withEventsProvider } from \"./EventContext\";\nimport { ToolUIApi, ToolUIState } from \"./types/ToolUI\";\n\ntype AssistantClientState = {\n  readonly threads: ThreadListClientState;\n  readonly toolUIs: ToolUIState;\n};\n\ntype AssistantClientApi = {\n  getState(): AssistantClientState;\n\n  readonly threads: ThreadListClientApi;\n  readonly toolUIs: ToolUIApi;\n\n  on<TEvent extends AssistantEvent>(\n    event: TEvent,\n    callback: AssistantEventCallback<TEvent>,\n  ): Unsubscribe;\n\n  registerModelContextProvider(provider: ModelContextProvider): Unsubscribe;\n\n  /** @internal */\n  __internal_getRuntime(): AssistantRuntime | null;\n};\n\nconst AssistantStore = resource(\n  ({\n    threads: threadsEl,\n    registerModelContextProvider,\n    __internal_runtime,\n  }: AssistantClientProps) => {\n    const events = tapInlineResource(EventManager());\n\n    const { threads, toolUIs } = withEventsProvider(events, () => {\n      return {\n        toolUIs: tapInlineResource(ToolUIClient()),\n        threads: tapResource(threadsEl, [threadsEl]),\n      };\n    });\n\n    const state = tapMemo<AssistantClientState>(\n      () => ({\n        threads: threads.state,\n        toolUIs: toolUIs.state,\n      }),\n      [threads.state, toolUIs.state],\n    );\n\n    return tapApi<AssistantClientApi>({\n      getState: () => state,\n\n      threads: threads.api,\n      toolUIs: toolUIs.api,\n      on: events.on,\n\n      registerModelContextProvider: registerModelContextProvider,\n      __internal_getRuntime: () => __internal_runtime ?? null,\n    });\n  },\n);\n\nconst getClientFromStore = (client: Store<{ api: AssistantClientApi }>) => {\n  const getItem = () => {\n    return client.getState().api.threads.item(\"main\");\n  };\n  return {\n    threads: createAssistantApiField({\n      source: \"root\",\n      query: {},\n      get: () => client.getState().api.threads,\n    }),\n    toolUIs: createAssistantApiField({\n      source: \"root\",\n      query: {},\n      get: () => client.getState().api.toolUIs,\n    }),\n    thread: createAssistantApiField({\n      source: \"threads\",\n      query: { type: \"main\" },\n      get: () => client.getState().api.threads.thread(\"main\"),\n    }),\n    threadListItem: createAssistantApiField({\n      source: \"threads\",\n      query: { type: \"main\" },\n      get: () => getItem(),\n    }),\n    composer: createAssistantApiField({\n      source: \"thread\",\n      query: {},\n      get: () => client.getState().api.threads.thread(\"main\").composer,\n    }),\n    registerModelContextProvider(provider: ModelContextProvider) {\n      return client.getState().api.registerModelContextProvider(provider);\n    },\n    __internal_getRuntime() {\n      return client.getState().api.__internal_getRuntime();\n    },\n    on(selector, callback) {\n      const { event, scope } = normalizeEventSelector(selector);\n      if (scope === \"*\") return client.getState().api.on(event, callback);\n\n      if (\n        checkEventScope(\"thread\", scope, event) ||\n        checkEventScope(\"thread-list-item\", scope, event) ||\n        checkEventScope(\"composer\", scope, event)\n      ) {\n        return client.getState().api.on(event, (e) => {\n          if (e.threadId !== getItem().getState().id) return;\n          callback(e);\n        });\n      }\n\n      throw new Error(\n        `Event scope is not available in this component: ${scope}`,\n      );\n    },\n    subscribe: client.subscribe,\n    flushSync: client.flushSync,\n  } satisfies Partial<AssistantApi>;\n};\n\ntype AssistantClientProps = {\n  threads: ResourceElement<{\n    state: ThreadListClientState;\n    api: ThreadListClientApi;\n  }>;\n  registerModelContextProvider: (provider: ModelContextProvider) => Unsubscribe;\n\n  /** @internal */\n  __internal_runtime?: AssistantRuntime;\n};\n\nexport const useAssistantClient = (props: AssistantClientProps) => {\n  const client = useResource(asStore(AssistantStore(props)));\n  return useMemo(() => getClientFromStore(client), [client]);\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 724, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/legacy-runtime/util-hooks/tapSubscribable.ts"],"sourcesContent":["import { tapState, tapEffect } from \"@assistant-ui/tap\";\nimport { SubscribableWithState } from \"../runtime/subscribable/Subscribable\";\n\nexport const tapSubscribable = <T>(\n  subscribable: Omit<SubscribableWithState<T, any>, \"path\">,\n) => {\n  const [, setState] = tapState(subscribable.getState);\n  tapEffect(() => {\n    setState(subscribable.getState());\n    return subscribable.subscribe(() => {\n      setState(subscribable.getState());\n    });\n  }, [subscribable]);\n\n  return subscribable.getState();\n};\n"],"names":[],"mappings":";;;;;;AAAA,SAAS,UAAU,iBAAiB;;AAG7B,IAAM,kBAAkB,CAC7B,iBACG;IACH,MAAM,CAAC,EAAE,QAAQ,CAAA,OAAI,wLAAA,EAAS,aAAa,QAAQ;IACnD,IAAA,0LAAA,EAAU,MAAM;QACd,SAAS,aAAa,QAAA,CAAS,CAAC;QAChC,OAAO,aAAa,SAAA,CAAU,MAAM;YAClC,SAAS,aAAa,QAAA,CAAS,CAAC;QAClC,CAAC;IACH,GAAG;QAAC,YAAY;KAAC;IAEjB,OAAO,aAAa,QAAA,CAAS;AAC/B","debugId":null}},
    {"offset": {"line": 750, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/legacy-runtime/client/ThreadListItemRuntimeClient.ts"],"sourcesContent":["import { resource, tapEffect } from \"@assistant-ui/tap\";\nimport {\n  ThreadListItemEventType,\n  ThreadListItemRuntime,\n} from \"../runtime/ThreadListItemRuntime\";\nimport { Unsubscribe } from \"../../types\";\nimport { tapApi } from \"../../utils/tap-store\";\nimport { tapSubscribable } from \"../util-hooks/tapSubscribable\";\nimport { tapEvents } from \"../../client/EventContext\";\nimport { ThreadListItemClientApi } from \"../../client/types/ThreadListItem\";\n\nexport const ThreadListItemClient = resource(\n  ({ runtime }: { runtime: ThreadListItemRuntime }) => {\n    const runtimeState = tapSubscribable(runtime);\n    const events = tapEvents();\n\n    // Bind thread list item events to event manager\n    tapEffect(() => {\n      const unsubscribers: Unsubscribe[] = [];\n\n      // Subscribe to thread list item events\n      const threadListItemEvents: ThreadListItemEventType[] = [\n        \"switched-to\",\n        \"switched-away\",\n      ];\n\n      for (const event of threadListItemEvents) {\n        const unsubscribe = runtime.unstable_on(event, () => {\n          events.emit(`thread-list-item.${event}`, {\n            threadId: runtime.getState()!.id,\n          });\n        });\n        unsubscribers.push(unsubscribe);\n      }\n\n      return () => {\n        for (const unsub of unsubscribers) unsub();\n      };\n    }, [runtime, events]);\n\n    return tapApi<ThreadListItemClientApi>(\n      {\n        getState: () => runtimeState,\n        switchTo: runtime.switchTo,\n        rename: runtime.rename,\n        archive: runtime.archive,\n        unarchive: runtime.unarchive,\n        delete: runtime.delete,\n        generateTitle: runtime.generateTitle,\n        initialize: runtime.initialize,\n        detach: runtime.detach,\n        __internal_getRuntime: () => runtime,\n      },\n      {\n        key: runtimeState.id,\n      },\n    );\n  },\n);\n"],"names":[],"mappings":";;;;;AAAA,SAAS,UAAU,iBAAiB;;AAMpC,SAAS,cAAc;AACvB,SAAS,uBAAuB;AAChC,SAAS,iBAAiB;;;;;AAGnB,IAAM,2BAAuB,mLAAA,EAClC;QAAC,EAAE,OAAA,CAAQ,CAAA,KAA0C;IACnD,MAAM,mBAAe,iOAAA,EAAgB,OAAO;IAC5C,MAAM,aAAS,4LAAA,CAAU;IAGzB,IAAA,0LAAA,EAAU,MAAM;QACd,MAAM,gBAA+B,CAAC,CAAA;QAGtC,MAAM,uBAAkD;YACtD;YACA;SACF;QAEA,KAAA,MAAW,SAAS,qBAAsB;YACxC,MAAM,cAAc,QAAQ,WAAA,CAAY,OAAO,MAAM;gBACnD,OAAO,IAAA,CAAK,oBAAyB,OAAL,KAAK,GAAI;oBACvC,UAAU,QAAQ,QAAA,CAAS,EAAG,EAAA;gBAChC,CAAC;YACH,CAAC;YACD,cAAc,IAAA,CAAK,WAAW;QAChC;QAEA,OAAO,MAAM;YACX,KAAA,MAAW,SAAS,cAAe,MAAM;QAC3C;IACF,GAAG;QAAC;QAAS,MAAM;KAAC;IAEpB,WAAO,sMAAA,EACL;QACE,UAAU,IAAM;QAChB,UAAU,QAAQ,QAAA;QAClB,QAAQ,QAAQ,MAAA;QAChB,SAAS,QAAQ,OAAA;QACjB,WAAW,QAAQ,SAAA;QACnB,QAAQ,QAAQ,MAAA;QAChB,eAAe,QAAQ,aAAA;QACvB,YAAY,QAAQ,UAAA;QACpB,QAAQ,QAAQ,MAAA;QAChB,uBAAuB,IAAM;IAC/B,GACA;QACE,KAAK,aAAa,EAAA;IACpB;AAEJ","debugId":null}},
    {"offset": {"line": 810, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/client/util-hooks/tapLookupResources.ts"],"sourcesContent":["import { ResourceElement, tapResources } from \"@assistant-ui/tap\";\nimport { ApiObject } from \"../../utils/tap-store\";\n\nexport const tapLookupResources = <TState, TApi extends ApiObject>(\n  elements: ResourceElement<{\n    key: string | undefined;\n    state: TState;\n    api: TApi;\n  }>[],\n) => {\n  const resources = tapResources(elements);\n\n  return {\n    state: resources.map((r) => r.state),\n    api: (lookup: { index: number } | { key: string }) => {\n      const value =\n        \"index\" in lookup\n          ? resources[lookup.index]?.api\n          : resources.find((r) => r.key === lookup.key)?.api;\n\n      if (!value) {\n        throw new Error(\n          `tapLookupResources: Resource not found for lookup: ${JSON.stringify(lookup)}`,\n        );\n      }\n\n      return value;\n    },\n  };\n};\n"],"names":[],"mappings":";;;;;AAAA,SAA0B,oBAAoB;;AAGvC,IAAM,qBAAqB,CAChC,aAKG;IACH,MAAM,gBAAY,gMAAA,EAAa,QAAQ;IAEvC,OAAO;QACL,OAAO,UAAU,GAAA,CAAI,CAAC,IAAM,EAAE,KAAK;QACnC,KAAK,CAAC,WAAgD;yCAI9C;YAHN,MAAM,QACJ,WAAW,6CACP,CAAU,OAAO,KAAK,CAAA,4DAAtB,wBAAyB,GAAA,gCACf,IAAA,CAAK,CAAC,IAAM,EAAE,GAAA,KAAQ,OAAO,GAAG,qEAAG,GAAA;YAEnD,IAAI,CAAC,OAAO;gBACV,MAAM,IAAI,MACR,sDAA4E,OAAtB,KAAK,SAAA,CAAU,MAAM,CAAC;YAEhF;YAEA,OAAO;QACT;IACF;AACF","debugId":null}},
    {"offset": {"line": 837, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/legacy-runtime/client/AttachmentRuntimeClient.ts"],"sourcesContent":["import { resource } from \"../../../../tap/dist/core/resource\";\nimport { AttachmentClientApi } from \"../../client/types/Attachment\";\nimport { tapApi } from \"../../utils/tap-store\";\nimport { AttachmentRuntime } from \"../runtime\";\nimport { tapSubscribable } from \"../util-hooks/tapSubscribable\";\n\nexport const AttachmentRuntimeClient = resource(\n  ({ runtime }: { runtime: AttachmentRuntime }) => {\n    const state = tapSubscribable(runtime);\n    return tapApi<AttachmentClientApi>(\n      {\n        getState: () => state,\n        remove: runtime.remove,\n        __internal_getRuntime: () => runtime,\n      },\n      {\n        key: state.id,\n      },\n    );\n  },\n);\n"],"names":[],"mappings":";;;;;AAAA,SAAS,gBAAgB;AAEzB,SAAS,cAAc;AAEvB,SAAS,uBAAuB;;;;AAEzB,IAAM,8BAA0B,mLAAA,EACrC;QAAC,EAAE,OAAA,CAAQ,CAAA,KAAsC;IAC/C,MAAM,YAAQ,iOAAA,EAAgB,OAAO;IACrC,WAAO,sMAAA,EACL;QACE,UAAU,IAAM;QAChB,QAAQ,QAAQ,MAAA;QAChB,uBAAuB,IAAM;IAC/B,GACA;QACE,KAAK,MAAM,EAAA;IACb;AAEJ","debugId":null}},
    {"offset": {"line": 865, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/legacy-runtime/client/ComposerRuntimeClient.ts"],"sourcesContent":["import {\n  resource,\n  tapMemo,\n  tapEffect,\n  RefObject,\n  tapInlineResource,\n} from \"@assistant-ui/tap\";\nimport {\n  ComposerRuntime,\n  EditComposerRuntime,\n} from \"../runtime/ComposerRuntime\";\nimport { Unsubscribe } from \"../../types\";\n\nimport { tapApi } from \"../../utils/tap-store\";\nimport { ComposerRuntimeEventType } from \"../runtime-cores/core/ComposerRuntimeCore\";\nimport { tapEvents } from \"../../client/EventContext\";\nimport {\n  ComposerClientState,\n  ComposerClientApi,\n} from \"../../client/types/Composer\";\nimport { tapLookupResources } from \"../../client/util-hooks/tapLookupResources\";\nimport { AttachmentRuntimeClient } from \"./AttachmentRuntimeClient\";\nimport { tapSubscribable } from \"../util-hooks/tapSubscribable\";\n\nconst ComposerAttachmentClientByIndex = resource(\n  ({ runtime, index }: { runtime: ComposerRuntime; index: number }) => {\n    const attachmentRuntime = tapMemo(\n      () => runtime.getAttachmentByIndex(index),\n      [runtime, index],\n    );\n\n    return tapInlineResource(\n      AttachmentRuntimeClient({\n        runtime: attachmentRuntime,\n      }),\n    );\n  },\n);\n\nexport const ComposerClient = resource(\n  ({\n    threadIdRef,\n    messageIdRef,\n    runtime,\n  }: {\n    threadIdRef: RefObject<string>;\n    messageIdRef?: RefObject<string>;\n    runtime: ComposerRuntime;\n  }) => {\n    const runtimeState = tapSubscribable(runtime);\n    const events = tapEvents();\n\n    // Bind composer events to event manager\n    tapEffect(() => {\n      const unsubscribers: Unsubscribe[] = [];\n\n      // Subscribe to composer events\n      const composerEvents: ComposerRuntimeEventType[] = [\n        \"send\",\n        \"attachment-add\",\n      ];\n\n      for (const event of composerEvents) {\n        const unsubscribe = runtime.unstable_on(event, () => {\n          events.emit(`composer.${event}`, {\n            threadId: threadIdRef.current,\n            ...(messageIdRef && { messageId: messageIdRef.current }),\n          });\n        });\n        unsubscribers.push(unsubscribe);\n      }\n\n      return () => {\n        for (const unsub of unsubscribers) unsub();\n      };\n    }, [runtime, events, threadIdRef, messageIdRef]);\n\n    const attachments = tapLookupResources(\n      runtimeState.attachments.map((_, idx) =>\n        ComposerAttachmentClientByIndex(\n          { runtime: runtime, index: idx },\n          { key: idx },\n        ),\n      ),\n    );\n\n    const state = tapMemo<ComposerClientState>(() => {\n      return {\n        text: runtimeState.text,\n        role: runtimeState.role,\n        attachments: attachments.state,\n        runConfig: runtimeState.runConfig,\n        isEditing: runtimeState.isEditing,\n        canCancel: runtimeState.canCancel,\n        attachmentAccept: runtimeState.attachmentAccept,\n        isEmpty: runtimeState.isEmpty,\n        type: runtimeState.type ?? \"thread\",\n      };\n    }, [runtimeState, attachments.state]);\n\n    return tapApi<ComposerClientApi>({\n      getState: () => state,\n\n      setText: runtime.setText,\n      setRole: runtime.setRole,\n      setRunConfig: runtime.setRunConfig,\n      addAttachment: runtime.addAttachment,\n      reset: runtime.reset,\n\n      clearAttachments: runtime.clearAttachments,\n      send: runtime.send,\n      cancel: runtime.cancel,\n      beginEdit:\n        (runtime as EditComposerRuntime).beginEdit ??\n        (() => {\n          throw new Error(\"beginEdit is not supported in this runtime\");\n        }),\n\n      attachment: (selector) => {\n        if (\"id\" in selector) {\n          return attachments.api({ key: selector.id });\n        } else {\n          return attachments.api(selector);\n        }\n      },\n\n      __internal_getRuntime: () => runtime,\n    });\n  },\n);\n"],"names":[],"mappings":";;;;;AAAA;;;;AAaA,SAAS,cAAc;AAEvB,SAAS,iBAAiB;AAK1B,SAAS,0BAA0B;AACnC,SAAS,+BAA+B;AACxC,SAAS,uBAAuB;;;;;;;AAEhC,IAAM,sCAAkC,mLAAA,EACtC;QAAC,EAAE,OAAA,EAAS,KAAA,CAAM,CAAA,KAAmD;IACnE,MAAM,wBAAoB,sLAAA,EACxB,IAAM,QAAQ,oBAAA,CAAqB,KAAK,GACxC;QAAC;QAAS,KAAK;KAAA;IAGjB,WAAO,8MAAA,MACL,0OAAA,EAAwB;QACtB,SAAS;IACX,CAAC;AAEL;AAGK,IAAM,qBAAiB,mLAAA,EAC5B;QAAC,EACC,WAAA,EACA,YAAA,EACA,OAAA,EACF,KAIM;IACJ,MAAM,mBAAe,iOAAA,EAAgB,OAAO;IAC5C,MAAM,aAAS,4LAAA,CAAU;IAGzB,IAAA,0LAAA,EAAU,MAAM;QACd,MAAM,gBAA+B,CAAC,CAAA;QAGtC,MAAM,iBAA6C;YACjD;YACA;SACF;QAEA,KAAA,MAAW,SAAS,eAAgB;YAClC,MAAM,cAAc,QAAQ,WAAA,CAAY,OAAO,MAAM;gBACnD,OAAO,IAAA,CAAK,YAAiB,OAAL,KAAK,GAAI;oBAC/B,UAAU,YAAY,OAAA;oBACtB,GAAI,gBAAgB;wBAAE,WAAW,aAAa,OAAA;oBAAQ,CAAA;gBACxD,CAAC;YACH,CAAC;YACD,cAAc,IAAA,CAAK,WAAW;QAChC;QAEA,OAAO,MAAM;YACX,KAAA,MAAW,SAAS,cAAe,MAAM;QAC3C;IACF,GAAG;QAAC;QAAS;QAAQ;QAAa,YAAY;KAAC;IAE/C,MAAM,cAAc,gOAAA,EAClB,aAAa,WAAA,CAAY,GAAA,CAAI,CAAC,GAAG,MAC/B,gCACE;YAAE;YAAkB,OAAO;QAAI,GAC/B;YAAE,KAAK;QAAI;IAKjB,MAAM,YAAQ,sLAAA,EAA6B,MAAM;YAUvC;QATR,OAAO;YACL,MAAM,aAAa,IAAA;YACnB,MAAM,aAAa,IAAA;YACnB,aAAa,YAAY,KAAA;YACzB,WAAW,aAAa,SAAA;YACxB,WAAW,aAAa,SAAA;YACxB,WAAW,aAAa,SAAA;YACxB,kBAAkB,aAAa,gBAAA;YAC/B,SAAS,aAAa,OAAA;YACtB,yCAAmB,IAAA,mEAAQ;QAC7B;IACF,GAAG;QAAC;QAAc,YAAY,KAAK;KAAC;QAe/B;IAbL,WAAO,sMAAA,EAA0B;QAC/B,UAAU,IAAM;QAEhB,SAAS,QAAQ,OAAA;QACjB,SAAS,QAAQ,OAAA;QACjB,cAAc,QAAQ,YAAA;QACtB,eAAe,QAAQ,aAAA;QACvB,OAAO,QAAQ,KAAA;QAEf,kBAAkB,QAAQ,gBAAA;QAC1B,MAAM,QAAQ,IAAA;QACd,QAAQ,QAAQ,MAAA;QAChB,yCACmC,SAAA,mEAChC,MAAM;YACL,MAAM,IAAI,MAAM,4CAA4C;QAC9D;QAEF,YAAY,CAAC,aAAa;YACxB,IAAI,QAAQ,UAAU;gBACpB,OAAO,YAAY,GAAA,CAAI;oBAAE,KAAK,SAAS,EAAA;gBAAG,CAAC;YAC7C,OAAO;gBACL,OAAO,YAAY,GAAA,CAAI,QAAQ;YACjC;QACF;QAEA,uBAAuB,IAAM;IAC/B,CAAC;AACH","debugId":null}},
    {"offset": {"line": 980, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/legacy-runtime/client/MessagePartRuntimeClient.ts"],"sourcesContent":["import { resource } from \"@assistant-ui/tap\";\nimport { tapApi } from \"../../utils/tap-store\";\nimport { MessagePartRuntime } from \"../runtime/MessagePartRuntime\";\nimport { tapSubscribable } from \"../util-hooks/tapSubscribable\";\nimport { MessagePartClientApi } from \"../../client/types/Part\";\nexport const MessagePartClient = resource(\n  ({ runtime }: { runtime: MessagePartRuntime }) => {\n    const runtimeState = tapSubscribable(runtime);\n\n    return tapApi<MessagePartClientApi>(\n      {\n        getState: () => runtimeState,\n\n        addToolResult: (result) => runtime.addToolResult(result),\n\n        __internal_getRuntime: () => runtime,\n      },\n      {\n        key:\n          runtimeState.type === \"tool-call\"\n            ? \"toolCallId-\" + runtimeState.toolCallId\n            : undefined,\n      },\n    );\n  },\n);\n"],"names":[],"mappings":";;;;;AAAA,SAAS,gBAAgB;AACzB,SAAS,cAAc;AAEvB,SAAS,uBAAuB;;;;AAEzB,IAAM,wBAAoB,mLAAA,EAC/B;QAAC,EAAE,OAAA,CAAQ,CAAA,KAAuC;IAChD,MAAM,mBAAe,iOAAA,EAAgB,OAAO;IAE5C,WAAO,sMAAA,EACL;QACE,UAAU,IAAM;QAEhB,eAAe,CAAC,SAAW,QAAQ,aAAA,CAAc,MAAM;QAEvD,uBAAuB,IAAM;IAC/B,GACA;QACE,KACE,aAAa,IAAA,KAAS,cAClB,gBAAgB,aAAa,UAAA,GAC7B,KAAA;IACR;AAEJ","debugId":null}},
    {"offset": {"line": 1008, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/legacy-runtime/client/MessageRuntimeClient.ts"],"sourcesContent":["import {\n  resource,\n  tapInlineResource,\n  tapMemo,\n  tapState,\n} from \"@assistant-ui/tap\";\nimport { tapApi } from \"../../utils/tap-store\";\nimport { MessageRuntime } from \"../runtime/MessageRuntime\";\nimport { tapSubscribable } from \"../util-hooks/tapSubscribable\";\nimport { ComposerClient } from \"./ComposerRuntimeClient\";\nimport { MessagePartClient } from \"./MessagePartRuntimeClient\";\nimport { tapLookupResources } from \"../../client/util-hooks/tapLookupResources\";\nimport { RefObject } from \"react\";\nimport {\n  MessageClientState,\n  MessageClientApi,\n} from \"../../client/types/Message\";\nimport { AttachmentRuntimeClient } from \"./AttachmentRuntimeClient\";\n\nconst MessageAttachmentClientByIndex = resource(\n  ({ runtime, index }: { runtime: MessageRuntime; index: number }) => {\n    const attachmentRuntime = tapMemo(\n      () => runtime.getAttachmentByIndex(index),\n      [runtime, index],\n    );\n    return tapInlineResource(\n      AttachmentRuntimeClient({ runtime: attachmentRuntime }),\n    );\n  },\n);\n\nconst MessagePartByIndex = resource(\n  ({ runtime, index }: { runtime: MessageRuntime; index: number }) => {\n    const partRuntime = tapMemo(\n      () => runtime.getMessagePartByIndex(index),\n      [runtime, index],\n    );\n    return tapInlineResource(MessagePartClient({ runtime: partRuntime }));\n  },\n);\n\nexport const MessageClient = resource(\n  ({\n    runtime,\n    threadIdRef,\n  }: {\n    runtime: MessageRuntime;\n    threadIdRef: RefObject<string>;\n  }) => {\n    const runtimeState = tapSubscribable(runtime);\n\n    const [isCopiedState, setIsCopied] = tapState(false);\n    const [isHoveringState, setIsHovering] = tapState(false);\n\n    const messageIdRef = tapMemo(\n      () => ({\n        get current() {\n          return runtime.getState().id;\n        },\n      }),\n      [runtime],\n    );\n\n    const composer = tapInlineResource(\n      ComposerClient({\n        runtime: runtime.composer,\n        threadIdRef,\n        messageIdRef,\n      }),\n    );\n\n    const parts = tapLookupResources(\n      runtimeState.content.map((_, idx) =>\n        MessagePartByIndex({ runtime, index: idx }, { key: idx }),\n      ),\n    );\n\n    const attachments = tapLookupResources(\n      runtimeState.attachments?.map((_, idx) =>\n        MessageAttachmentClientByIndex({ runtime, index: idx }, { key: idx }),\n      ) ?? [],\n    );\n\n    const state = tapMemo<MessageClientState>(() => {\n      return {\n        ...(runtimeState as MessageClientState),\n\n        parts: parts.state,\n        composer: composer.state,\n\n        isCopied: isCopiedState,\n        isHovering: isHoveringState,\n      };\n    }, [\n      runtimeState,\n      parts.state,\n      composer.state,\n      isCopiedState,\n      isHoveringState,\n    ]);\n\n    return tapApi<MessageClientApi>(\n      {\n        getState: () => state,\n\n        composer: composer.api,\n\n        reload: (config) => runtime.reload(config),\n        speak: () => runtime.speak(),\n        stopSpeaking: () => runtime.stopSpeaking(),\n        submitFeedback: (feedback) => runtime.submitFeedback(feedback),\n        switchToBranch: (options) => runtime.switchToBranch(options),\n        getCopyText: () => runtime.unstable_getCopyText(),\n\n        part: (selector) => {\n          if (\"index\" in selector) {\n            return parts.api({ index: selector.index });\n          } else {\n            return parts.api({ key: \"toolCallId-\" + selector.toolCallId });\n          }\n        },\n\n        attachment: (selector) => {\n          if (\"id\" in selector) {\n            return attachments.api({ key: selector.id });\n          } else {\n            return attachments.api(selector);\n          }\n        },\n\n        setIsCopied,\n        setIsHovering,\n\n        __internal_getRuntime: () => runtime,\n      },\n      {\n        key: runtimeState.id,\n      },\n    );\n  },\n);\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1138, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/legacy-runtime/client/ThreadRuntimeClient.ts"],"sourcesContent":["import { ThreadRuntimeEventType } from \"../runtime-cores/core/ThreadRuntimeCore\";\nimport { ThreadRuntime } from \"../runtime/ThreadRuntime\";\nimport {\n  resource,\n  tapInlineResource,\n  tapMemo,\n  tapEffect,\n  RefObject,\n} from \"@assistant-ui/tap\";\nimport { ComposerClient } from \"./ComposerRuntimeClient\";\nimport { MessageClient } from \"./MessageRuntimeClient\";\nimport { tapSubscribable } from \"../util-hooks/tapSubscribable\";\nimport { tapApi } from \"../../utils/tap-store\";\nimport { tapLookupResources } from \"../../client/util-hooks/tapLookupResources\";\nimport { Unsubscribe } from \"../../types\";\nimport { tapEvents } from \"../../client/EventContext\";\nimport { ThreadClientState, ThreadClientApi } from \"../../client/types/Thread\";\n\nconst MessageClientById = resource(\n  ({\n    runtime,\n    id,\n    threadIdRef,\n  }: {\n    runtime: ThreadRuntime;\n    id: string;\n    threadIdRef: RefObject<string>;\n  }) => {\n    const messageRuntime = tapMemo(\n      () => runtime.getMessageById(id),\n      [runtime, id],\n    );\n\n    return tapInlineResource(\n      MessageClient({ runtime: messageRuntime, threadIdRef }),\n    );\n  },\n);\n\nexport const ThreadClient = resource(\n  ({ runtime }: { runtime: ThreadRuntime }) => {\n    const runtimeState = tapSubscribable(runtime);\n\n    const events = tapEvents();\n\n    // Bind thread events to event manager\n    tapEffect(() => {\n      const unsubscribers: Unsubscribe[] = [];\n\n      // Subscribe to thread events\n      const threadEvents: ThreadRuntimeEventType[] = [\n        \"run-start\",\n        \"run-end\",\n        \"initialize\",\n        \"model-context-update\",\n      ];\n\n      for (const event of threadEvents) {\n        const unsubscribe = runtime.unstable_on(event, () => {\n          const threadId = runtime.getState()?.threadId || \"unknown\";\n          events.emit(`thread.${event}`, {\n            threadId,\n          });\n        });\n        unsubscribers.push(unsubscribe);\n      }\n\n      return () => {\n        for (const unsub of unsubscribers) unsub();\n      };\n    }, [runtime]);\n\n    const threadIdRef = tapMemo(\n      () => ({\n        get current() {\n          return runtime.getState()!.threadId;\n        },\n      }),\n      [runtime],\n    );\n\n    const composer = tapInlineResource(\n      ComposerClient({\n        runtime: runtime.composer,\n        threadIdRef,\n      }),\n    );\n\n    const messages = tapLookupResources(\n      runtimeState.messages.map((m) =>\n        MessageClientById(\n          { runtime: runtime, id: m.id, threadIdRef },\n          { key: m.id },\n        ),\n      ),\n    );\n\n    const state = tapMemo<ThreadClientState>(() => {\n      return {\n        isDisabled: runtimeState.isDisabled,\n        isLoading: runtimeState.isLoading,\n        isRunning: runtimeState.isRunning,\n        capabilities: runtimeState.capabilities,\n        state: runtimeState.state,\n        suggestions: runtimeState.suggestions,\n        extras: runtimeState.extras,\n        speech: runtimeState.speech,\n\n        composer: composer.state,\n        messages: messages.state,\n      };\n    }, [runtimeState, messages, composer.state]);\n\n    return tapApi<ThreadClientApi>({\n      getState: () => state,\n\n      composer: composer.api,\n\n      append: runtime.append,\n      startRun: runtime.startRun,\n      unstable_resumeRun: runtime.unstable_resumeRun,\n      cancelRun: runtime.cancelRun,\n      getModelContext: runtime.getModelContext,\n      export: runtime.export,\n      import: runtime.import,\n      reset: runtime.reset,\n      stopSpeaking: runtime.stopSpeaking,\n\n      message: (selector) => {\n        if (\"id\" in selector) {\n          return messages.api({ key: selector.id });\n        } else {\n          return messages.api(selector);\n        }\n      },\n\n      __internal_getRuntime: () => runtime,\n    });\n  },\n);\n"],"names":[],"mappings":";;;;;AAEA;;;;AAOA,SAAS,sBAAsB;AAC/B,SAAS,qBAAqB;AAC9B,SAAS,uBAAuB;AAChC,SAAS,cAAc;AACvB,SAAS,0BAA0B;AAEnC,SAAS,iBAAiB;;;;;;;;AAG1B,IAAM,wBAAoB,mLAAA,EACxB;QAAC,EACC,OAAA,EACA,EAAA,EACA,WAAA,EACF,KAIM;IACJ,MAAM,qBAAiB,sLAAA,EACrB,IAAM,QAAQ,cAAA,CAAe,EAAE,GAC/B;QAAC;QAAS,EAAE;KAAA;IAGd,WAAO,8MAAA,MACL,6NAAA,EAAc;QAAE,SAAS;QAAgB;IAAY,CAAC;AAE1D;AAGK,IAAM,mBAAe,mLAAA,EAC1B;QAAC,EAAE,OAAA,CAAQ,CAAA,KAAkC;IAC3C,MAAM,mBAAe,iOAAA,EAAgB,OAAO;IAE5C,MAAM,aAAS,4LAAA,CAAU;IAGzB,IAAA,0LAAA,EAAU,MAAM;QACd,MAAM,gBAA+B,CAAC,CAAA;QAGtC,MAAM,eAAyC;YAC7C;YACA;YACA;YACA;SACF;QAEA,KAAA,MAAW,SAAS,aAAc;YAChC,MAAM,cAAc,QAAQ,WAAA,CAAY,OAAO,MAAM;;gBACnD,MAAM,yCAAmB,QAAA,CAAS,uDAAjB,kBAAoB,QAAA,KAAY;gBACjD,OAAO,IAAA,CAAK,UAAe,OAAL,KAAK,GAAI;oBAC7B;gBACF,CAAC;YACH,CAAC;YACD,cAAc,IAAA,CAAK,WAAW;QAChC;QAEA,OAAO,MAAM;YACX,KAAA,MAAW,SAAS,cAAe,MAAM;QAC3C;IACF,GAAG;QAAC,OAAO;KAAC;IAEZ,MAAM,kBAAc,sLAAA,EAClB,IAAA,CAAO;YACL,IAAI,WAAU;gBACZ,OAAO,QAAQ,QAAA,CAAS,EAAG,QAAA;YAC7B;QACF,CAAA,GACA;QAAC,OAAO;KAAA;IAGV,MAAM,eAAW,8MAAA,MACf,+NAAA,EAAe;QACb,SAAS,QAAQ,QAAA;QACjB;IACF,CAAC;IAGH,MAAM,eAAW,4NAAA,EACf,aAAa,QAAA,CAAS,GAAA,CAAI,CAAC,IACzB,kBACE;YAAE;YAAkB,IAAI,EAAE,EAAA;YAAI;QAAY,GAC1C;YAAE,KAAK,EAAE,EAAA;QAAG;IAKlB,MAAM,YAAQ,sLAAA,EAA2B,MAAM;QAC7C,OAAO;YACL,YAAY,aAAa,UAAA;YACzB,WAAW,aAAa,SAAA;YACxB,WAAW,aAAa,SAAA;YACxB,cAAc,aAAa,YAAA;YAC3B,OAAO,aAAa,KAAA;YACpB,aAAa,aAAa,WAAA;YAC1B,QAAQ,aAAa,MAAA;YACrB,QAAQ,aAAa,MAAA;YAErB,UAAU,SAAS,KAAA;YACnB,UAAU,SAAS,KAAA;QACrB;IACF,GAAG;QAAC;QAAc;QAAU,SAAS,KAAK;KAAC;IAE3C,WAAO,sMAAA,EAAwB;QAC7B,UAAU,IAAM;QAEhB,UAAU,SAAS,GAAA;QAEnB,QAAQ,QAAQ,MAAA;QAChB,UAAU,QAAQ,QAAA;QAClB,oBAAoB,QAAQ,kBAAA;QAC5B,WAAW,QAAQ,SAAA;QACnB,iBAAiB,QAAQ,eAAA;QACzB,QAAQ,QAAQ,MAAA;QAChB,QAAQ,QAAQ,MAAA;QAChB,OAAO,QAAQ,KAAA;QACf,cAAc,QAAQ,YAAA;QAEtB,SAAS,CAAC,aAAa;YACrB,IAAI,QAAQ,UAAU;gBACpB,OAAO,SAAS,GAAA,CAAI;oBAAE,KAAK,SAAS,EAAA;gBAAG,CAAC;YAC1C,OAAO;gBACL,OAAO,SAAS,GAAA,CAAI,QAAQ;YAC9B;QACF;QAEA,uBAAuB,IAAM;IAC/B,CAAC;AACH","debugId":null}},
    {"offset": {"line": 1265, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/legacy-runtime/client/ThreadListRuntimeClient.ts"],"sourcesContent":["import { tapApi } from \"../../utils/tap-store\";\nimport { resource, tapInlineResource, tapMemo } from \"@assistant-ui/tap\";\nimport { ThreadListRuntime } from \"../runtime/ThreadListRuntime\";\nimport { tapSubscribable } from \"../util-hooks/tapSubscribable\";\nimport { ThreadListItemClient } from \"./ThreadListItemRuntimeClient\";\nimport { ThreadClient } from \"./ThreadRuntimeClient\";\nimport { tapLookupResources } from \"../../client/util-hooks/tapLookupResources\";\nimport {\n  ThreadListClientState,\n  ThreadListClientApi,\n} from \"../../client/types/ThreadList\";\n\nconst ThreadListItemClientById = resource(\n  ({ runtime, id }: { runtime: ThreadListRuntime; id: string }) => {\n    const threadListItemRuntime = tapMemo(\n      () => runtime.getItemById(id),\n      [runtime, id],\n    );\n    return tapInlineResource(\n      ThreadListItemClient({\n        runtime: threadListItemRuntime,\n      }),\n    );\n  },\n);\n\nexport const ThreadListClient = resource(\n  ({ runtime }: { runtime: ThreadListRuntime }) => {\n    const runtimeState = tapSubscribable(runtime);\n\n    const main = tapInlineResource(\n      ThreadClient({\n        runtime: runtime.main,\n      }),\n    );\n\n    const threadItems = tapLookupResources(\n      Object.keys(runtimeState.threadItems).map((id) =>\n        ThreadListItemClientById({ runtime, id }, { key: id }),\n      ),\n    );\n\n    const state = tapMemo<ThreadListClientState>(() => {\n      return {\n        mainThreadId: runtimeState.mainThreadId,\n        newThreadId: runtimeState.newThread ?? null,\n        isLoading: runtimeState.isLoading,\n        threadIds: runtimeState.threads,\n        archivedThreadIds: runtimeState.archivedThreads,\n        threadItems: threadItems.state,\n\n        main: main.state,\n      };\n    }, [runtimeState, threadItems.state, main.state]);\n\n    return tapApi<ThreadListClientApi>({\n      getState: () => state,\n\n      thread: () => main.api,\n\n      item: (threadIdOrOptions) => {\n        if (threadIdOrOptions === \"main\") {\n          return threadItems.api({ key: state.mainThreadId });\n        }\n\n        if (\"id\" in threadIdOrOptions) {\n          return threadItems.api({ key: threadIdOrOptions.id });\n        }\n\n        const { index, archived = false } = threadIdOrOptions;\n        const id = archived\n          ? state.archivedThreadIds[index]!\n          : state.threadIds[index]!;\n        return threadItems.api({ key: id });\n      },\n\n      switchToThread: (threadId) => {\n        runtime.switchToThread(threadId);\n      },\n      switchToNewThread: () => {\n        runtime.switchToNewThread();\n      },\n    });\n  },\n);\n"],"names":[],"mappings":";;;;;AAAA,SAAS,cAAc;AACvB,SAAS,UAAU,mBAAmB,eAAe;;;AAErD,SAAS,uBAAuB;AAChC,SAAS,4BAA4B;AACrC,SAAS,oBAAoB;AAC7B,SAAS,0BAA0B;;;;;;;AAMnC,IAAM,+BAA2B,mLAAA,EAC/B;QAAC,EAAE,OAAA,EAAS,EAAA,CAAG,CAAA,KAAkD;IAC/D,MAAM,4BAAwB,sLAAA,EAC5B,IAAM,QAAQ,WAAA,CAAY,EAAE,GAC5B;QAAC;QAAS,EAAE;KAAA;IAEd,WAAO,8MAAA,MACL,2OAAA,EAAqB;QACnB,SAAS;IACX,CAAC;AAEL;AAGK,IAAM,uBAAmB,mLAAA,EAC9B;QAAC,EAAE,OAAA,CAAQ,CAAA,KAAsC;IAC/C,MAAM,eAAe,qOAAA,EAAgB,OAAO;IAE5C,MAAM,WAAO,8MAAA,MACX,2NAAA,EAAa;QACX,SAAS,QAAQ,IAAA;IACnB,CAAC;IAGH,MAAM,kBAAc,4NAAA,EAClB,OAAO,IAAA,CAAK,aAAa,WAAW,EAAE,GAAA,CAAI,CAAC,KACzC,yBAAyB;YAAE;YAAS;QAAG,GAAG;YAAE,KAAK;QAAG,CAAC;IAIzD,MAAM,YAAQ,sLAAA,EAA+B,MAAM;YAGlC;QAFf,OAAO;YACL,cAAc,aAAa,YAAA;YAC3B,qDAA0B,SAAA,6EAAa;YACvC,WAAW,aAAa,SAAA;YACxB,WAAW,aAAa,OAAA;YACxB,mBAAmB,aAAa,eAAA;YAChC,aAAa,YAAY,KAAA;YAEzB,MAAM,KAAK,KAAA;QACb;IACF,GAAG;QAAC;QAAc,YAAY,KAAA;QAAO,KAAK,KAAK;KAAC;IAEhD,WAAO,sMAAA,EAA4B;QACjC,UAAU,IAAM;QAEhB,QAAQ,IAAM,KAAK,GAAA;QAEnB,MAAM,CAAC,sBAAsB;YAC3B,IAAI,sBAAsB,QAAQ;gBAChC,OAAO,YAAY,GAAA,CAAI;oBAAE,KAAK,MAAM,YAAA;gBAAa,CAAC;YACpD;YAEA,IAAI,QAAQ,mBAAmB;gBAC7B,OAAO,YAAY,GAAA,CAAI;oBAAE,KAAK,kBAAkB,EAAA;gBAAG,CAAC;YACtD;YAEA,MAAM,EAAE,KAAA,EAAO,WAAW,KAAA,CAAM,CAAA,GAAI;YACpC,MAAM,KAAK,WACP,MAAM,iBAAA,CAAkB,KAAK,CAAA,GAC7B,MAAM,SAAA,CAAU,KAAK,CAAA;YACzB,OAAO,YAAY,GAAA,CAAI;gBAAE,KAAK;YAAG,CAAC;QACpC;QAEA,gBAAgB,CAAC,aAAa;YAC5B,QAAQ,cAAA,CAAe,QAAQ;QACjC;QACA,mBAAmB,MAAM;YACvB,QAAQ,iBAAA,CAAkB;QAC5B;IACF,CAAC;AACH","debugId":null}},
    {"offset": {"line": 1356, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/legacy-runtime/AssistantRuntimeProvider.tsx"],"sourcesContent":["\"use client\";\n\nimport { FC, memo, PropsWithChildren } from \"react\";\nimport { AssistantProvider } from \"../context/react/AssistantApiContext\";\nimport { AssistantRuntime } from \"./runtime/AssistantRuntime\";\nimport { AssistantRuntimeCore } from \"./runtime-cores/core/AssistantRuntimeCore\";\nimport { useAssistantClient } from \"../client/AssistantClient\";\nimport { ThreadListClient } from \"./client/ThreadListRuntimeClient\";\n\nexport namespace AssistantProvider {\n  export type Props = PropsWithChildren<{\n    /**\n     * The runtime to provide to the rest of your app.\n     */\n    runtime: AssistantRuntime;\n  }>;\n}\n\nconst getRenderComponent = (runtime: AssistantRuntime) => {\n  return (runtime as { _core?: AssistantRuntimeCore })._core?.RenderComponent;\n};\n\nexport const AssistantRuntimeProviderImpl: FC<AssistantProvider.Props> = ({\n  children,\n  runtime,\n}) => {\n  const api = useAssistantClient({\n    threads: ThreadListClient({\n      runtime: runtime.threads,\n    }),\n    registerModelContextProvider: runtime.registerModelContextProvider,\n    __internal_runtime: runtime,\n  });\n\n  const RenderComponent = getRenderComponent(runtime);\n\n  return (\n    <AssistantProvider api={api}>\n      {RenderComponent && <RenderComponent />}\n\n      {children}\n    </AssistantProvider>\n  );\n};\n\nexport const AssistantRuntimeProvider = memo(AssistantRuntimeProviderImpl);\n"],"names":[],"mappings":";;;;;;;AAEA,SAAa,YAA+B;AAC5C,SAAS,yBAAyB;AAGlC,SAAS,0BAA0B;AACnC,SAAS,wBAAwB;AA8B7B,SACsB,KADtB;;;;;;;AAnBJ,IAAM,qBAAqB,CAAC,YAA8B;;IACxD,iCAAqD,KAAA,mDAA7C,eAAoD,eAAA;AAC9D;AAEO,IAAM,+BAA4D;QAAC,EACxE,QAAA,EACA,OAAA,EACF,KAAM;IACJ,MAAM,UAAM,wMAAA,EAAmB;QAC7B,aAAS,mOAAA,EAAiB;YACxB,SAAS,QAAQ,OAAA;QACnB,CAAC;QACD,8BAA8B,QAAQ,4BAAA;QACtC,oBAAoB;IACtB,CAAC;IAED,MAAM,kBAAkB,mBAAmB,OAAO;IAElD,OACE,aAAA,GAAA,IAAA,8KAAA,EAAC,qNAAA,EAAA;QAAkB;QAChB,UAAA;YAAA,mBAAmB,aAAA,GAAA,IAAA,6KAAA,EAAC,iBAAA,CAAA,CAAgB;YAEpC;SAAA;IAAA,CACH;AAEJ;AAEO,IAAM,+BAA2B,qKAAA,EAAK,4BAA4B","debugId":null}},
    {"offset": {"line": 1403, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/utils/idUtils.tsx"],"sourcesContent":["import { customAlphabet } from \"nanoid/non-secure\";\n\nexport const generateId = customAlphabet(\n  \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\",\n  7,\n);\n\nconst optimisticPrefix = \"__optimistic__\";\nexport const generateOptimisticId = () => `${optimisticPrefix}${generateId()}`;\nexport const isOptimisticId = (id: string) => id.startsWith(optimisticPrefix);\n"],"names":[],"mappings":";;;;;;;;;AAAA,SAAS,sBAAsB;;AAExB,IAAM,iBAAa,qKAAA,EACxB,kEACA;AAGF,IAAM,mBAAmB;AAClB,IAAM,uBAAuB,IAAM,UAAG,gBAAgB,EAAe,OAAZ,WAAW,CAAC;AACrE,IAAM,iBAAiB,CAAC,KAAe,GAAG,UAAA,CAAW,gBAAgB","debugId":null}},
    {"offset": {"line": 1424, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/legacy-runtime/runtime-cores/external-store/ThreadMessageLike.tsx"],"sourcesContent":["import { parsePartialJsonObject } from \"assistant-stream/utils\";\nimport { generateId } from \"../../../utils/idUtils\";\nimport {\n  MessageStatus,\n  TextMessagePart,\n  ImageMessagePart,\n  ThreadMessage,\n  ThreadAssistantMessagePart,\n  ThreadAssistantMessage,\n  ThreadUserMessagePart,\n  ThreadUserMessage,\n  ThreadSystemMessage,\n  CompleteAttachment,\n  FileMessagePart,\n  Unstable_AudioMessagePart,\n} from \"../../../types\";\nimport {\n  ReasoningMessagePart,\n  SourceMessagePart,\n  ThreadStep,\n} from \"../../../types/AssistantTypes\";\nimport { ReadonlyJSONObject, ReadonlyJSONValue } from \"assistant-stream/utils\";\n\nexport type ThreadMessageLike = {\n  readonly role: \"assistant\" | \"user\" | \"system\";\n  readonly content:\n    | string\n    | readonly (\n        | TextMessagePart\n        | ReasoningMessagePart\n        | SourceMessagePart\n        | ImageMessagePart\n        | FileMessagePart\n        | Unstable_AudioMessagePart\n        | {\n            readonly type: \"tool-call\";\n            readonly toolCallId?: string;\n            readonly toolName: string;\n            readonly args?: ReadonlyJSONObject;\n            readonly argsText?: string;\n            readonly artifact?: any;\n            readonly result?: any | undefined;\n            readonly isError?: boolean | undefined;\n            readonly parentId?: string | undefined;\n          }\n      )[];\n  readonly id?: string | undefined;\n  readonly createdAt?: Date | undefined;\n  readonly status?: MessageStatus | undefined;\n  readonly attachments?: readonly CompleteAttachment[] | undefined;\n  readonly metadata?:\n    | {\n        readonly unstable_state?: ReadonlyJSONValue;\n        readonly unstable_annotations?:\n          | readonly ReadonlyJSONValue[]\n          | undefined;\n        readonly unstable_data?: readonly ReadonlyJSONValue[] | undefined;\n        readonly steps?: readonly ThreadStep[] | undefined;\n        readonly custom?: Record<string, unknown> | undefined;\n      }\n    | undefined;\n};\n\nexport const fromThreadMessageLike = (\n  like: ThreadMessageLike,\n  fallbackId: string,\n  fallbackStatus: MessageStatus,\n): ThreadMessage => {\n  const { role, id, createdAt, attachments, status, metadata } = like;\n  const common = {\n    id: id ?? fallbackId,\n    createdAt: createdAt ?? new Date(),\n  };\n\n  const content =\n    typeof like.content === \"string\"\n      ? [{ type: \"text\" as const, text: like.content }]\n      : like.content;\n\n  const sanitizeImageContent = ({\n    image,\n    ...rest\n  }: ImageMessagePart): ImageMessagePart | null => {\n    const match = image.match(\n      /^data:image\\/(png|jpeg|jpg|gif|webp);base64,(.*)$/,\n    );\n    if (match) {\n      return { ...rest, image };\n    }\n    console.warn(`Invalid image data format detected`);\n    return null;\n  };\n\n  if (role !== \"user\" && attachments?.length)\n    throw new Error(\"attachments are only supported for user messages\");\n\n  if (role !== \"assistant\" && status)\n    throw new Error(\"status is only supported for assistant messages\");\n\n  if (role !== \"assistant\" && metadata?.steps)\n    throw new Error(\"metadata.steps is only supported for assistant messages\");\n\n  switch (role) {\n    case \"assistant\":\n      return {\n        ...common,\n        role,\n        content: content\n          .map((part): ThreadAssistantMessagePart | null => {\n            const type = part.type;\n            switch (type) {\n              case \"text\":\n              case \"reasoning\":\n                if (part.text.trim().length === 0) return null;\n                return part;\n\n              case \"file\":\n              case \"source\":\n                return part;\n\n              case \"image\":\n                return sanitizeImageContent(part);\n\n              case \"tool-call\": {\n                const { parentId, ...basePart } = part;\n                const commonProps = {\n                  ...basePart,\n                  toolCallId: part.toolCallId ?? \"tool-\" + generateId(),\n                  ...(parentId !== undefined && { parentId }),\n                };\n\n                if (part.args) {\n                  return {\n                    ...commonProps,\n                    args: part.args,\n                    argsText: part.argsText ?? JSON.stringify(part.args),\n                  };\n                }\n                return {\n                  ...commonProps,\n                  args: parsePartialJsonObject(part.argsText ?? \"\") ?? {},\n                  argsText: part.argsText ?? \"\",\n                };\n              }\n\n              default: {\n                const unhandledType: \"audio\" = type;\n                throw new Error(\n                  `Unsupported assistant message part type: ${unhandledType}`,\n                );\n              }\n            }\n          })\n          .filter((c) => !!c),\n        status: status ?? fallbackStatus,\n        metadata: {\n          unstable_state: metadata?.unstable_state ?? null,\n          unstable_annotations: metadata?.unstable_annotations ?? [],\n          unstable_data: metadata?.unstable_data ?? [],\n          custom: metadata?.custom ?? {},\n          steps: metadata?.steps ?? [],\n        },\n      } satisfies ThreadAssistantMessage;\n\n    case \"user\":\n      return {\n        ...common,\n        role,\n        content: content.map((part): ThreadUserMessagePart => {\n          const type = part.type;\n          switch (type) {\n            case \"text\":\n            case \"image\":\n            case \"audio\":\n            case \"file\":\n              return part;\n\n            default: {\n              const unhandledType: \"tool-call\" | \"reasoning\" | \"source\" = type;\n              throw new Error(\n                `Unsupported user message part type: ${unhandledType}`,\n              );\n            }\n          }\n        }),\n        attachments: attachments ?? [],\n        metadata: {\n          custom: metadata?.custom ?? {},\n        },\n      } satisfies ThreadUserMessage;\n\n    case \"system\":\n      if (content.length !== 1 || content[0]!.type !== \"text\")\n        throw new Error(\n          \"System messages must have exactly one text message part.\",\n        );\n\n      return {\n        ...common,\n        role,\n        content: content as [TextMessagePart],\n        metadata: {\n          custom: metadata?.custom ?? {},\n        },\n      } satisfies ThreadSystemMessage;\n\n    default: {\n      const unsupportedRole: never = role;\n      throw new Error(`Unknown message role: ${unsupportedRole}`);\n    }\n  }\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1569, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/utils/json/is-json.ts"],"sourcesContent":["import {\n  ReadonlyJSONArray,\n  ReadonlyJSONObject,\n  ReadonlyJSONValue,\n} from \"assistant-stream/utils\";\n\nexport function isJSONValue(\n  value: unknown,\n  currentDepth: number = 0,\n): value is ReadonlyJSONValue {\n  // Protect against too deep recursion\n  if (currentDepth > 100) {\n    return false;\n  }\n\n  if (\n    value === null ||\n    typeof value === \"string\" ||\n    typeof value === \"boolean\"\n  ) {\n    return true;\n  }\n\n  // Handle special number cases\n  if (typeof value === \"number\") {\n    return !Number.isNaN(value) && Number.isFinite(value);\n  }\n\n  if (Array.isArray(value)) {\n    return value.every((item) => isJSONValue(item, currentDepth + 1));\n  }\n\n  if (typeof value === \"object\") {\n    return Object.entries(value).every(\n      ([key, val]) =>\n        typeof key === \"string\" && isJSONValue(val, currentDepth + 1),\n    );\n  }\n\n  return false;\n}\n\nexport function isJSONArray(value: unknown): value is ReadonlyJSONArray {\n  return Array.isArray(value) && value.every(isJSONValue);\n}\n\nexport function isJSONObject(value: unknown): value is ReadonlyJSONObject {\n  return (\n    value != null &&\n    typeof value === \"object\" &&\n    Object.entries(value).every(\n      ([key, val]) => typeof key === \"string\" && isJSONValue(val),\n    )\n  );\n}\n"],"names":[],"mappings":";;;;;;;;;AAMO,SAAS,YACd,KAAA;uBACA,iEAAuB,GACK;IAE5B,IAAI,eAAe,KAAK;QACtB,OAAO;IACT;IAEA,IACE,UAAU,QACV,OAAO,UAAU,YACjB,OAAO,UAAU,WACjB;QACA,OAAO;IACT;IAGA,IAAI,OAAO,UAAU,UAAU;QAC7B,OAAO,CAAC,OAAO,KAAA,CAAM,KAAK,KAAK,OAAO,QAAA,CAAS,KAAK;IACtD;IAEA,IAAI,MAAM,OAAA,CAAQ,KAAK,GAAG;QACxB,OAAO,MAAM,KAAA,CAAM,CAAC,OAAS,YAAY,MAAM,eAAe,CAAC,CAAC;IAClE;IAEA,IAAI,OAAO,UAAU,UAAU;QAC7B,OAAO,OAAO,OAAA,CAAQ,KAAK,EAAE,KAAA,CAC3B;gBAAC,CAAC,KAAK,GAAG,CAAA;mBACR,OAAO,QAAQ,YAAY,YAAY,KAAK,eAAe,CAAC;;IAElE;IAEA,OAAO;AACT;AAEO,SAAS,YAAY,KAAA,EAA4C;IACtE,OAAO,MAAM,OAAA,CAAQ,KAAK,KAAK,MAAM,KAAA,CAAM,WAAW;AACxD;AAEO,SAAS,aAAa,KAAA,EAA6C;IACxE,OACE,SAAS,QACT,OAAO,UAAU,YACjB,OAAO,OAAA,CAAQ,KAAK,EAAE,KAAA,CACpB;YAAC,CAAC,KAAK,GAAG,CAAA;eAAM,OAAO,QAAQ,YAAY,YAAY,GAAG;;AAGhE","debugId":null}},
    {"offset": {"line": 1615, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/legacy-runtime/cloud/auiV0.ts"],"sourcesContent":["import { ThreadMessage } from \"../../types\";\nimport { MessageStatus } from \"../../types/AssistantTypes\";\nimport { fromThreadMessageLike } from \"../runtime-cores/external-store/ThreadMessageLike\";\nimport { CloudMessage } from \"assistant-cloud\";\nimport { isJSONValue } from \"../../utils/json/is-json\";\nimport { ReadonlyJSONObject, ReadonlyJSONValue } from \"assistant-stream/utils\";\nimport { ExportedMessageRepositoryItem } from \"../runtime-cores/utils/MessageRepository\";\n\ntype AuiV0MessageMessagePart =\n  | {\n      readonly type: \"text\";\n      readonly text: string;\n    }\n  | {\n      readonly type: \"reasoning\";\n      readonly text: string;\n    }\n  | {\n      readonly type: \"source\";\n      readonly sourceType: \"url\";\n      readonly id: string;\n      readonly url: string;\n      readonly title?: string;\n    }\n  | {\n      readonly type: \"tool-call\";\n      readonly toolCallId: string;\n      readonly toolName: string;\n      readonly args: ReadonlyJSONObject;\n      readonly result?: ReadonlyJSONValue;\n      readonly isError?: true;\n    }\n  | {\n      readonly type: \"tool-call\";\n      readonly toolCallId: string;\n      readonly toolName: string;\n      readonly argsText: string;\n      readonly result?: ReadonlyJSONValue;\n      readonly isError?: true;\n    };\n\ntype AuiV0Message = {\n  readonly role: \"assistant\" | \"user\" | \"system\";\n  readonly status?: MessageStatus;\n  readonly content: readonly AuiV0MessageMessagePart[];\n  readonly metadata: {\n    readonly unstable_state?: ReadonlyJSONValue;\n    readonly unstable_annotations: readonly ReadonlyJSONValue[];\n    readonly unstable_data: readonly ReadonlyJSONValue[];\n    readonly steps: readonly {\n      readonly usage?: {\n        readonly promptTokens: number;\n        readonly completionTokens: number;\n      };\n    }[];\n    readonly custom: ReadonlyJSONObject;\n  };\n};\n\nexport const auiV0Encode = (message: ThreadMessage): AuiV0Message => {\n  // TODO attachments are currently intentionally ignored\n  // info: ID and createdAt are ignored (we use the server value instead)\n  return {\n    role: message.role,\n    content: message.content.map((part) => {\n      const type = part.type;\n      switch (type) {\n        case \"text\": {\n          return {\n            type: \"text\",\n            text: part.text,\n          };\n        }\n\n        case \"reasoning\": {\n          return {\n            type: \"reasoning\",\n            text: part.text,\n          };\n        }\n\n        case \"source\": {\n          return {\n            type: \"source\",\n            sourceType: part.sourceType,\n            id: part.id,\n            url: part.url,\n            ...(part.title ? { title: part.title } : undefined),\n          };\n        }\n\n        case \"tool-call\": {\n          if (!isJSONValue(part.result)) {\n            console.warn(\n              \"tool-call result is not JSON! \" + JSON.stringify(part),\n            );\n          }\n          return {\n            type: \"tool-call\",\n            toolCallId: part.toolCallId,\n            toolName: part.toolName,\n            ...(JSON.stringify(part.args) === part.argsText\n              ? {\n                  args: part.args,\n                }\n              : { argsText: part.argsText }),\n            ...(part.result\n              ? { result: part.result as ReadonlyJSONValue }\n              : {}),\n            ...(part.isError ? { isError: true } : {}),\n          };\n        }\n\n        default: {\n          const unhandledType: \"image\" | \"file\" | \"audio\" = type;\n          throw new Error(\n            `Message part type not supported by aui/v0: ${unhandledType}`,\n          );\n        }\n      }\n    }),\n    metadata: message.metadata as AuiV0Message[\"metadata\"],\n    ...(message.status\n      ? {\n          status:\n            message.status?.type === \"running\"\n              ? {\n                  type: \"incomplete\",\n                  reason: \"cancelled\",\n                }\n              : message.status,\n        }\n      : undefined),\n  };\n};\n\nexport const auiV0Decode = (\n  cloudMessage: CloudMessage & { format: \"aui/v0\" },\n): ExportedMessageRepositoryItem => {\n  const payload = cloudMessage.content as unknown as AuiV0Message;\n  const message = fromThreadMessageLike(\n    {\n      id: cloudMessage.id,\n      createdAt: cloudMessage.created_at,\n      ...payload,\n    },\n    cloudMessage.id,\n    {\n      type: \"complete\",\n      reason: \"unknown\",\n    },\n  );\n\n  return {\n    parentId: cloudMessage.parent_id,\n    message,\n  };\n};\n"],"names":[],"mappings":";;;;;;;AAEA,SAAS,6BAA6B;AAEtC,SAAS,mBAAmB;;;AAuDrB,IAAM,cAAc,CAAC,YAAyC;QAkEzD;IA/DV,OAAO;QACL,MAAM,QAAQ,IAAA;QACd,SAAS,QAAQ,OAAA,CAAQ,GAAA,CAAI,CAAC,SAAS;YACrC,MAAM,OAAO,KAAK,IAAA;YAClB,OAAQ,MAAM;gBACZ,KAAK;oBAAQ;wBACX,OAAO;4BACL,MAAM;4BACN,MAAM,KAAK,IAAA;wBACb;oBACF;gBAEA,KAAK;oBAAa;wBAChB,OAAO;4BACL,MAAM;4BACN,MAAM,KAAK,IAAA;wBACb;oBACF;gBAEA,KAAK;oBAAU;wBACb,OAAO;4BACL,MAAM;4BACN,YAAY,KAAK,UAAA;4BACjB,IAAI,KAAK,EAAA;4BACT,KAAK,KAAK,GAAA;4BACV,GAAI,KAAK,KAAA,GAAQ;gCAAE,OAAO,KAAK,KAAA;4BAAM,IAAI,KAAA,CAAA;wBAC3C;oBACF;gBAEA,KAAK;oBAAa;wBAChB,IAAI,KAAC,mMAAA,EAAY,KAAK,MAAM,GAAG;4BAC7B,QAAQ,IAAA,CACN,mCAAmC,KAAK,SAAA,CAAU,IAAI;wBAE1D;wBACA,OAAO;4BACL,MAAM;4BACN,YAAY,KAAK,UAAA;4BACjB,UAAU,KAAK,QAAA;4BACf,GAAI,KAAK,SAAA,CAAU,KAAK,IAAI,MAAM,KAAK,QAAA,GACnC;gCACE,MAAM,KAAK,IAAA;4BACb,IACA;gCAAE,UAAU,KAAK,QAAA;4BAAS,CAAA;4BAC9B,GAAI,KAAK,MAAA,GACL;gCAAE,QAAQ,KAAK,MAAA;4BAA4B,IAC3C,CAAC,CAAA;4BACL,GAAI,KAAK,OAAA,GAAU;gCAAE,SAAS;4BAAK,IAAI,CAAC,CAAA;wBAC1C;oBACF;gBAEA;oBAAS;wBACP,MAAM,gBAA4C;wBAClD,MAAM,IAAI,MACR,8CAA2D,OAAb,aAAa;oBAE/D;YACF;QACF,CAAC;QACD,UAAU,QAAQ,QAAA;QAClB,GAAI,QAAQ,MAAA,GACR;YACE,oCACU,MAAA,oEAAQ,IAAA,MAAS,YACrB;gBACE,MAAM;gBACN,QAAQ;YACV,IACA,QAAQ,MAAA;QAChB,IACA,KAAA,CAAA;IACN;AACF;AAEO,IAAM,cAAc,CACzB,iBACkC;IAClC,MAAM,UAAU,aAAa,OAAA;IAC7B,MAAM,cAAU,iQAAA,EACd;QACE,IAAI,aAAa,EAAA;QACjB,WAAW,aAAa,UAAA;QACxB,GAAG,OAAA;IACL,GACA,aAAa,EAAA,EACb;QACE,MAAM;QACN,QAAQ;IACV;IAGF,OAAO;QACL,UAAU,aAAa,SAAA;QACvB;IACF;AACF","debugId":null}},
    {"offset": {"line": 1718, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/legacy-runtime/cloud/AssistantCloudThreadHistoryAdapter.tsx"],"sourcesContent":["import { RefObject, useState } from \"react\";\nimport { ThreadHistoryAdapter } from \"../runtime-cores/adapters/thread-history/ThreadHistoryAdapter\";\nimport { ExportedMessageRepositoryItem } from \"../runtime-cores/utils/MessageRepository\";\nimport { AssistantCloud } from \"assistant-cloud\";\nimport { auiV0Decode, auiV0Encode } from \"./auiV0\";\nimport {\n  MessageFormatAdapter,\n  MessageFormatItem,\n  MessageFormatRepository,\n  MessageStorageEntry,\n} from \"../runtime-cores/adapters/thread-history/MessageFormatAdapter\";\nimport { GenericThreadHistoryAdapter } from \"../runtime-cores/adapters/thread-history/ThreadHistoryAdapter\";\nimport { ReadonlyJSONObject } from \"assistant-stream/utils\";\nimport {\n  AssistantApi,\n  useAssistantApi,\n} from \"../../context/react/AssistantApiContext\";\nimport { ThreadListItemClientApi } from \"../../client/types/ThreadListItem\";\n\n// Global WeakMap to store message ID mappings across adapter instances\nconst globalMessageIdMapping = new WeakMap<\n  ThreadListItemClientApi,\n  Record<string, string | Promise<string>>\n>();\n\nclass FormattedThreadHistoryAdapter<TMessage, TStorageFormat>\n  implements GenericThreadHistoryAdapter<TMessage>\n{\n  constructor(\n    private parent: AssistantCloudThreadHistoryAdapter,\n    private formatAdapter: MessageFormatAdapter<TMessage, TStorageFormat>,\n  ) {}\n\n  async append(item: MessageFormatItem<TMessage>) {\n    // Encode the message using the format adapter\n    const encoded = this.formatAdapter.encode(item);\n    const messageId = this.formatAdapter.getId(item.message);\n\n    // Delegate to parent's internal append method with the encoded format\n    return this.parent._appendWithFormat(\n      item.parentId,\n      messageId,\n      this.formatAdapter.format,\n      encoded,\n    );\n  }\n\n  async load(): Promise<MessageFormatRepository<TMessage>> {\n    // Delegate to parent's internal load method with format filter\n    return this.parent._loadWithFormat(\n      this.formatAdapter.format,\n      (message: MessageStorageEntry<TStorageFormat>) =>\n        this.formatAdapter.decode(message),\n    );\n  }\n}\n\nclass AssistantCloudThreadHistoryAdapter implements ThreadHistoryAdapter {\n  constructor(\n    private cloudRef: RefObject<AssistantCloud>,\n    private store: AssistantApi,\n  ) {}\n\n  private get _getIdForLocalId(): Record<string, string | Promise<string>> {\n    if (!globalMessageIdMapping.has(this.store.threadListItem())) {\n      globalMessageIdMapping.set(this.store.threadListItem(), {});\n    }\n    return globalMessageIdMapping.get(this.store.threadListItem())!;\n  }\n\n  withFormat<TMessage, TStorageFormat>(\n    formatAdapter: MessageFormatAdapter<TMessage, TStorageFormat>,\n  ): GenericThreadHistoryAdapter<TMessage> {\n    return new FormattedThreadHistoryAdapter(this, formatAdapter);\n  }\n\n  async append({ parentId, message }: ExportedMessageRepositoryItem) {\n    const { remoteId } = await this.store.threadListItem().initialize();\n    const task = this.cloudRef.current.threads.messages\n      .create(remoteId, {\n        parent_id: parentId\n          ? ((await this._getIdForLocalId[parentId]) ?? parentId)\n          : null,\n        format: \"aui/v0\",\n        content: auiV0Encode(message),\n      })\n      .then(({ message_id }) => {\n        this._getIdForLocalId[message.id] = message_id;\n        return message_id;\n      });\n\n    this._getIdForLocalId[message.id] = task;\n\n    return task.then(() => {});\n  }\n\n  async load() {\n    const remoteId = this.store.threadListItem().getState().remoteId;\n    if (!remoteId) return { messages: [] };\n    const { messages } = await this.cloudRef.current.threads.messages.list(\n      remoteId,\n      {\n        format: \"aui/v0\",\n      },\n    );\n    const payload = {\n      messages: messages\n        .filter(\n          (m): m is typeof m & { format: \"aui/v0\" } => m.format === \"aui/v0\",\n        )\n        .map(auiV0Decode)\n        .reverse(),\n    };\n    return payload;\n  }\n\n  // Internal methods for FormattedThreadHistoryAdapter\n  async _appendWithFormat<T>(\n    parentId: string | null,\n    messageId: string,\n    format: string,\n    content: T,\n  ) {\n    const { remoteId } = await this.store.threadListItem().initialize();\n\n    const task = this.cloudRef.current.threads.messages\n      .create(remoteId, {\n        parent_id: parentId\n          ? ((await this._getIdForLocalId[parentId]) ?? parentId)\n          : null,\n        format,\n        content: content as ReadonlyJSONObject,\n      })\n      .then(({ message_id }) => {\n        this._getIdForLocalId[messageId] = message_id;\n        return message_id;\n      });\n\n    this._getIdForLocalId[messageId] = task;\n\n    return task.then(() => {});\n  }\n\n  async _loadWithFormat<TMessage, TStorageFormat>(\n    format: string,\n    decoder: (\n      message: MessageStorageEntry<TStorageFormat>,\n    ) => MessageFormatItem<TMessage>,\n  ): Promise<MessageFormatRepository<TMessage>> {\n    const remoteId = this.store.threadListItem().getState().remoteId;\n    if (!remoteId) return { messages: [] };\n\n    const { messages } = await this.cloudRef.current.threads.messages.list(\n      remoteId,\n      {\n        format,\n      },\n    );\n\n    return {\n      messages: messages\n        .filter((m) => m.format === format)\n        .map((m) =>\n          decoder({\n            id: m.id,\n            parent_id: m.parent_id,\n            format: m.format,\n            content: m.content as TStorageFormat,\n          }),\n        )\n        .reverse(),\n    };\n  }\n}\n\nexport const useAssistantCloudThreadHistoryAdapter = (\n  cloudRef: RefObject<AssistantCloud>,\n): ThreadHistoryAdapter => {\n  const store = useAssistantApi();\n  const [adapter] = useState(\n    () => new AssistantCloudThreadHistoryAdapter(cloudRef, store),\n  );\n\n  return adapter;\n};\n"],"names":[],"mappings":";;;;;AAAA,SAAoB,gBAAgB;AAIpC,SAAS,aAAa,mBAAmB;AASzC;;;;AAOA,IAAM,yBAAyB,aAAA,GAAA,IAAI,QAGjC;AAEF,IAAM,gCAAN,MAEA;IAME,MAAM,OAAO,IAAA,EAAmC;QAE9C,MAAM,UAAU,IAAA,CAAK,aAAA,CAAc,MAAA,CAAO,IAAI;QAC9C,MAAM,YAAY,IAAA,CAAK,aAAA,CAAc,KAAA,CAAM,KAAK,OAAO;QAGvD,OAAO,IAAA,CAAK,MAAA,CAAO,iBAAA,CACjB,KAAK,QAAA,EACL,WACA,IAAA,CAAK,aAAA,CAAc,MAAA,EACnB;IAEJ;IAEA,MAAM,OAAmD;QAEvD,OAAO,IAAA,CAAK,MAAA,CAAO,eAAA,CACjB,IAAA,CAAK,aAAA,CAAc,MAAA,EACnB,CAAC,UACC,IAAA,CAAK,aAAA,CAAc,MAAA,CAAO,OAAO;IAEvC;IA1BA,YACU,MAAA,EACA,aAAA,CACR;QAFQ,IAAA,CAAA,MAAA,GAAA;QACA,IAAA,CAAA,aAAA,GAAA;IACP;AAwBL;AAEA,IAAM,qCAAN,MAAyE;IAMvE,IAAY,mBAA6D;QACvE,IAAI,CAAC,uBAAuB,GAAA,CAAI,IAAA,CAAK,KAAA,CAAM,cAAA,CAAe,CAAC,GAAG;YAC5D,uBAAuB,GAAA,CAAI,IAAA,CAAK,KAAA,CAAM,cAAA,CAAe,GAAG,CAAC,CAAC;QAC5D;QACA,OAAO,uBAAuB,GAAA,CAAI,IAAA,CAAK,KAAA,CAAM,cAAA,CAAe,CAAC;IAC/D;IAEA,WACE,aAAA,EACuC;QACvC,OAAO,IAAI,8BAA8B,IAAA,EAAM,aAAa;IAC9D;IAEA,MAAM,YAA2B,EAAkC;YAAtD,EAAE,QAAA,EAAU,OAAA,CAAQ,CAAA;QAC/B,MAAM,EAAE,QAAA,CAAS,CAAA,GAAI,MAAM,IAAA,CAAK,KAAA,CAAM,cAAA,CAAe,EAAE,UAAA,CAAW;YAIxD;QAHV,MAAM,OAAO,IAAA,CAAK,QAAA,CAAS,OAAA,CAAQ,OAAA,CAAQ,QAAA,CACxC,MAAA,CAAO,UAAU;YAChB,WAAW,yBACC,IAAA,CAAK,gBAAA,CAAiB,QAAQ,CAAA,uCAAM,WAC5C;YACJ,QAAQ;YACR,aAAS,2MAAA,EAAY,OAAO;QAC9B,CAAC,EACA,IAAA,CAAK;gBAAC,EAAE,UAAA,CAAW,CAAA,KAAM;YACxB,IAAA,CAAK,gBAAA,CAAiB,QAAQ,EAAE,CAAA,GAAI;YACpC,OAAO;QACT,CAAC;QAEH,IAAA,CAAK,gBAAA,CAAiB,QAAQ,EAAE,CAAA,GAAI;QAEpC,OAAO,KAAK,IAAA,CAAK,KAAO,CAAD,AAAE;IAC3B;IAEA,MAAM,OAAO;QACX,MAAM,WAAW,IAAA,CAAK,KAAA,CAAM,cAAA,CAAe,EAAE,QAAA,CAAS,EAAE,QAAA;QACxD,IAAI,CAAC,SAAU,CAAA,OAAO;YAAE,UAAU,CAAC,CAAA;QAAE;QACrC,MAAM,EAAE,QAAA,CAAS,CAAA,GAAI,MAAM,IAAA,CAAK,QAAA,CAAS,OAAA,CAAQ,OAAA,CAAQ,QAAA,CAAS,IAAA,CAChE,UACA;YACE,QAAQ;QACV;QAEF,MAAM,UAAU;YACd,UAAU,SACP,MAAA,CACC,CAAC,IAA4C,EAAE,MAAA,KAAW,UAE3D,GAAA,CAAI,2MAAW,EACf,OAAA,CAAQ;QACb;QACA,OAAO;IACT;IAAA,qDAAA;IAGA,MAAM,kBACJ,QAAA,EACA,SAAA,EACA,MAAA,EACA,OAAA,EACA;QACA,MAAM,EAAE,QAAA,CAAS,CAAA,GAAI,MAAM,IAAA,CAAK,KAAA,CAAM,cAAA,CAAe,EAAE,UAAA,CAAW;YAKxD;QAHV,MAAM,OAAO,IAAA,CAAK,QAAA,CAAS,OAAA,CAAQ,OAAA,CAAQ,QAAA,CACxC,MAAA,CAAO,UAAU;YAChB,WAAW,yBACC,IAAA,CAAK,gBAAA,CAAiB,QAAQ,CAAA,uCAAM,WAC5C;YACJ;YACA;QACF,CAAC,EACA,IAAA,CAAK;gBAAC,EAAE,UAAA,CAAW,CAAA,KAAM;YACxB,IAAA,CAAK,gBAAA,CAAiB,SAAS,CAAA,GAAI;YACnC,OAAO;QACT,CAAC;QAEH,IAAA,CAAK,gBAAA,CAAiB,SAAS,CAAA,GAAI;QAEnC,OAAO,KAAK,IAAA,CAAK,KAAO,CAAC,AAAF;IACzB;IAEA,MAAM,gBACJ,MAAA,EACA,OAAA,EAG4C;QAC5C,MAAM,WAAW,IAAA,CAAK,KAAA,CAAM,cAAA,CAAe,EAAE,QAAA,CAAS,EAAE,QAAA;QACxD,IAAI,CAAC,SAAU,CAAA,OAAO;YAAE,UAAU,CAAC,CAAA;QAAE;QAErC,MAAM,EAAE,QAAA,CAAS,CAAA,GAAI,MAAM,IAAA,CAAK,QAAA,CAAS,OAAA,CAAQ,OAAA,CAAQ,QAAA,CAAS,IAAA,CAChE,UACA;YACE;QACF;QAGF,OAAO;YACL,UAAU,SACP,MAAA,CAAO,CAAC,IAAM,EAAE,MAAA,KAAW,MAAM,EACjC,GAAA,CAAI,CAAC,IACJ,QAAQ;oBACN,IAAI,EAAE,EAAA;oBACN,WAAW,EAAE,SAAA;oBACb,QAAQ,EAAE,MAAA;oBACV,SAAS,EAAE,OAAA;gBACb,CAAC,GAEF,OAAA,CAAQ;QACb;IACF;IAlHA,YACU,QAAA,EACA,KAAA,CACR;QAFQ,IAAA,CAAA,QAAA,GAAA;QACA,IAAA,CAAA,KAAA,GAAA;IACP;AAgHL;AAEO,IAAM,wCAAwC,CACnD,aACyB;IACzB,MAAM,YAAQ,mNAAA,CAAgB;IAC9B,MAAM,CAAC,OAAO,CAAA,OAAI,yKAAA;0DAChB,IAAM,IAAI,mCAAmC,UAAU,KAAK;;IAG9D,OAAO;AACT","debugId":null}},
    {"offset": {"line": 1834, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/legacy-runtime/runtime-cores/adapters/RuntimeAdapterProvider.tsx"],"sourcesContent":["\"use client\";\n\nimport { createContext, FC, ReactNode, useContext } from \"react\";\nimport { ThreadHistoryAdapter } from \"./thread-history/ThreadHistoryAdapter\";\nimport { AttachmentAdapter } from \"./attachment/AttachmentAdapter\";\nimport { ModelContextProvider } from \"../../../model-context\";\n\nexport type RuntimeAdapters = {\n  modelContext?: ModelContextProvider;\n  history?: ThreadHistoryAdapter;\n  attachments?: AttachmentAdapter;\n};\n\nconst RuntimeAdaptersContext = createContext<RuntimeAdapters | null>(null);\n\nnamespace RuntimeAdapterProvider {\n  export type Props = {\n    adapters: RuntimeAdapters;\n    children: ReactNode;\n  };\n}\n\nexport const RuntimeAdapterProvider: FC<RuntimeAdapterProvider.Props> = ({\n  adapters,\n  children,\n}) => {\n  const context = useContext(RuntimeAdaptersContext);\n  return (\n    <RuntimeAdaptersContext.Provider\n      value={{\n        ...context,\n        ...adapters,\n      }}\n    >\n      {children}\n    </RuntimeAdaptersContext.Provider>\n  );\n};\n\nexport const useRuntimeAdapters = () => {\n  const adapters = useContext(RuntimeAdaptersContext);\n  return adapters;\n};\n"],"names":[],"mappings":";;;;;;;AAEA,SAAS,eAA8B,kBAAkB;AA0BrD;;;;AAfJ,IAAM,6BAAyB,8KAAA,EAAsC,IAAI;AASlE,IAAM,yBAA2D;QAAC,EACvE,QAAA,EACA,QAAA,EACF,KAAM;IACJ,MAAM,cAAU,2KAAA,EAAW,sBAAsB;IACjD,OACE,aAAA,GAAA,IAAA,6KAAA,EAAC,uBAAuB,QAAA,EAAvB;QACC,OAAO;YACL,GAAG,OAAA;YACH,GAAG,QAAA;QACL;QAEC;IAAA;AAGP;AAEO,IAAM,qBAAqB,MAAM;IACtC,MAAM,eAAW,2KAAA,EAAW,sBAAsB;IAClD,OAAO;AACT","debugId":null}},
    {"offset": {"line": 1868, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/legacy-runtime/runtime-cores/remote-thread-list/adapter/in-memory.tsx"],"sourcesContent":["import { AssistantStream, AssistantStreamChunk } from \"assistant-stream\";\nimport {\n  RemoteThreadInitializeResponse,\n  RemoteThreadListAdapter,\n  RemoteThreadListResponse,\n} from \"../types\";\n\nexport class InMemoryThreadListAdapter implements RemoteThreadListAdapter {\n  list(): Promise<RemoteThreadListResponse> {\n    return Promise.resolve({\n      threads: [],\n    });\n  }\n\n  rename(): Promise<void> {\n    return Promise.resolve();\n  }\n\n  archive(): Promise<void> {\n    return Promise.resolve();\n  }\n\n  unarchive(): Promise<void> {\n    return Promise.resolve();\n  }\n\n  delete(): Promise<void> {\n    return Promise.resolve();\n  }\n\n  initialize(threadId: string): Promise<RemoteThreadInitializeResponse> {\n    return Promise.resolve({ remoteId: threadId, externalId: undefined });\n  }\n\n  generateTitle(): Promise<AssistantStream> {\n    return Promise.resolve(new ReadableStream<AssistantStreamChunk>());\n  }\n}\n"],"names":[],"mappings":";;;;;AAOO,IAAM,4BAAN,MAAmE;IACxE,OAA0C;QACxC,OAAO,QAAQ,OAAA,CAAQ;YACrB,SAAS,CAAC,CAAA;QACZ,CAAC;IACH;IAEA,SAAwB;QACtB,OAAO,QAAQ,OAAA,CAAQ;IACzB;IAEA,UAAyB;QACvB,OAAO,QAAQ,OAAA,CAAQ;IACzB;IAEA,YAA2B;QACzB,OAAO,QAAQ,OAAA,CAAQ;IACzB;IAEA,SAAwB;QACtB,OAAO,QAAQ,OAAA,CAAQ;IACzB;IAEA,WAAW,QAAA,EAA2D;QACpE,OAAO,QAAQ,OAAA,CAAQ;YAAE,UAAU;YAAU,YAAY,KAAA;QAAU,CAAC;IACtE;IAEA,gBAA0C;QACxC,OAAO,QAAQ,OAAA,CAAQ,IAAI,eAAqC,CAAC;IACnE;AACF","debugId":null}},
    {"offset": {"line": 1907, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/legacy-runtime/runtime-cores/adapters/attachment/CloudFileAttachmentAdapter.ts"],"sourcesContent":["import type { AssistantCloud } from \"assistant-cloud\";\nimport {\n  Attachment,\n  PendingAttachment,\n  CompleteAttachment,\n} from \"../../../../types/AttachmentTypes\";\nimport { ThreadUserMessagePart } from \"../../../../types/MessagePartTypes\";\nimport { AttachmentAdapter } from \"./AttachmentAdapter\";\n\nconst guessAttachmentType = (\n  contentType: string,\n): \"image\" | \"document\" | \"file\" => {\n  if (contentType.startsWith(\"image/\")) return \"image\";\n  if (contentType.startsWith(\"text/\")) return \"document\";\n  return \"file\";\n};\n\nexport class CloudFileAttachmentAdapter implements AttachmentAdapter {\n  public accept = \"*\";\n\n  constructor(private cloud: AssistantCloud) {}\n\n  private uploadedUrls = new Map<string, string>();\n\n  public async *add({\n    file,\n  }: {\n    file: File;\n  }): AsyncGenerator<PendingAttachment, void> {\n    const id = crypto.randomUUID();\n    const type = guessAttachmentType(file.type);\n    let attachment: PendingAttachment = {\n      id,\n      type,\n      name: file.name,\n      contentType: file.type,\n      file,\n      status: { type: \"running\", reason: \"uploading\", progress: 0 },\n    };\n    yield attachment;\n\n    try {\n      const { signedUrl, publicUrl } =\n        await this.cloud.files.generatePresignedUploadUrl({\n          filename: file.name,\n        });\n      await fetch(signedUrl, {\n        method: \"PUT\",\n        body: file,\n        headers: {\n          \"Content-Type\": file.type,\n        },\n        mode: \"cors\",\n      });\n      this.uploadedUrls.set(id, publicUrl);\n      attachment = {\n        ...attachment,\n        status: { type: \"requires-action\", reason: \"composer-send\" },\n      };\n      yield attachment;\n    } catch {\n      attachment = {\n        ...attachment,\n        status: { type: \"incomplete\", reason: \"error\" },\n      };\n      yield attachment;\n    }\n  }\n\n  public async remove(attachment: Attachment): Promise<void> {\n    this.uploadedUrls.delete(attachment.id);\n  }\n\n  public async send(\n    attachment: PendingAttachment,\n  ): Promise<CompleteAttachment> {\n    const url = this.uploadedUrls.get(attachment.id);\n    if (!url) throw new Error(\"Attachment not uploaded\");\n    this.uploadedUrls.delete(attachment.id);\n\n    let content: ThreadUserMessagePart[];\n    if (attachment.type === \"image\") {\n      content = [{ type: \"image\", image: url, filename: attachment.name }];\n    } else {\n      content = [\n        {\n          type: \"file\",\n          data: url,\n          mimeType: attachment.contentType,\n          filename: attachment.name,\n        },\n      ];\n    }\n\n    return {\n      ...attachment,\n      status: { type: \"complete\" },\n      content,\n    };\n  }\n}\n"],"names":[],"mappings":";;;;;;;AASA,IAAM,sBAAsB,CAC1B,gBACkC;IAClC,IAAI,YAAY,UAAA,CAAW,QAAQ,EAAG,CAAA,OAAO;IAC7C,IAAI,YAAY,UAAA,CAAW,OAAO,EAAG,CAAA,OAAO;IAC5C,OAAO;AACT;AAEO,IAAM,6BAAN,MAA8D;IAOnE,OAAc,SAEd,EAE4C;YAJ1B,EAChB,IAAA,EACF;QAGE,MAAM,KAAK,OAAO,UAAA,CAAW;QAC7B,MAAM,OAAO,oBAAoB,KAAK,IAAI;QAC1C,IAAI,aAAgC;YAClC;YACA;YACA,MAAM,KAAK,IAAA;YACX,aAAa,KAAK,IAAA;YAClB;YACA,QAAQ;gBAAE,MAAM;gBAAW,QAAQ;gBAAa,UAAU;YAAE;QAC9D;QACA,MAAM;QAEN,IAAI;YACF,MAAM,EAAE,SAAA,EAAW,SAAA,CAAU,CAAA,GAC3B,MAAM,IAAA,CAAK,KAAA,CAAM,KAAA,CAAM,0BAAA,CAA2B;gBAChD,UAAU,KAAK,IAAA;YACjB,CAAC;YACH,MAAM,MAAM,WAAW;gBACrB,QAAQ;gBACR,MAAM;gBACN,SAAS;oBACP,gBAAgB,KAAK,IAAA;gBACvB;gBACA,MAAM;YACR,CAAC;YACD,IAAA,CAAK,YAAA,CAAa,GAAA,CAAI,IAAI,SAAS;YACnC,aAAa;gBACX,GAAG,UAAA;gBACH,QAAQ;oBAAE,MAAM;oBAAmB,QAAQ;gBAAgB;YAC7D;YACA,MAAM;QACR,EAAA,UAAQ;YACN,aAAa;gBACX,GAAG,UAAA;gBACH,QAAQ;oBAAE,MAAM;oBAAc,QAAQ;gBAAQ;YAChD;YACA,MAAM;QACR;IACF;IAEA,MAAa,OAAO,UAAA,EAAuC;QACzD,IAAA,CAAK,YAAA,CAAa,MAAA,CAAO,WAAW,EAAE;IACxC;IAEA,MAAa,KACX,UAAA,EAC6B;QAC7B,MAAM,MAAM,IAAA,CAAK,YAAA,CAAa,GAAA,CAAI,WAAW,EAAE;QAC/C,IAAI,CAAC,IAAK,CAAA,MAAM,IAAI,MAAM,yBAAyB;QACnD,IAAA,CAAK,YAAA,CAAa,MAAA,CAAO,WAAW,EAAE;QAEtC,IAAI;QACJ,IAAI,WAAW,IAAA,KAAS,SAAS;YAC/B,UAAU;gBAAC;oBAAE,MAAM;oBAAS,OAAO;oBAAK,UAAU,WAAW,IAAA;gBAAK,CAAC;aAAA;QACrE,OAAO;YACL,UAAU;gBACR;oBACE,MAAM;oBACN,MAAM;oBACN,UAAU,WAAW,WAAA;oBACrB,UAAU,WAAW,IAAA;gBACvB;aACF;QACF;QAEA,OAAO;YACL,GAAG,UAAA;YACH,QAAQ;gBAAE,MAAM;YAAW;YAC3B;QACF;IACF;IA/EA,YAAoB,KAAA,CAAuB;uLAFpC,UAAS;uLAIR,gBAAe,aAAA,GAAA,IAAI,IAAoB;QAF3B,IAAA,CAAA,KAAA,GAAA;IAAwB;AAgF9C","debugId":null}},
    {"offset": {"line": 2015, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/legacy-runtime/runtime-cores/remote-thread-list/adapter/cloud.tsx"],"sourcesContent":["\"use client\";\n\nimport {\n  FC,\n  PropsWithChildren,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n} from \"react\";\nimport { AssistantCloud } from \"assistant-cloud\";\nimport { RemoteThreadListAdapter } from \"../types\";\nimport { useAssistantCloudThreadHistoryAdapter } from \"../../../cloud/AssistantCloudThreadHistoryAdapter\";\nimport { RuntimeAdapterProvider } from \"../../adapters/RuntimeAdapterProvider\";\nimport { InMemoryThreadListAdapter } from \"./in-memory\";\nimport { CloudFileAttachmentAdapter } from \"../../adapters\";\n\ntype ThreadData = {\n  externalId: string;\n};\n\ntype CloudThreadListAdapterOptions = {\n  cloud?: AssistantCloud | undefined;\n\n  create?(): Promise<ThreadData>;\n  delete?(threadId: string): Promise<void>;\n};\n\nconst baseUrl =\n  typeof process !== \"undefined\" &&\n  process?.env?.[\"NEXT_PUBLIC_ASSISTANT_BASE_URL\"];\nconst autoCloud = baseUrl\n  ? new AssistantCloud({ baseUrl, anonymous: true })\n  : undefined;\n\nexport const useCloudThreadListAdapter = (\n  adapter: CloudThreadListAdapterOptions,\n): RemoteThreadListAdapter => {\n  const adapterRef = useRef(adapter);\n  useEffect(() => {\n    adapterRef.current = adapter;\n  }, [adapter]);\n\n  const unstable_Provider = useCallback<FC<PropsWithChildren>>(\n    function Provider({ children }) {\n      const history = useAssistantCloudThreadHistoryAdapter({\n        get current() {\n          return adapterRef.current.cloud ?? autoCloud!;\n        },\n      });\n      const attachments = useMemo(\n        () =>\n          new CloudFileAttachmentAdapter(\n            adapterRef.current.cloud ?? autoCloud!,\n          ),\n        [adapterRef.current.cloud],\n      );\n\n      const adapters = useMemo(\n        () => ({\n          history,\n          attachments,\n        }),\n        [history],\n      );\n\n      return (\n        <RuntimeAdapterProvider adapters={adapters}>\n          {children}\n        </RuntimeAdapterProvider>\n      );\n    },\n    [],\n  );\n\n  const cloud = adapter.cloud ?? autoCloud;\n  if (!cloud) return new InMemoryThreadListAdapter();\n\n  return {\n    list: async () => {\n      const { threads } = await cloud.threads.list();\n      return {\n        threads: threads.map((t) => ({\n          status: t.is_archived ? \"archived\" : \"regular\",\n          remoteId: t.id,\n          title: t.title,\n          externalId: t.external_id ?? undefined,\n        })),\n      };\n    },\n\n    initialize: async () => {\n      const createTask = adapter.create?.() ?? Promise.resolve();\n      const t = await createTask;\n      const external_id = t ? t.externalId : undefined;\n      const { thread_id: remoteId } = await cloud.threads.create({\n        last_message_at: new Date(),\n        external_id,\n      });\n\n      return { externalId: external_id, remoteId: remoteId };\n    },\n\n    rename: async (threadId, newTitle) => {\n      return cloud.threads.update(threadId, { title: newTitle });\n    },\n    archive: async (threadId) => {\n      return cloud.threads.update(threadId, { is_archived: true });\n    },\n    unarchive: async (threadId) => {\n      return cloud.threads.update(threadId, { is_archived: false });\n    },\n    delete: async (threadId) => {\n      await adapter.delete?.(threadId);\n      return cloud.threads.delete(threadId);\n    },\n\n    generateTitle: async (threadId, messages) => {\n      return cloud.runs.stream({\n        thread_id: threadId,\n        assistant_id: \"system/thread_title\",\n        messages: messages, // TODO serialize these to a more efficient format\n      });\n    },\n\n    unstable_Provider,\n  };\n};\n"],"names":[],"mappings":";;;;AA6BS;;AA3BT;AAQA,SAAS,sBAAsB;AAE/B,SAAS,6CAA6C;AACtD,SAAS,8BAA8B;AACvC,SAAS,iCAAiC;AAC1C,SAAS,kCAAkC;AAoDnC;;;;;;;;;;AAvCR,IAAM,UACJ,kLAAO,KAAY,uMACnB,sEAAS,GAAA,iDAAT,YAAS,CAAM,gCAAgC,CAAA;AACjD,IAAM,YAAY,UACd,IAAI,iLAAA,CAAe;IAAE;IAAS,WAAW;AAAK,CAAC,IAC/C,KAAA;AAEG,IAAM,4BAA4B,CACvC,YAC4B;IAC5B,MAAM,iBAAa,uKAAA,EAAO,OAAO;IACjC,IAAA,0KAAA;+CAAU,MAAM;YACd,WAAW,OAAA,GAAU;QACvB;8CAAG;QAAC,OAAO;KAAC;IAEZ,MAAM,wBAAoB,4KAAA,EACxB,SAAS,cAAoB;cAAT,QAAA,CAAS,CAAA,EAAG,CAAd;QAChB,MAAM,cAAU,kQAAA,EAAsC;YACpD,IAAI,WAAU;oBACL;gBAAP,+CAAkB,OAAA,CAAQ,KAAA,iFAAS;YACrC;QACF,CAAC;QACD,MAAM,kBAAc,wKAAA;sGAClB;oBAEI;uBADF,IAAI,oRAAA,yCACS,OAAA,CAAQ,KAAA,iFAAS;;qGAEhC;YAAC,WAAW,OAAA,CAAQ,KAAK;SAAA;QAG3B,MAAM,eAAW,wKAAA;mGACf,IAAA,CAAO;oBACL;oBACA;gBACF,CAAA;kGACA;YAAC,OAAO;SAAA;QAGV,OACE,aAAA,GAAA,IAAA,6KAAA,EAAC,8PAAA,EAAA;YAAuB;YACrB;QAAA,CACH;IAEJ,GACA,CAAC,CAAA;QAGW;IAAd,MAAM,kCAAgB,KAAA,2DAAS;IAC/B,IAAI,CAAC,MAAO,CAAA,OAAO,IAAI,kRAAA,CAA0B;IAEjD,OAAO;QACL,MAAM,YAAY;YAChB,MAAM,EAAE,OAAA,CAAQ,CAAA,GAAI,MAAM,MAAM,OAAA,CAAQ,IAAA,CAAK;YAC7C,OAAO;gBACL,SAAS,QAAQ,GAAA,CAAI,CAAC;wBAIR;2BAJe;wBAC3B,QAAQ,EAAE,WAAA,GAAc,aAAa;wBACrC,UAAU,EAAE,EAAA;wBACZ,OAAO,EAAE,KAAA;wBACT,gCAAc,WAAA,2DAAe,KAAA;oBAC/B,EAAE;;YACJ;QACF;QAEA,YAAY,YAAY;;;YACtB,MAAM,aAAa,+CAAQ,MAAA,GAAS,6IAAK,QAAQ,OAAA,CAAQ;YACzD,MAAM,IAAI,MAAM;YAChB,MAAM,cAAc,IAAI,EAAE,UAAA,GAAa,KAAA;YACvC,MAAM,EAAE,WAAW,QAAA,CAAS,CAAA,GAAI,MAAM,MAAM,OAAA,CAAQ,MAAA,CAAO;gBACzD,iBAAiB,aAAA,GAAA,IAAI,KAAK;gBAC1B;YACF,CAAC;YAED,OAAO;gBAAE,YAAY;gBAAa;YAAmB;QACvD;QAEA,QAAQ,OAAO,UAAU,aAAa;YACpC,OAAO,MAAM,OAAA,CAAQ,MAAA,CAAO,UAAU;gBAAE,OAAO;YAAS,CAAC;QAC3D;QACA,SAAS,OAAO,aAAa;YAC3B,OAAO,MAAM,OAAA,CAAQ,MAAA,CAAO,UAAU;gBAAE,aAAa;YAAK,CAAC;QAC7D;QACA,WAAW,OAAO,aAAa;YAC7B,OAAO,MAAM,OAAA,CAAQ,MAAA,CAAO,UAAU;gBAAE,aAAa;YAAM,CAAC;QAC9D;QACA,QAAQ,OAAO,aAAa;gBACpB;YAAN,kCAAc,MAAA,kFAAS,QAAQ;YAC/B,OAAO,MAAM,OAAA,CAAQ,MAAA,CAAO,QAAQ;QACtC;QAEA,eAAe,OAAO,UAAU,aAAa;YAC3C,OAAO,MAAM,IAAA,CAAK,MAAA,CAAO;gBACvB,WAAW;gBACX,cAAc;gBACd;YACF,CAAC;QACH;QAEA;IACF;AACF","debugId":null}},
    {"offset": {"line": 2158, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/model-context/ModelContextTypes.ts"],"sourcesContent":["import { Unsubscribe } from \"../types/Unsubscribe\";\nimport { Tool } from \"assistant-stream\";\n\nexport type LanguageModelV1CallSettings = {\n  maxTokens?: number;\n  temperature?: number;\n  topP?: number;\n  presencePenalty?: number;\n  frequencyPenalty?: number;\n  seed?: number;\n  headers?: Record<string, string | undefined>;\n};\n\nexport type LanguageModelConfig = {\n  apiKey?: string;\n  baseUrl?: string;\n  modelName?: string;\n};\n\nexport type ModelContext = {\n  priority?: number | undefined;\n  system?: string | undefined;\n  tools?: Record<string, Tool<any, any>> | undefined;\n  callSettings?: LanguageModelV1CallSettings | undefined;\n  config?: LanguageModelConfig | undefined;\n};\n\nexport type ModelContextProvider = {\n  getModelContext: () => ModelContext;\n  subscribe?: (callback: () => void) => Unsubscribe;\n};\n\nexport const mergeModelContexts = (\n  configSet: Set<ModelContextProvider>,\n): ModelContext => {\n  const configs = Array.from(configSet)\n    .map((c) => c.getModelContext())\n    .sort((a, b) => (b.priority ?? 0) - (a.priority ?? 0));\n\n  return configs.reduce((acc, config) => {\n    if (config.system) {\n      if (acc.system) {\n        // TODO should the separator be configurable?\n        acc.system += `\\n\\n${config.system}`;\n      } else {\n        acc.system = config.system;\n      }\n    }\n    if (config.tools) {\n      for (const [name, tool] of Object.entries(config.tools)) {\n        const existing = acc.tools?.[name];\n        if (existing && existing !== tool) {\n          throw new Error(\n            `You tried to define a tool with the name ${name}, but it already exists.`,\n          );\n        }\n\n        if (!acc.tools) acc.tools = {};\n        acc.tools[name] = tool;\n      }\n    }\n    if (config.config) {\n      acc.config = {\n        ...acc.config,\n        ...config.config,\n      };\n    }\n    if (config.callSettings) {\n      acc.callSettings = {\n        ...acc.callSettings,\n        ...config.callSettings,\n      };\n    }\n    return acc;\n  }, {} as ModelContext);\n};\n"],"names":[],"mappings":";;;;;AAgCO,IAAM,qBAAqB,CAChC,cACiB;IACjB,MAAM,UAAU,MAAM,IAAA,CAAK,SAAS,EACjC,GAAA,CAAI,CAAC,IAAM,EAAE,eAAA,CAAgB,CAAC,EAC9B,IAAA,CAAK,CAAC,GAAG;YAAO,aAAoB;eAA3B,kBAAS,QAAA,qDAAY,CAAA,IAAA,kBAAQ,QAAA,qDAAY,CAAA,CAAE;;IAEvD,OAAO,QAAQ,MAAA,CAAO,CAAC,KAAK,WAAW;QACrC,IAAI,OAAO,MAAA,EAAQ;YACjB,IAAI,IAAI,MAAA,EAAQ;gBAEd,IAAI,MAAA,IAAU,OAAoB,OAAb,OAAO,MAAM;YACpC,OAAO;gBACL,IAAI,MAAA,GAAS,OAAO,MAAA;YACtB;QACF;QACA,IAAI,OAAO,KAAA,EAAO;YAChB,KAAA,MAAW,CAAC,MAAM,IAAI,CAAA,IAAK,OAAO,OAAA,CAAQ,OAAO,KAAK,EAAG;;gBACvD,MAAM,YAAW,iBAAI,KAAA,yDAAA,CAAQ,IAAI,CAAA;gBACjC,IAAI,YAAY,aAAa,MAAM;oBACjC,MAAM,IAAI,MACR,4CAAgD,OAAJ,IAAI,EAAA;gBAEpD;gBAEA,IAAI,CAAC,IAAI,KAAA,CAAO,CAAA,IAAI,KAAA,GAAQ,CAAC;gBAC7B,IAAI,KAAA,CAAM,IAAI,CAAA,GAAI;YACpB;QACF;QACA,IAAI,OAAO,MAAA,EAAQ;YACjB,IAAI,MAAA,GAAS;gBACX,GAAG,IAAI,MAAA;gBACP,GAAG,OAAO,MAAA;YACZ;QACF;QACA,IAAI,OAAO,YAAA,EAAc;YACvB,IAAI,YAAA,GAAe;gBACjB,GAAG,IAAI,YAAA;gBACP,GAAG,OAAO,YAAA;YACZ;QACF;QACA,OAAO;IACT,GAAG,CAAC,CAAiB;AACvB","debugId":null}},
    {"offset": {"line": 2208, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/utils/CompositeContextProvider.ts"],"sourcesContent":["import {\n  type ModelContextProvider,\n  mergeModelContexts,\n} from \"../model-context/ModelContextTypes\";\n\nexport class CompositeContextProvider implements ModelContextProvider {\n  private _providers = new Set<ModelContextProvider>();\n\n  getModelContext() {\n    return mergeModelContexts(this._providers);\n  }\n\n  registerModelContextProvider(provider: ModelContextProvider) {\n    this._providers.add(provider);\n    const unsubscribe = provider.subscribe?.(() => {\n      this.notifySubscribers();\n    });\n    this.notifySubscribers();\n    return () => {\n      this._providers.delete(provider);\n      unsubscribe?.();\n      this.notifySubscribers();\n    };\n  }\n\n  private _subscribers = new Set<() => void>();\n\n  notifySubscribers() {\n    for (const callback of this._subscribers) callback();\n  }\n\n  subscribe(callback: () => void) {\n    this._subscribers.add(callback);\n    return () => this._subscribers.delete(callback);\n  }\n}\n"],"names":[],"mappings":";;;;;;AAAA;;;AAKO,IAAM,2BAAN,MAA+D;IAGpE,kBAAkB;QAChB,WAAO,oNAAA,EAAmB,IAAA,CAAK,UAAU;IAC3C;IAEA,6BAA6B,QAAA,EAAgC;;QAC3D,IAAA,CAAK,UAAA,CAAW,GAAA,CAAI,QAAQ;QAC5B,MAAM,8CAAuB,SAAA,wDAAT,mCAAqB,MAAM;YAC7C,IAAA,CAAK,iBAAA,CAAkB;QACzB,CAAC;QACD,IAAA,CAAK,iBAAA,CAAkB;QACvB,OAAO,MAAM;YACX,IAAA,CAAK,UAAA,CAAW,MAAA,CAAO,QAAQ;YAC/B,wBAAA,kCAAA,cAAc;YACd,IAAA,CAAK,iBAAA,CAAkB;QACzB;IACF;IAIA,oBAAoB;QAClB,KAAA,MAAW,YAAY,IAAA,CAAK,YAAA,CAAc,SAAS;IACrD;IAEA,UAAU,QAAA,EAAsB;QAC9B,IAAA,CAAK,YAAA,CAAa,GAAA,CAAI,QAAQ;QAC9B,OAAO,IAAM,IAAA,CAAK,YAAA,CAAa,MAAA,CAAO,QAAQ;IAChD;;uLA5BQ,cAAa,aAAA,GAAA,IAAI,IAA0B;uLAmB3C,gBAAe,aAAA,GAAA,IAAI,IAAgB;;AAU7C","debugId":null}},
    {"offset": {"line": 2252, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/legacy-runtime/runtime-cores/core/BaseAssistantRuntimeCore.tsx"],"sourcesContent":["import { type ModelContextProvider } from \"../../../model-context/ModelContextTypes\";\nimport type { Unsubscribe } from \"../../../types/Unsubscribe\";\nimport type { AssistantRuntimeCore } from \"./AssistantRuntimeCore\";\nimport { CompositeContextProvider } from \"../../../utils/CompositeContextProvider\";\nimport { ThreadListRuntimeCore } from \"./ThreadListRuntimeCore\";\n\nexport abstract class BaseAssistantRuntimeCore implements AssistantRuntimeCore {\n  protected readonly _contextProvider = new CompositeContextProvider();\n  public abstract get threads(): ThreadListRuntimeCore;\n\n  public registerModelContextProvider(\n    provider: ModelContextProvider,\n  ): Unsubscribe {\n    return this._contextProvider.registerModelContextProvider(provider);\n  }\n}\n"],"names":[],"mappings":";;;;;;AAGA,SAAS,gCAAgC;;;AAGlC,IAAe,2BAAf,MAAwE;IAItE,6BACL,QAAA,EACa;QACb,OAAO,IAAA,CAAK,gBAAA,CAAiB,4BAAA,CAA6B,QAAQ;IACpE;;uLAPmB,oBAAmB,IAAI,sNAAA,CAAyB;;AAQrE","debugId":null}},
    {"offset": {"line": 2275, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/context/providers/ThreadListItemProvider.tsx"],"sourcesContent":["\"use client\";\n\nimport { useMemo, type FC, type PropsWithChildren } from \"react\";\nimport {\n  AssistantApi,\n  AssistantProvider,\n  useAssistantApi,\n  createAssistantApiField,\n} from \"../react/AssistantApiContext\";\nimport {\n  checkEventScope,\n  normalizeEventSelector,\n} from \"../../types/EventTypes\";\n\nexport const ThreadListItemByIndexProvider: FC<\n  PropsWithChildren<{\n    index: number;\n    archived: boolean;\n  }>\n> = ({ index, archived, children }) => {\n  const api = useAssistantApi();\n\n  const api2 = useMemo(() => {\n    const getItem = () => api.threads().item({ index, archived });\n    return {\n      threadListItem: createAssistantApiField({\n        source: \"threads\",\n        query: { type: \"index\", index, archived },\n        get: () => getItem(),\n      }),\n      on(selector, callback) {\n        const { event, scope } = normalizeEventSelector(selector);\n        if (!checkEventScope(\"thread-list-item\", scope, event))\n          return api.on(selector, callback);\n\n        return api.on({ scope: \"*\", event }, (e) => {\n          if (e.threadId === getItem().getState().id) {\n            callback(e);\n          }\n        });\n      },\n    } satisfies Partial<AssistantApi>;\n  }, [api, index, archived]);\n\n  return <AssistantProvider api={api2}>{children}</AssistantProvider>;\n};\n\nexport const ThreadListItemByIdProvider: FC<\n  PropsWithChildren<{\n    id: string;\n  }>\n> = ({ id, children }) => {\n  const api = useAssistantApi();\n\n  const api2 = useMemo(() => {\n    const getItem = () => api.threads().item({ id });\n    return {\n      threadListItem: createAssistantApiField({\n        source: \"threads\",\n        query: { type: \"id\", id },\n        get: () => getItem(),\n      }),\n      on(selector, callback) {\n        const { event, scope } = normalizeEventSelector(selector);\n        if (!checkEventScope(\"thread-list-item\", scope, event))\n          return api.on(selector, callback);\n\n        return api.on({ scope: \"*\", event }, (e) => {\n          if (e.threadId !== getItem().getState().id) return;\n          callback(e);\n        });\n      },\n    } satisfies Partial<AssistantApi>;\n  }, [api, id]);\n\n  return <AssistantProvider api={api2}>{children}</AssistantProvider>;\n};\n"],"names":[],"mappings":";;;;;;;AAEA,SAAS,eAAgD;AACzD;AAMA;AAmCS;;;;;;AA9BF,IAAM,gCAKT;QAAC,EAAE,KAAA,EAAO,QAAA,EAAU,QAAA,CAAS,CAAA,KAAM;IACrC,MAAM,UAAM,mNAAA,CAAgB;IAE5B,MAAM,WAAO,wKAAA;uDAAQ,MAAM;YACzB,MAAM;uEAAU,IAAM,IAAI,OAAA,CAAQ,EAAE,IAAA,CAAK;wBAAE;wBAAO;oBAAS,CAAC;;YAC5D,OAAO;gBACL,oBAAgB,2NAAA,EAAwB;oBACtC,QAAQ;oBACR,OAAO;wBAAE,MAAM;wBAAS;wBAAO;oBAAS;oBACxC,GAAA;uEAAK,IAAM,QAAQ;;gBACrB,CAAC;gBACD,IAAG,QAAA,EAAU,QAAA,EAAU;oBACrB,MAAM,EAAE,KAAA,EAAO,KAAA,CAAM,CAAA,OAAI,sMAAA,EAAuB,QAAQ;oBACxD,IAAI,CAAC,mMAAA,EAAgB,oBAAoB,OAAO,KAAK,GACnD,OAAO,IAAI,EAAA,CAAG,UAAU,QAAQ;oBAElC,OAAO,IAAI,EAAA,CAAG;wBAAE,OAAO;wBAAK;oBAAM;uEAAG,CAAC,MAAM;4BAC1C,IAAI,EAAE,QAAA,KAAa,QAAQ,EAAE,QAAA,CAAS,EAAE,EAAA,EAAI;gCAC1C,SAAS,CAAC;4BACZ;wBACF,CAAC;;gBACH;YACF;QACF;sDAAG;QAAC;QAAK;QAAO,QAAQ;KAAC;IAEzB,OAAO,aAAA,GAAA,IAAA,6KAAA,EAAC,qNAAA,EAAA;QAAkB,KAAK;QAAO;IAAA,CAAS;AACjD;AAEO,IAAM,6BAIT;QAAC,EAAE,EAAA,EAAI,QAAA,CAAS,CAAA,KAAM;IACxB,MAAM,MAAM,uNAAA,CAAgB;IAE5B,MAAM,WAAO,wKAAA;oDAAQ,MAAM;YACzB,MAAM;oEAAU,IAAM,IAAI,OAAA,CAAQ,EAAE,IAAA,CAAK;wBAAE;oBAAG,CAAC;;YAC/C,OAAO;gBACL,oBAAgB,2NAAA,EAAwB;oBACtC,QAAQ;oBACR,OAAO;wBAAE,MAAM;wBAAM;oBAAG;oBACxB,GAAA;oEAAK,IAAM,QAAQ;;gBACrB,CAAC;gBACD,IAAG,QAAA,EAAU,QAAA,EAAU;oBACrB,MAAM,EAAE,KAAA,EAAO,KAAA,CAAM,CAAA,OAAI,sMAAA,EAAuB,QAAQ;oBACxD,IAAI,CAAC,mMAAA,EAAgB,oBAAoB,OAAO,KAAK,GACnD,OAAO,IAAI,EAAA,CAAG,UAAU,QAAQ;oBAElC,OAAO,IAAI,EAAA,CAAG;wBAAE,OAAO;wBAAK;oBAAM;oEAAG,CAAC,MAAM;4BAC1C,IAAI,EAAE,QAAA,KAAa,QAAQ,EAAE,QAAA,CAAS,EAAE,EAAA,CAAI,CAAA;4BAC5C,SAAS,CAAC;wBACZ,CAAC;;gBACH;YACF;QACF;mDAAG;QAAC;QAAK,EAAE;KAAC;IAEZ,OAAO,aAAA,GAAA,IAAA,6KAAA,EAAC,qNAAA,EAAA;QAAkB,KAAK;QAAO;IAAA,CAAS;AACjD","debugId":null}},
    {"offset": {"line": 2391, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/legacy-runtime/runtime-cores/remote-thread-list/BaseSubscribable.tsx"],"sourcesContent":["import { Unsubscribe } from \"../../../types\";\n\nexport class BaseSubscribable {\n  private _subscribers = new Set<() => void>();\n\n  public subscribe(callback: () => void): Unsubscribe {\n    this._subscribers.add(callback);\n    return () => this._subscribers.delete(callback);\n  }\n\n  public waitForUpdate() {\n    return new Promise<void>((resolve) => {\n      const unsubscribe = this.subscribe(() => {\n        unsubscribe();\n        resolve();\n      });\n    });\n  }\n\n  protected _notifySubscribers() {\n    const errors = [];\n    for (const callback of this._subscribers) {\n      try {\n        callback();\n      } catch (error) {\n        errors.push(error);\n      }\n    }\n\n    if (errors.length > 0) {\n      if (errors.length === 1) {\n        throw errors[0];\n      } else {\n        throw new AggregateError(errors);\n      }\n    }\n  }\n}\n"],"names":[],"mappings":";;;;;;;AAEO,IAAM,mBAAN,MAAuB;IAGrB,UAAU,QAAA,EAAmC;QAClD,IAAA,CAAK,YAAA,CAAa,GAAA,CAAI,QAAQ;QAC9B,OAAO,IAAM,IAAA,CAAK,YAAA,CAAa,MAAA,CAAO,QAAQ;IAChD;IAEO,gBAAgB;QACrB,OAAO,IAAI,QAAc,CAAC,YAAY;YACpC,MAAM,cAAc,IAAA,CAAK,SAAA,CAAU,MAAM;gBACvC,YAAY;gBACZ,QAAQ;YACV,CAAC;QACH,CAAC;IACH;IAEU,qBAAqB;QAC7B,MAAM,SAAS,CAAC,CAAA;QAChB,KAAA,MAAW,YAAY,IAAA,CAAK,YAAA,CAAc;YACxC,IAAI;gBACF,SAAS;YACX,EAAA,OAAS,OAAO;gBACd,OAAO,IAAA,CAAK,KAAK;YACnB;QACF;QAEA,IAAI,OAAO,MAAA,GAAS,GAAG;YACrB,IAAI,OAAO,MAAA,KAAW,GAAG;gBACvB,MAAM,MAAA,CAAO,CAAC,CAAA;YAChB,OAAO;gBACL,MAAM,IAAI,eAAe,MAAM;YACjC;QACF;IACF;;uLAjCQ,gBAAe,aAAA,GAAA,IAAI,IAAgB;;AAkC7C","debugId":null}},
    {"offset": {"line": 2438, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/legacy-runtime/runtime-cores/remote-thread-list/RemoteThreadListHookInstanceManager.tsx"],"sourcesContent":["/* eslint-disable react-hooks/rules-of-hooks */\n\"use client\";\n\nimport {\n  FC,\n  useCallback,\n  useRef,\n  useEffect,\n  memo,\n  PropsWithChildren,\n  ComponentType,\n} from \"react\";\nimport { UseBoundStore, StoreApi, create } from \"zustand\";\nimport { useAssistantApi, ThreadListItemByIdProvider } from \"../../../context\";\nimport { ThreadRuntimeCore, ThreadRuntimeImpl } from \"../../../internal\";\nimport { BaseSubscribable } from \"./BaseSubscribable\";\nimport { AssistantRuntime } from \"../../runtime\";\n\ntype RemoteThreadListHook = () => AssistantRuntime;\n\ntype RemoteThreadListHookInstance = {\n  runtime?: ThreadRuntimeCore;\n};\nexport class RemoteThreadListHookInstanceManager extends BaseSubscribable {\n  private useRuntimeHook: UseBoundStore<\n    StoreApi<{ useRuntime: RemoteThreadListHook }>\n  >;\n  private instances = new Map<string, RemoteThreadListHookInstance>();\n  private useAliveThreadsKeysChanged = create(() => ({}));\n\n  constructor(runtimeHook: RemoteThreadListHook) {\n    super();\n    this.useRuntimeHook = create(() => ({ useRuntime: runtimeHook }));\n  }\n\n  public startThreadRuntime(threadId: string) {\n    if (!this.instances.has(threadId)) {\n      this.instances.set(threadId, {});\n      this.useAliveThreadsKeysChanged.setState({}, true);\n    }\n\n    return new Promise<ThreadRuntimeCore>((resolve, reject) => {\n      const callback = () => {\n        const instance = this.instances.get(threadId);\n        if (!instance) {\n          dispose();\n          reject(new Error(\"Thread was deleted before runtime was started\"));\n        } else if (!instance.runtime) {\n          return; // misc update\n        } else {\n          dispose();\n          resolve(instance.runtime);\n        }\n      };\n      const dispose = this.subscribe(callback);\n      callback();\n    });\n  }\n\n  public getThreadRuntimeCore(threadId: string) {\n    const instance = this.instances.get(threadId);\n    if (!instance) return undefined;\n    return instance.runtime;\n  }\n\n  public stopThreadRuntime(threadId: string) {\n    this.instances.delete(threadId);\n    this.useAliveThreadsKeysChanged.setState({}, true);\n  }\n\n  public setRuntimeHook(newRuntimeHook: RemoteThreadListHook) {\n    const prevRuntimeHook = this.useRuntimeHook.getState().useRuntime;\n    if (prevRuntimeHook !== newRuntimeHook) {\n      this.useRuntimeHook.setState({ useRuntime: newRuntimeHook }, true);\n    }\n  }\n\n  private _InnerActiveThreadProvider: FC<{\n    threadId: string;\n  }> = ({ threadId }) => {\n    const { useRuntime } = this.useRuntimeHook();\n    const runtime = useRuntime();\n\n    const threadBinding = (runtime.thread as ThreadRuntimeImpl)\n      .__internal_threadBinding;\n\n    const updateRuntime = useCallback(() => {\n      const aliveThread = this.instances.get(threadId);\n      if (!aliveThread)\n        throw new Error(\"Thread not found. This is a bug in assistant-ui.\");\n\n      aliveThread.runtime = threadBinding.getState();\n\n      if (isMounted) {\n        this._notifySubscribers();\n      }\n    }, [threadId, threadBinding]);\n\n    const isMounted = useRef(false);\n    if (!isMounted.current) {\n      updateRuntime();\n    }\n\n    useEffect(() => {\n      isMounted.current = true;\n      updateRuntime();\n      return threadBinding.outerSubscribe(updateRuntime);\n    }, [threadBinding, updateRuntime]);\n\n    // auto initialize thread\n    const api = useAssistantApi();\n    useEffect(() => {\n      return runtime.threads.main.unstable_on(\"initialize\", () => {\n        const state = api.threadListItem().getState();\n        if (state.status === \"new\") {\n          api.threadListItem().initialize();\n\n          // auto generate a title after first run\n          const dispose = runtime.thread.unstable_on(\"run-end\", () => {\n            dispose();\n\n            api.threadListItem().generateTitle();\n          });\n        }\n      });\n    }, [runtime, api]);\n\n    return null;\n  };\n\n  private _OuterActiveThreadProvider: FC<{\n    threadId: string;\n    provider: ComponentType<PropsWithChildren>;\n    // eslint-disable-next-line react/display-name\n  }> = memo(({ threadId, provider: Provider }) => {\n    // Runtime is provided by ThreadListItemByIdProvider\n\n    return (\n      <ThreadListItemByIdProvider id={threadId}>\n        <Provider>\n          <this._InnerActiveThreadProvider threadId={threadId} />\n        </Provider>\n      </ThreadListItemByIdProvider>\n    );\n  });\n\n  public __internal_RenderThreadRuntimes: FC<{\n    provider: ComponentType<PropsWithChildren>;\n  }> = ({ provider }) => {\n    this.useAliveThreadsKeysChanged(); // trigger re-render on alive threads change\n\n    return Array.from(this.instances.keys()).map((threadId) => (\n      <this._OuterActiveThreadProvider\n        key={threadId}\n        threadId={threadId}\n        provider={provider}\n      />\n    ));\n  };\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2574, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/legacy-runtime/runtime-cores/remote-thread-list/EMPTY_THREAD_CORE.tsx"],"sourcesContent":["import { ThreadRuntimeCore } from \"../../../internal\";\n\nconst EMPTY_THREAD_ERROR = new Error(\n  \"This is the empty thread, a placeholder for the main thread. You cannot perform any actions on this thread instance. This error is probably because you tried to call a thread method in your render function. Call the method inside a `useEffect` hook instead.\",\n);\nexport const EMPTY_THREAD_CORE: ThreadRuntimeCore = {\n  getMessageById() {\n    return undefined;\n  },\n\n  getBranches() {\n    return [];\n  },\n\n  switchToBranch() {\n    throw EMPTY_THREAD_ERROR;\n  },\n\n  append() {\n    throw EMPTY_THREAD_ERROR;\n  },\n\n  startRun() {\n    throw EMPTY_THREAD_ERROR;\n  },\n\n  resumeRun() {\n    throw EMPTY_THREAD_ERROR;\n  },\n\n  cancelRun() {\n    throw EMPTY_THREAD_ERROR;\n  },\n\n  addToolResult() {\n    throw EMPTY_THREAD_ERROR;\n  },\n\n  speak() {\n    throw EMPTY_THREAD_ERROR;\n  },\n\n  stopSpeaking() {\n    throw EMPTY_THREAD_ERROR;\n  },\n\n  getSubmittedFeedback() {\n    return undefined;\n  },\n\n  submitFeedback() {\n    throw EMPTY_THREAD_ERROR;\n  },\n\n  getModelContext() {\n    return {};\n  },\n\n  unstable_loadExternalState() {\n    throw EMPTY_THREAD_ERROR;\n  },\n\n  composer: {\n    attachments: [],\n    attachmentAccept: \"*\",\n\n    async addAttachment() {\n      throw EMPTY_THREAD_ERROR;\n    },\n\n    async removeAttachment() {\n      throw EMPTY_THREAD_ERROR;\n    },\n\n    isEditing: true,\n\n    canCancel: false,\n    isEmpty: true,\n\n    text: \"\",\n\n    setText() {\n      throw EMPTY_THREAD_ERROR;\n    },\n\n    role: \"user\",\n\n    setRole() {\n      throw EMPTY_THREAD_ERROR;\n    },\n\n    runConfig: {},\n\n    setRunConfig() {\n      throw EMPTY_THREAD_ERROR;\n    },\n\n    async reset() {\n      // noop\n    },\n\n    async clearAttachments() {\n      // noop\n    },\n\n    send() {\n      throw EMPTY_THREAD_ERROR;\n    },\n\n    cancel() {\n      // noop\n    },\n\n    subscribe() {\n      return () => {};\n    },\n\n    unstable_on() {\n      return () => {};\n    },\n  },\n\n  getEditComposer() {\n    return undefined;\n  },\n\n  beginEdit() {\n    throw EMPTY_THREAD_ERROR;\n  },\n\n  speech: undefined,\n\n  capabilities: {\n    switchToBranch: false,\n    edit: false,\n    reload: false,\n    cancel: false,\n    unstable_copy: false,\n    speech: false,\n    attachments: false,\n    feedback: false,\n  },\n\n  isDisabled: false,\n  isLoading: false,\n\n  messages: [],\n\n  state: null,\n\n  suggestions: [],\n\n  extras: undefined,\n\n  subscribe() {\n    return () => {};\n  },\n\n  import() {\n    throw EMPTY_THREAD_ERROR;\n  },\n\n  export() {\n    return { messages: [] };\n  },\n\n  reset() {\n    throw EMPTY_THREAD_ERROR;\n  },\n\n  unstable_on() {\n    return () => {};\n  },\n};\n"],"names":[],"mappings":";;;;;AAEA,IAAM,qBAAqB,IAAI,MAC7B;AAEK,IAAM,oBAAuC;IAClD,iBAAiB;QACf,OAAO,KAAA;IACT;IAEA,cAAc;QACZ,OAAO,CAAC,CAAA;IACV;IAEA,iBAAiB;QACf,MAAM;IACR;IAEA,SAAS;QACP,MAAM;IACR;IAEA,WAAW;QACT,MAAM;IACR;IAEA,YAAY;QACV,MAAM;IACR;IAEA,YAAY;QACV,MAAM;IACR;IAEA,gBAAgB;QACd,MAAM;IACR;IAEA,QAAQ;QACN,MAAM;IACR;IAEA,eAAe;QACb,MAAM;IACR;IAEA,uBAAuB;QACrB,OAAO,KAAA;IACT;IAEA,iBAAiB;QACf,MAAM;IACR;IAEA,kBAAkB;QAChB,OAAO,CAAC;IACV;IAEA,6BAA6B;QAC3B,MAAM;IACR;IAEA,UAAU;QACR,aAAa,CAAC,CAAA;QACd,kBAAkB;QAElB,MAAM,gBAAgB;YACpB,MAAM;QACR;QAEA,MAAM,mBAAmB;YACvB,MAAM;QACR;QAEA,WAAW;QAEX,WAAW;QACX,SAAS;QAET,MAAM;QAEN,UAAU;YACR,MAAM;QACR;QAEA,MAAM;QAEN,UAAU;YACR,MAAM;QACR;QAEA,WAAW,CAAC;QAEZ,eAAe;YACb,MAAM;QACR;QAEA,MAAM,QAAQ,EAEd;QAEA,MAAM,mBAAmB,EAEzB;QAEA,OAAO;YACL,MAAM;QACR;QAEA,SAAS,EAET;QAEA,YAAY;YACV,OAAO,KAAO,CAAD;QACf;QAEA,cAAc;YACZ,OAAO,KAAO,CAAD;QACf;IACF;IAEA,kBAAkB;QAChB,OAAO,KAAA;IACT;IAEA,YAAY;QACV,MAAM;IACR;IAEA,QAAQ,KAAA;IAER,cAAc;QACZ,gBAAgB;QAChB,MAAM;QACN,QAAQ;QACR,QAAQ;QACR,eAAe;QACf,QAAQ;QACR,aAAa;QACb,UAAU;IACZ;IAEA,YAAY;IACZ,WAAW;IAEX,UAAU,CAAC,CAAA;IAEX,OAAO;IAEP,aAAa,CAAC,CAAA;IAEd,QAAQ,KAAA;IAER,YAAY;QACV,OAAO,KAAO,CAAD;IACf;IAEA,SAAS;QACP,MAAM;IACR;IAEA,SAAS;QACP,OAAO;YAAE,UAAU,CAAC,CAAA;QAAE;IACxB;IAEA,QAAQ;QACN,MAAM;IACR;IAEA,cAAc;QACZ,OAAO,KAAO,CAAD;IACf;AACF","debugId":null}},
    {"offset": {"line": 2707, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/legacy-runtime/runtime-cores/remote-thread-list/OptimisticState.ts"],"sourcesContent":["import { BaseSubscribable } from \"./BaseSubscribable\";\n\ntype Transform<TState, TResult> = {\n  execute: () => Promise<TResult>;\n\n  /** transform the state after the promise resolves */\n  then?: (state: TState, result: TResult) => TState;\n\n  /** transform the state during resolution and afterwards */\n  optimistic?: (state: TState) => TState;\n\n  /** transform the state only while loading */\n  loading?: (state: TState, task: Promise<TResult>) => TState;\n};\n\ntype PendingTransform<TState, TResult> = Transform<TState, TResult> & {\n  task: Promise<TResult>;\n};\n\nconst pipeTransforms = <TState, TExtra>(\n  initialState: TState,\n  extraParam: TExtra,\n  transforms: (((state: TState, extra: TExtra) => TState) | undefined)[],\n): TState => {\n  return transforms.reduce((state, transform) => {\n    return transform?.(state, extraParam) ?? state;\n  }, initialState);\n};\n\nexport class OptimisticState<TState> extends BaseSubscribable {\n  private readonly _pendingTransforms: Array<PendingTransform<TState, any>> =\n    [];\n  private _baseValue: TState;\n  private _cachedValue: TState;\n\n  public constructor(initialState: TState) {\n    super();\n    this._baseValue = initialState;\n    this._cachedValue = initialState;\n  }\n\n  private _updateState(): void {\n    this._cachedValue = this._pendingTransforms.reduce((state, transform) => {\n      return pipeTransforms(state, transform.task, [\n        transform.loading,\n        transform.optimistic,\n      ]);\n    }, this._baseValue);\n\n    this._notifySubscribers();\n  }\n\n  public get baseValue(): TState {\n    return this._baseValue;\n  }\n\n  public get value(): TState {\n    return this._cachedValue;\n  }\n\n  public update(state: TState): void {\n    this._baseValue = state;\n    this._updateState();\n  }\n\n  public async optimisticUpdate<TResult>(\n    transform: Transform<TState, TResult>,\n  ): Promise<TResult> {\n    const task = transform.execute();\n    const pendingTransform = { ...transform, task };\n    try {\n      this._pendingTransforms.push(pendingTransform);\n      this._updateState();\n\n      const result = await task;\n      this._baseValue = pipeTransforms(this._baseValue, result, [\n        transform.optimistic,\n        transform.then,\n      ]);\n      return result;\n    } finally {\n      const index = this._pendingTransforms.indexOf(pendingTransform);\n      if (index > -1) {\n        this._pendingTransforms.splice(index, 1);\n      }\n      this._updateState();\n    }\n  }\n}\n"],"names":[],"mappings":";;;;;;AAAA,SAAS,wBAAwB;;;AAmBjC,IAAM,iBAAiB,CACrB,cACA,YACA,eACW;IACX,OAAO,WAAW,MAAA,CAAO,CAAC,OAAO,cAAc;;QAC7C,OAAO,8EAAY,OAAO,UAAU,oDAAK;IAC3C,GAAG,YAAY;AACjB;AAEO,IAAM,kBAAN,cAAsC,kQAAA,CAAiB;IAYpD,eAAqB;QAC3B,IAAA,CAAK,YAAA,GAAe,IAAA,CAAK,kBAAA,CAAmB,MAAA,CAAO,CAAC,OAAO,cAAc;YACvE,OAAO,eAAe,OAAO,UAAU,IAAA,EAAM;gBAC3C,UAAU,OAAA;gBACV,UAAU,UAAA;aACX;QACH,GAAG,IAAA,CAAK,UAAU;QAElB,IAAA,CAAK,kBAAA,CAAmB;IAC1B;IAEA,IAAW,YAAoB;QAC7B,OAAO,IAAA,CAAK,UAAA;IACd;IAEA,IAAW,QAAgB;QACzB,OAAO,IAAA,CAAK,YAAA;IACd;IAEO,OAAO,KAAA,EAAqB;QACjC,IAAA,CAAK,UAAA,GAAa;QAClB,IAAA,CAAK,YAAA,CAAa;IACpB;IAEA,MAAa,iBACX,SAAA,EACkB;QAClB,MAAM,OAAO,UAAU,OAAA,CAAQ;QAC/B,MAAM,mBAAmB;YAAE,GAAG,SAAA;YAAW;QAAK;QAC9C,IAAI;YACF,IAAA,CAAK,kBAAA,CAAmB,IAAA,CAAK,gBAAgB;YAC7C,IAAA,CAAK,YAAA,CAAa;YAElB,MAAM,SAAS,MAAM;YACrB,IAAA,CAAK,UAAA,GAAa,eAAe,IAAA,CAAK,UAAA,EAAY,QAAQ;gBACxD,UAAU,UAAA;gBACV,UAAU,IAAA;aACX;YACD,OAAO;QACT,SAAE;YACA,MAAM,QAAQ,IAAA,CAAK,kBAAA,CAAmB,OAAA,CAAQ,gBAAgB;YAC9D,IAAI,QAAQ,CAAA,GAAI;gBACd,IAAA,CAAK,kBAAA,CAAmB,MAAA,CAAO,OAAO,CAAC;YACzC;YACA,IAAA,CAAK,YAAA,CAAa;QACpB;IACF;IApDO,YAAY,YAAA,CAAsB;QACvC,KAAA,CAAM,kLANS,sBACf,CAAC,CAAA,qMACK,wMACA;QAIN,IAAA,CAAK,UAAA,GAAa;QAClB,IAAA,CAAK,YAAA,GAAe;IACtB;AAiDF","debugId":null}},
    {"offset": {"line": 2777, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/legacy-runtime/runtime-cores/remote-thread-list/RemoteThreadListThreadListRuntimeCore.tsx"],"sourcesContent":["\"use client\";\n\nimport { ThreadListRuntimeCore } from \"../core/ThreadListRuntimeCore\";\nimport { generateId } from \"../../../internal\";\nimport {\n  RemoteThreadInitializeResponse,\n  RemoteThreadListOptions,\n} from \"./types\";\nimport { RemoteThreadListHookInstanceManager } from \"./RemoteThreadListHookInstanceManager\";\nimport { BaseSubscribable } from \"./BaseSubscribable\";\nimport { EMPTY_THREAD_CORE } from \"./EMPTY_THREAD_CORE\";\nimport { OptimisticState } from \"./OptimisticState\";\nimport { FC, Fragment, useEffect, useId } from \"react\";\nimport { create } from \"zustand\";\nimport { AssistantMessageStream } from \"assistant-stream\";\nimport { ModelContextProvider } from \"../../../model-context\";\nimport { RuntimeAdapterProvider } from \"../adapters/RuntimeAdapterProvider\";\n\ntype RemoteThreadData =\n  | {\n      readonly id: string;\n      readonly remoteId: undefined;\n      readonly externalId: undefined;\n      readonly status: \"new\";\n      readonly title: undefined;\n    }\n  | {\n      readonly id: string;\n      readonly initializeTask: Promise<RemoteThreadInitializeResponse>;\n      readonly remoteId: undefined;\n      readonly externalId: undefined;\n      readonly status: \"regular\" | \"archived\";\n      readonly title?: string | undefined;\n    }\n  | {\n      readonly id: string;\n      readonly initializeTask: Promise<RemoteThreadInitializeResponse>;\n      readonly remoteId: string;\n      readonly externalId: string | undefined;\n      readonly status: \"regular\" | \"archived\";\n      readonly title?: string | undefined;\n    };\n\ntype THREAD_MAPPING_ID = string & { __brand: \"THREAD_MAPPING_ID\" };\nfunction createThreadMappingId(id: string): THREAD_MAPPING_ID {\n  return id as THREAD_MAPPING_ID;\n}\n\ntype RemoteThreadState = {\n  readonly isLoading: boolean;\n  readonly newThreadId: string | undefined;\n  readonly threadIds: readonly string[];\n  readonly archivedThreadIds: readonly string[];\n  readonly threadIdMap: Readonly<Record<string, THREAD_MAPPING_ID>>;\n  readonly threadData: Readonly<Record<THREAD_MAPPING_ID, RemoteThreadData>>;\n};\n\nconst getThreadData = (\n  state: RemoteThreadState,\n  threadIdOrRemoteId: string,\n) => {\n  const idx = state.threadIdMap[threadIdOrRemoteId];\n  if (idx === undefined) return undefined;\n  return state.threadData[idx];\n};\n\nconst updateStatusReducer = (\n  state: RemoteThreadState,\n  threadIdOrRemoteId: string,\n  newStatus: \"regular\" | \"archived\" | \"deleted\",\n) => {\n  const data = getThreadData(state, threadIdOrRemoteId);\n  if (!data) return state;\n\n  const { id, remoteId, status: lastStatus } = data;\n  if (lastStatus === newStatus) return state;\n\n  const newState = { ...state };\n\n  // lastStatus\n  switch (lastStatus) {\n    case \"new\":\n      newState.newThreadId = undefined;\n      break;\n    case \"regular\":\n      newState.threadIds = newState.threadIds.filter((t) => t !== id);\n      break;\n    case \"archived\":\n      newState.archivedThreadIds = newState.archivedThreadIds.filter(\n        (t) => t !== id,\n      );\n      break;\n\n    default: {\n      const _exhaustiveCheck: never = lastStatus;\n      throw new Error(`Unsupported state: ${_exhaustiveCheck}`);\n    }\n  }\n\n  // newStatus\n  switch (newStatus) {\n    case \"regular\":\n      newState.threadIds = [id, ...newState.threadIds];\n      break;\n\n    case \"archived\":\n      newState.archivedThreadIds = [id, ...newState.archivedThreadIds];\n      break;\n\n    case \"deleted\":\n      newState.threadData = Object.fromEntries(\n        Object.entries(newState.threadData).filter(([key]) => key !== id),\n      );\n      newState.threadIdMap = Object.fromEntries(\n        Object.entries(newState.threadIdMap).filter(\n          ([key]) => key !== id && key !== remoteId,\n        ),\n      );\n      break;\n\n    default: {\n      const _exhaustiveCheck: never = newStatus;\n      throw new Error(`Unsupported state: ${_exhaustiveCheck}`);\n    }\n  }\n\n  if (newStatus !== \"deleted\") {\n    newState.threadData = {\n      ...newState.threadData,\n      [id]: {\n        ...data,\n        status: newStatus,\n      },\n    };\n  }\n\n  return newState;\n};\n\nexport class RemoteThreadListThreadListRuntimeCore\n  extends BaseSubscribable\n  implements ThreadListRuntimeCore\n{\n  private _options!: RemoteThreadListOptions;\n  private readonly _hookManager: RemoteThreadListHookInstanceManager;\n\n  private _loadThreadsPromise: Promise<void> | undefined;\n\n  private _mainThreadId!: string;\n  private readonly _state = new OptimisticState<RemoteThreadState>({\n    isLoading: false,\n    newThreadId: undefined,\n    threadIds: [],\n    archivedThreadIds: [],\n    threadIdMap: {},\n    threadData: {},\n  });\n\n  public get threadData() {\n    return this._state.value.threadData;\n  }\n\n  public getLoadThreadsPromise() {\n    // TODO this needs to be cached in case this promise is loaded during suspense\n    if (!this._loadThreadsPromise) {\n      this._loadThreadsPromise = this._state\n        .optimisticUpdate({\n          execute: () => this._options.adapter.list(),\n          loading: (state) => {\n            return {\n              ...state,\n              isLoading: true,\n            };\n          },\n          then: (state, l) => {\n            const newThreadIds = [];\n            const newArchivedThreadIds = [];\n            const newThreadIdMap = {} as Record<string, THREAD_MAPPING_ID>;\n            const newThreadData = {} as Record<\n              THREAD_MAPPING_ID,\n              RemoteThreadData\n            >;\n\n            for (const thread of l.threads) {\n              switch (thread.status) {\n                case \"regular\":\n                  newThreadIds.push(thread.remoteId);\n                  break;\n                case \"archived\":\n                  newArchivedThreadIds.push(thread.remoteId);\n                  break;\n                default: {\n                  const _exhaustiveCheck: never = thread.status;\n                  throw new Error(`Unsupported state: ${_exhaustiveCheck}`);\n                }\n              }\n\n              const mappingId = createThreadMappingId(thread.remoteId);\n              newThreadIdMap[thread.remoteId] = mappingId;\n              newThreadData[mappingId] = {\n                id: thread.remoteId,\n                remoteId: thread.remoteId,\n                externalId: thread.externalId,\n                status: thread.status,\n                title: thread.title,\n                initializeTask: Promise.resolve({\n                  remoteId: thread.remoteId,\n                  externalId: thread.externalId,\n                }),\n              };\n            }\n\n            return {\n              ...state,\n              threadIds: newThreadIds,\n              archivedThreadIds: newArchivedThreadIds,\n              threadIdMap: {\n                ...state.threadIdMap,\n                ...newThreadIdMap,\n              },\n              threadData: {\n                ...state.threadData,\n                ...newThreadData,\n              },\n            };\n          },\n        })\n        .then(() => {});\n    }\n\n    return this._loadThreadsPromise;\n  }\n\n  constructor(\n    options: RemoteThreadListOptions,\n    private readonly contextProvider: ModelContextProvider,\n  ) {\n    super();\n\n    this._state.subscribe(() => this._notifySubscribers());\n    this._hookManager = new RemoteThreadListHookInstanceManager(\n      options.runtimeHook,\n    );\n    this.useProvider = create(() => ({\n      Provider: options.adapter.unstable_Provider ?? Fragment,\n    }));\n    this.__internal_setOptions(options);\n\n    this.switchToNewThread();\n  }\n\n  private useProvider;\n\n  public __internal_setOptions(options: RemoteThreadListOptions) {\n    if (this._options === options) return;\n\n    this._options = options;\n\n    const Provider = options.adapter.unstable_Provider ?? Fragment;\n    if (Provider !== this.useProvider.getState().Provider) {\n      this.useProvider.setState({ Provider }, true);\n    }\n\n    this._hookManager.setRuntimeHook(options.runtimeHook);\n  }\n\n  public __internal_load() {\n    this.getLoadThreadsPromise(); // begin loading on initial bind\n  }\n\n  public get isLoading() {\n    return this._state.value.isLoading;\n  }\n\n  public get threadIds() {\n    return this._state.value.threadIds;\n  }\n\n  public get archivedThreadIds() {\n    return this._state.value.archivedThreadIds;\n  }\n\n  public get newThreadId() {\n    return this._state.value.newThreadId;\n  }\n\n  public get mainThreadId(): string {\n    return this._mainThreadId;\n  }\n\n  public getMainThreadRuntimeCore() {\n    const result = this._hookManager.getThreadRuntimeCore(this._mainThreadId);\n    if (!result) return EMPTY_THREAD_CORE;\n    return result;\n  }\n\n  public getThreadRuntimeCore(threadIdOrRemoteId: string) {\n    const data = this.getItemById(threadIdOrRemoteId);\n    if (!data) throw new Error(\"Thread not found\");\n\n    const result = this._hookManager.getThreadRuntimeCore(data.id);\n    if (!result) throw new Error(\"Thread not found\");\n    return result;\n  }\n\n  public getItemById(threadIdOrRemoteId: string) {\n    return getThreadData(this._state.value, threadIdOrRemoteId);\n  }\n\n  public async switchToThread(threadIdOrRemoteId: string): Promise<void> {\n    const data = this.getItemById(threadIdOrRemoteId);\n    if (!data) throw new Error(\"Thread not found\");\n\n    if (this._mainThreadId === data.id) return;\n\n    const task = this._hookManager.startThreadRuntime(data.id);\n    if (this.mainThreadId !== undefined) {\n      await task;\n    } else {\n      task.then(() => this._notifySubscribers());\n    }\n\n    if (data.status === \"archived\") await this.unarchive(data.id);\n    this._mainThreadId = data.id;\n\n    this._notifySubscribers();\n  }\n\n  public async switchToNewThread(): Promise<void> {\n    // an initialization transaction is in progress, wait for it to settle\n    while (\n      this._state.baseValue.newThreadId !== undefined &&\n      this._state.value.newThreadId === undefined\n    ) {\n      await this._state.waitForUpdate();\n    }\n\n    const state = this._state.value;\n    let id: string | undefined = this._state.value.newThreadId;\n    if (id === undefined) {\n      do {\n        id = `__LOCALID_${generateId()}`;\n      } while (state.threadIdMap[id]);\n\n      const mappingId = createThreadMappingId(id);\n      this._state.update({\n        ...state,\n        newThreadId: id,\n        threadIdMap: {\n          ...state.threadIdMap,\n          [id]: mappingId,\n        },\n        threadData: {\n          ...state.threadData,\n          [mappingId]: {\n            status: \"new\",\n            id,\n            remoteId: undefined,\n            externalId: undefined,\n            title: undefined,\n          } satisfies RemoteThreadData,\n        },\n      });\n    }\n\n    return this.switchToThread(id);\n  }\n\n  public initialize = async (threadId: string) => {\n    if (this._state.value.newThreadId !== threadId) {\n      const data = this.getItemById(threadId);\n      if (!data) throw new Error(\"Thread not found\");\n      if (data.status === \"new\") throw new Error(\"Unexpected new state\");\n      return data.initializeTask;\n    }\n\n    return this._state.optimisticUpdate({\n      execute: () => {\n        return this._options.adapter.initialize(threadId);\n      },\n      optimistic: (state) => {\n        return updateStatusReducer(state, threadId, \"regular\");\n      },\n      loading: (state, task) => {\n        const mappingId = createThreadMappingId(threadId);\n        return {\n          ...state,\n          threadData: {\n            ...state.threadData,\n            [mappingId]: {\n              ...state.threadData[mappingId],\n              initializeTask: task,\n            },\n          },\n        };\n      },\n      then: (state, { remoteId, externalId }) => {\n        const data = getThreadData(state, threadId);\n        if (!data) return state;\n\n        const mappingId = createThreadMappingId(threadId);\n        return {\n          ...state,\n          threadIdMap: {\n            ...state.threadIdMap,\n            [remoteId]: mappingId,\n          },\n          threadData: {\n            ...state.threadData,\n            [mappingId]: {\n              ...data,\n              initializeTask: Promise.resolve({ remoteId, externalId }),\n              remoteId,\n              externalId,\n            },\n          },\n        };\n      },\n    });\n  };\n\n  public generateTitle = async (threadId: string) => {\n    const data = this.getItemById(threadId);\n    if (!data) throw new Error(\"Thread not found\");\n    if (data.status === \"new\") throw new Error(\"Thread is not yet initialized\");\n\n    const { remoteId } = await data.initializeTask;\n\n    const runtimeCore = this._hookManager.getThreadRuntimeCore(data.id);\n    if (!runtimeCore) return; // thread is no longer running\n\n    const messages = runtimeCore.messages;\n    const stream = await this._options.adapter.generateTitle(\n      remoteId,\n      messages,\n    );\n    const messageStream = AssistantMessageStream.fromAssistantStream(stream);\n    for await (const result of messageStream) {\n      const newTitle = result.parts.filter((c) => c.type === \"text\")[0]?.text;\n      const state = this._state.baseValue;\n      this._state.update({\n        ...state,\n        threadData: {\n          ...state.threadData,\n          [data.id]: {\n            ...data,\n            title: newTitle,\n          },\n        },\n      });\n    }\n  };\n\n  public rename(threadIdOrRemoteId: string, newTitle: string): Promise<void> {\n    const data = this.getItemById(threadIdOrRemoteId);\n    if (!data) throw new Error(\"Thread not found\");\n    if (data.status === \"new\") throw new Error(\"Thread is not yet initialized\");\n\n    return this._state.optimisticUpdate({\n      execute: async () => {\n        const { remoteId } = await data.initializeTask;\n        return this._options.adapter.rename(remoteId, newTitle);\n      },\n      optimistic: (state) => {\n        const data = getThreadData(state, threadIdOrRemoteId);\n        if (!data) return state;\n\n        return {\n          ...state,\n          threadData: {\n            ...state.threadData,\n            [data.id]: {\n              ...data,\n              title: newTitle,\n            },\n          },\n        };\n      },\n    });\n  }\n\n  private async _ensureThreadIsNotMain(threadId: string) {\n    if (threadId === this.newThreadId)\n      throw new Error(\"Cannot ensure new thread is not main\");\n\n    if (threadId === this._mainThreadId) {\n      await this.switchToNewThread();\n    }\n  }\n\n  public async archive(threadIdOrRemoteId: string) {\n    const data = this.getItemById(threadIdOrRemoteId);\n    if (!data) throw new Error(\"Thread not found\");\n    if (data.status !== \"regular\")\n      throw new Error(\"Thread is not yet initialized or already archived\");\n\n    return this._state.optimisticUpdate({\n      execute: async () => {\n        await this._ensureThreadIsNotMain(data.id);\n        const { remoteId } = await data.initializeTask;\n        return this._options.adapter.archive(remoteId);\n      },\n      optimistic: (state) => {\n        return updateStatusReducer(state, data.id, \"archived\");\n      },\n    });\n  }\n\n  public unarchive(threadIdOrRemoteId: string): Promise<void> {\n    const data = this.getItemById(threadIdOrRemoteId);\n    if (!data) throw new Error(\"Thread not found\");\n    if (data.status !== \"archived\") throw new Error(\"Thread is not archived\");\n\n    return this._state.optimisticUpdate({\n      execute: async () => {\n        try {\n          const { remoteId } = await data.initializeTask;\n          return await this._options.adapter.unarchive(remoteId);\n        } catch (error) {\n          await this._ensureThreadIsNotMain(data.id);\n          throw error;\n        }\n      },\n      optimistic: (state) => {\n        return updateStatusReducer(state, data.id, \"regular\");\n      },\n    });\n  }\n\n  public async delete(threadIdOrRemoteId: string) {\n    const data = this.getItemById(threadIdOrRemoteId);\n    if (!data) throw new Error(\"Thread not found\");\n    if (data.status !== \"regular\" && data.status !== \"archived\")\n      throw new Error(\"Thread is not yet initialized\");\n\n    return this._state.optimisticUpdate({\n      execute: async () => {\n        await this._ensureThreadIsNotMain(data.id);\n        const { remoteId } = await data.initializeTask;\n        return await this._options.adapter.delete(remoteId);\n      },\n      optimistic: (state) => {\n        return updateStatusReducer(state, data.id, \"deleted\");\n      },\n    });\n  }\n\n  public async detach(threadIdOrRemoteId: string): Promise<void> {\n    const data = this.getItemById(threadIdOrRemoteId);\n    if (!data) throw new Error(\"Thread not found\");\n    if (data.status !== \"regular\" && data.status !== \"archived\")\n      throw new Error(\"Thread is not yet initialized\");\n\n    await this._ensureThreadIsNotMain(data.id);\n    this._hookManager.stopThreadRuntime(data.id);\n  }\n\n  private useBoundIds = create<string[]>(() => []);\n\n  public __internal_RenderComponent: FC = () => {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const id = useId();\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    useEffect(() => {\n      this.useBoundIds.setState((s) => [...s, id], true);\n      return () => {\n        this.useBoundIds.setState((s) => s.filter((i) => i !== id), true);\n      };\n    }, [id]);\n\n    const boundIds = this.useBoundIds();\n    const { Provider } = this.useProvider();\n\n    const adapters = {\n      modelContext: this.contextProvider,\n    };\n\n    return (\n      (boundIds.length === 0 || boundIds[0] === id) && (\n        // only render if the component is the first one mounted\n        <RuntimeAdapterProvider adapters={adapters}>\n          <this._hookManager.__internal_RenderThreadRuntimes\n            provider={Provider}\n          />\n        </RuntimeAdapterProvider>\n      )\n    );\n  };\n}\n"],"names":["data"],"mappings":"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","debugId":null}},
    {"offset": {"line": 3251, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/legacy-runtime/runtime/subscribable/BaseSubject.ts"],"sourcesContent":["import { Unsubscribe } from \"../../../types/Unsubscribe\";\n\nexport abstract class BaseSubject {\n  private _subscriptions = new Set<() => void>();\n  private _connection: Unsubscribe | undefined;\n\n  protected get isConnected() {\n    return !!this._connection;\n  }\n\n  protected abstract _connect(): Unsubscribe;\n\n  protected notifySubscribers() {\n    for (const callback of this._subscriptions) callback();\n  }\n\n  private _updateConnection() {\n    if (this._subscriptions.size > 0) {\n      if (this._connection) return;\n      this._connection = this._connect();\n    } else {\n      this._connection?.();\n      this._connection = undefined;\n    }\n  }\n\n  public subscribe(callback: () => void) {\n    this._subscriptions.add(callback);\n    this._updateConnection();\n\n    return () => {\n      this._subscriptions.delete(callback);\n      this._updateConnection();\n    };\n  }\n}\n"],"names":[],"mappings":";;;;;;;AAEO,IAAe,cAAf,MAA2B;IAIhC,IAAc,cAAc;QAC1B,OAAO,CAAC,CAAC,IAAA,CAAK,WAAA;IAChB;IAIU,oBAAoB;QAC5B,KAAA,MAAW,YAAY,IAAA,CAAK,cAAA,CAAgB,SAAS;IACvD;IAEQ,oBAAoB;QAC1B,IAAI,IAAA,CAAK,cAAA,CAAe,IAAA,GAAO,GAAG;YAChC,IAAI,IAAA,CAAK,WAAA,CAAa,CAAA;YACtB,IAAA,CAAK,WAAA,GAAc,IAAA,CAAK,QAAA,CAAS;QACnC,OAAO;gBACL,mBAAA;aAAA,oBAAA,CAAA,QAAA,IAAA,EAAK,WAAA,GAAc,WAAnB,wCAAA,uBAAA;YACA,IAAA,CAAK,WAAA,GAAc,KAAA;QACrB;IACF;IAEO,UAAU,QAAA,EAAsB;QACrC,IAAA,CAAK,cAAA,CAAe,GAAA,CAAI,QAAQ;QAChC,IAAA,CAAK,iBAAA,CAAkB;QAEvB,OAAO,MAAM;YACX,IAAA,CAAK,cAAA,CAAe,MAAA,CAAO,QAAQ;YACnC,IAAA,CAAK,iBAAA,CAAkB;QACzB;IACF;;uLA/BQ,kBAAiB,aAAA,GAAA,IAAI,IAAgB;2MACrC;;AA+BV","debugId":null}},
    {"offset": {"line": 3294, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/legacy-runtime/runtime/subscribable/SKIP_UPDATE.ts"],"sourcesContent":["export const SKIP_UPDATE = Symbol(\"skip-update\");\nexport type SKIP_UPDATE = typeof SKIP_UPDATE;\n"],"names":[],"mappings":";;;;;AAAO,IAAM,cAAc,OAAO,aAAa","debugId":null}},
    {"offset": {"line": 3306, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/legacy-runtime/runtime/subscribable/LazyMemoizeSubject.ts"],"sourcesContent":["import { BaseSubject } from \"./BaseSubject\";\nimport { SKIP_UPDATE } from \"./SKIP_UPDATE\";\nimport { SubscribableWithState } from \"./Subscribable\";\n\nexport class LazyMemoizeSubject<TState extends object, TPath>\n  extends BaseSubject\n  implements SubscribableWithState<TState, TPath>\n{\n  public get path() {\n    return this.binding.path;\n  }\n\n  constructor(\n    private binding: SubscribableWithState<TState | SKIP_UPDATE, TPath>,\n  ) {\n    super();\n  }\n\n  private _previousStateDirty = true;\n  private _previousState: TState | undefined;\n  public getState = () => {\n    if (!this.isConnected || this._previousStateDirty) {\n      const newState = this.binding.getState();\n      if (newState !== SKIP_UPDATE) {\n        this._previousState = newState;\n      }\n      this._previousStateDirty = false;\n    }\n    if (this._previousState === undefined)\n      throw new Error(\"Entry not available in the store\");\n    return this._previousState;\n  };\n\n  protected _connect() {\n    const callback = () => {\n      this._previousStateDirty = true;\n      this.notifySubscribers();\n    };\n\n    return this.binding.subscribe(callback);\n  }\n}\n"],"names":[],"mappings":";;;;;;AAAA,SAAS,mBAAmB;AAC5B,SAAS,mBAAmB;;;;AAGrB,IAAM,qBAAN,cACG,mOAAA,CAEV;IACE,IAAW,OAAO;QAChB,OAAO,IAAA,CAAK,OAAA,CAAQ,IAAA;IACtB;IAuBU,WAAW;QACnB,MAAM,WAAW,MAAM;YACrB,IAAA,CAAK,mBAAA,GAAsB;YAC3B,IAAA,CAAK,iBAAA,CAAkB;QACzB;QAEA,OAAO,IAAA,CAAK,OAAA,CAAQ,SAAA,CAAU,QAAQ;IACxC;IA5BA,YACU,OAAA,CACR;QACA,KAAA,CAAM,GAGA,sMAAsB,6MACtB,mLACD,YAAW,MAAM;YACtB,IAAI,CAAC,IAAA,CAAK,WAAA,IAAe,IAAA,CAAK,mBAAA,EAAqB;gBACjD,MAAM,WAAW,IAAA,CAAK,OAAA,CAAQ,QAAA,CAAS;gBACvC,IAAI,aAAa,mOAAA,EAAa;oBAC5B,IAAA,CAAK,cAAA,GAAiB;gBACxB;gBACA,IAAA,CAAK,mBAAA,GAAsB;YAC7B;YACA,IAAI,IAAA,CAAK,cAAA,KAAmB,KAAA,GAC1B,MAAM,IAAI,MAAM,kCAAkC;YACpD,OAAO,IAAA,CAAK,cAAA;QACd;QAlBU,IAAA,CAAA,OAAA,GAAA;IAGV;AAyBF","debugId":null}},
    {"offset": {"line": 3349, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/legacy-runtime/runtime/ThreadListItemRuntime.ts"],"sourcesContent":["import { Unsubscribe } from \"../../types\";\nimport { ThreadListItemRuntimePath } from \"./RuntimePathTypes\";\nimport { SubscribableWithState } from \"./subscribable/Subscribable\";\nimport { ThreadListRuntimeCoreBinding } from \"./ThreadListRuntime\";\n\nexport type ThreadListItemEventType = \"switched-to\" | \"switched-away\";\n\nimport type {\n  ThreadListItemState,\n  ThreadListItemStatus,\n} from \"./RuntimeBindings\";\n\nexport type { ThreadListItemState, ThreadListItemStatus };\n\nexport type ThreadListItemRuntime = {\n  readonly path: ThreadListItemRuntimePath;\n  getState(): ThreadListItemState;\n\n  initialize(): Promise<{ remoteId: string; externalId: string | undefined }>;\n  generateTitle(): Promise<void>;\n\n  switchTo(): Promise<void>;\n  rename(newTitle: string): Promise<void>;\n  archive(): Promise<void>;\n  unarchive(): Promise<void>;\n  delete(): Promise<void>;\n\n  /**\n   * Detaches the ThreadListItem instance, unmounting the ThreadRuntime hook.\n   */\n  detach(): void;\n\n  subscribe(callback: () => void): Unsubscribe;\n\n  unstable_on(\n    event: ThreadListItemEventType,\n    callback: () => void,\n  ): Unsubscribe;\n\n  /** @internal */\n  __internal_getRuntime(): ThreadListItemRuntime;\n};\n\nexport type ThreadListItemStateBinding = SubscribableWithState<\n  ThreadListItemState,\n  ThreadListItemRuntimePath\n>;\n\nexport class ThreadListItemRuntimeImpl implements ThreadListItemRuntime {\n  public get path() {\n    return this._core.path;\n  }\n\n  constructor(\n    private _core: ThreadListItemStateBinding,\n    private _threadListBinding: ThreadListRuntimeCoreBinding,\n  ) {\n    this.__internal_bindMethods();\n  }\n\n  protected __internal_bindMethods() {\n    this.switchTo = this.switchTo.bind(this);\n    this.rename = this.rename.bind(this);\n    this.archive = this.archive.bind(this);\n    this.unarchive = this.unarchive.bind(this);\n    this.delete = this.delete.bind(this);\n    this.initialize = this.initialize.bind(this);\n    this.generateTitle = this.generateTitle.bind(this);\n    this.subscribe = this.subscribe.bind(this);\n    this.unstable_on = this.unstable_on.bind(this);\n    this.getState = this.getState.bind(this);\n    this.detach = this.detach.bind(this);\n  }\n\n  public getState(): ThreadListItemState {\n    return this._core.getState();\n  }\n\n  public switchTo(): Promise<void> {\n    const state = this._core.getState();\n    return this._threadListBinding.switchToThread(state.id);\n  }\n\n  public rename(newTitle: string): Promise<void> {\n    const state = this._core.getState();\n\n    return this._threadListBinding.rename(state.id, newTitle);\n  }\n\n  public archive(): Promise<void> {\n    const state = this._core.getState();\n\n    return this._threadListBinding.archive(state.id);\n  }\n\n  public unarchive(): Promise<void> {\n    const state = this._core.getState();\n\n    return this._threadListBinding.unarchive(state.id);\n  }\n\n  public delete(): Promise<void> {\n    const state = this._core.getState();\n\n    return this._threadListBinding.delete(state.id);\n  }\n\n  public initialize(): Promise<{\n    remoteId: string;\n    externalId: string | undefined;\n  }> {\n    const state = this._core.getState();\n    return this._threadListBinding.initialize(state.id);\n  }\n\n  public generateTitle(): Promise<void> {\n    const state = this._core.getState();\n    return this._threadListBinding.generateTitle(state.id);\n  }\n\n  public unstable_on(event: ThreadListItemEventType, callback: () => void) {\n    // if the runtime is bound to a specific thread, trigger if isMain is toggled\n    // if the runtime is bound to the main thread, trigger switched-to if threadId changes\n\n    let prevIsMain = this._core.getState().isMain;\n    let prevThreadId = this._core.getState().id;\n    return this.subscribe(() => {\n      const currentState = this._core.getState();\n      const newIsMain = currentState.isMain;\n      const newThreadId = currentState.id;\n      if (prevIsMain === newIsMain && prevThreadId === newThreadId) return;\n      prevIsMain = newIsMain;\n      prevThreadId = newThreadId;\n\n      if (event === \"switched-to\" && !newIsMain) return;\n      if (event === \"switched-away\" && newIsMain) return;\n      callback();\n    });\n  }\n\n  public subscribe(callback: () => void): Unsubscribe {\n    return this._core.subscribe(callback);\n  }\n\n  public detach(): void {\n    const state = this._core.getState();\n\n    this._threadListBinding.detach(state.id);\n  }\n\n  /** @internal */\n  public __internal_getRuntime(): ThreadListItemRuntime {\n    return this;\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3439, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/legacy-runtime/runtime/subscribable/shallowEqual.ts"],"sourcesContent":["export function shallowEqual<T extends object>(\n  objA: T | undefined,\n  objB: T | undefined,\n) {\n  if (objA === undefined && objB === undefined) return true;\n  if (objA === undefined) return false;\n  if (objB === undefined) return false;\n\n  for (const key of Object.keys(objA)) {\n    const valueA = objA[key as keyof T];\n    const valueB = objB[key as keyof T];\n    if (!Object.is(valueA, valueB)) return false;\n  }\n\n  return true;\n}\n"],"names":[],"mappings":";;;;;AAAO,SAAS,aACd,IAAA,EACA,IAAA,EACA;IACA,IAAI,SAAS,KAAA,KAAa,SAAS,KAAA,EAAW,CAAA,OAAO;IACrD,IAAI,SAAS,KAAA,EAAW,CAAA,OAAO;IAC/B,IAAI,SAAS,KAAA,EAAW,CAAA,OAAO;IAE/B,KAAA,MAAW,OAAO,OAAO,IAAA,CAAK,IAAI,EAAG;QACnC,MAAM,SAAS,IAAA,CAAK,GAAc,CAAA;QAClC,MAAM,SAAS,IAAA,CAAK,GAAc,CAAA;QAClC,IAAI,CAAC,OAAO,EAAA,CAAG,QAAQ,MAAM,EAAG,CAAA,OAAO;IACzC;IAEA,OAAO;AACT","debugId":null}},
    {"offset": {"line": 3461, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/legacy-runtime/runtime/subscribable/ShallowMemoizeSubject.ts"],"sourcesContent":["import { shallowEqual } from \"./shallowEqual\";\nimport { BaseSubject } from \"./BaseSubject\";\nimport { SubscribableWithState } from \"./Subscribable\";\nimport { SKIP_UPDATE } from \"./SKIP_UPDATE\";\n\nexport class ShallowMemoizeSubject<TState extends object, TPath>\n  extends BaseSubject\n  implements SubscribableWithState<TState, TPath>\n{\n  public get path() {\n    return this.binding.path;\n  }\n\n  constructor(\n    private binding: SubscribableWithState<TState | SKIP_UPDATE, TPath>,\n  ) {\n    super();\n    const state = binding.getState();\n    if (state === SKIP_UPDATE)\n      throw new Error(\"Entry not available in the store\");\n    this._previousState = state;\n  }\n\n  private _previousState: TState;\n  public getState = () => {\n    if (!this.isConnected) this._syncState();\n    return this._previousState;\n  };\n\n  private _syncState() {\n    const state = this.binding.getState();\n    if (state === SKIP_UPDATE) return false;\n    if (shallowEqual(state, this._previousState)) return false;\n    this._previousState = state;\n    return true;\n  }\n\n  protected _connect() {\n    const callback = () => {\n      if (this._syncState()) {\n        this.notifySubscribers();\n      }\n    };\n\n    return this.binding.subscribe(callback);\n  }\n}\n"],"names":[],"mappings":";;;;;;AAAA,SAAS,oBAAoB;AAC7B,SAAS,mBAAmB;AAE5B,SAAS,mBAAmB;;;;;AAErB,IAAM,wBAAN,cACG,mOAAA,CAEV;IACE,IAAW,OAAO;QAChB,OAAO,IAAA,CAAK,OAAA,CAAQ,IAAA;IACtB;IAkBQ,aAAa;QACnB,MAAM,QAAQ,IAAA,CAAK,OAAA,CAAQ,QAAA,CAAS;QACpC,IAAI,UAAU,mOAAA,CAAa,CAAA,OAAO;QAClC,IAAI,yOAAA,EAAa,OAAO,IAAA,CAAK,cAAc,EAAG,CAAA,OAAO;QACrD,IAAA,CAAK,cAAA,GAAiB;QACtB,OAAO;IACT;IAEU,WAAW;QACnB,MAAM,WAAW,MAAM;YACrB,IAAI,IAAA,CAAK,UAAA,CAAW,GAAG;gBACrB,IAAA,CAAK,iBAAA,CAAkB;YACzB;QACF;QAEA,OAAO,IAAA,CAAK,OAAA,CAAQ,SAAA,CAAU,QAAQ;IACxC;IAhCA,YACU,OAAA,CACR;QACA,KAAA,CAAM,yMAOA,mLACD,YAAW,MAAM;YACtB,IAAI,CAAC,IAAA,CAAK,WAAA,CAAa,CAAA,IAAA,CAAK,UAAA,CAAW;YACvC,OAAO,IAAA,CAAK,cAAA;QACd;QAbU,IAAA,CAAA,OAAA,GAAA;QAGR,MAAM,QAAQ,QAAQ,QAAA,CAAS;QAC/B,IAAI,UAAU,mOAAA,EACZ,MAAM,IAAI,MAAM,kCAAkC;QACpD,IAAA,CAAK,cAAA,GAAiB;IACxB;AAyBF","debugId":null}},
    {"offset": {"line": 3510, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/legacy-runtime/runtime-cores/external-store/getExternalStoreMessage.tsx"],"sourcesContent":["import { ThreadState } from \"../../runtime\";\nimport { ThreadMessage } from \"../../../types\";\n\nexport const symbolInnerMessage = Symbol(\"innerMessage\");\nconst symbolInnerMessages = Symbol(\"innerMessages\");\n\ntype WithInnerMessages<T> = {\n  [symbolInnerMessage]?: T | T[];\n  [symbolInnerMessages]?: T[];\n};\n\n/**\n * @deprecated Use `getExternalStoreMessages` (plural) instead. This function will be removed in 0.8.0.\n */\nexport const getExternalStoreMessage = <T,>(input: ThreadMessage) => {\n  const withInnerMessages = input as WithInnerMessages<T>;\n  return withInnerMessages[symbolInnerMessage];\n};\n\nconst EMPTY_ARRAY: never[] = [];\n\nexport const getExternalStoreMessages = <T,>(\n  input: ThreadState | ThreadMessage | ThreadMessage[\"content\"][number],\n) => {\n  // TODO temp until 0.8.0 (migrate useExternalStoreRuntime to always set an array)\n\n  const container = (\n    \"messages\" in input ? input.messages : input\n  ) as WithInnerMessages<T>;\n  const value = container[symbolInnerMessages] || container[symbolInnerMessage];\n  if (!value) return EMPTY_ARRAY;\n  if (Array.isArray(value)) {\n    return value;\n  }\n  container[symbolInnerMessages] = [value];\n  return container[symbolInnerMessages];\n};\n"],"names":[],"mappings":";;;;;;;;;AAGO,IAAM,qBAAqB,OAAO,cAAc;AACvD,IAAM,sBAAsB,OAAO,eAAe;AAU3C,IAAM,0BAA0B,CAAK,UAAyB;IACnE,MAAM,oBAAoB;IAC1B,OAAO,iBAAA,CAAkB,kBAAkB,CAAA;AAC7C;AAEA,IAAM,cAAuB,CAAC,CAAA;AAEvB,IAAM,2BAA2B,CACtC,UACG;IAGH,MAAM,YACJ,cAAc,QAAQ,MAAM,QAAA,GAAW;IAEzC,MAAM,QAAQ,SAAA,CAAU,mBAAmB,CAAA,IAAK,SAAA,CAAU,kBAAkB,CAAA;IAC5E,IAAI,CAAC,MAAO,CAAA,OAAO;IACnB,IAAI,MAAM,OAAA,CAAQ,KAAK,GAAG;QACxB,OAAO;IACT;IACA,SAAA,CAAU,mBAAmB,CAAA,GAAI;QAAC,KAAK;KAAA;IACvC,OAAO,SAAA,CAAU,mBAAmB,CAAA;AACtC","debugId":null}},
    {"offset": {"line": 3544, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/utils/getThreadMessageText.tsx"],"sourcesContent":["import type {\n  AppendMessage,\n  TextMessagePart,\n  ThreadMessage,\n} from \"../types/AssistantTypes\";\n\nexport const getThreadMessageText = (\n  message: ThreadMessage | AppendMessage,\n) => {\n  const textParts = message.content.filter(\n    (part) => part.type === \"text\",\n  ) as TextMessagePart[];\n\n  return textParts.map((part) => part.text).join(\"\\n\\n\");\n};\n"],"names":[],"mappings":";;;;;AAMO,IAAM,uBAAuB,CAClC,YACG;IACH,MAAM,YAAY,QAAQ,OAAA,CAAQ,MAAA,CAChC,CAAC,OAAS,KAAK,IAAA,KAAS;IAG1B,OAAO,UAAU,GAAA,CAAI,CAAC,OAAS,KAAK,IAAI,EAAE,IAAA,CAAK,MAAM;AACvD","debugId":null}},
    {"offset": {"line": 3559, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/legacy-runtime/runtime/AttachmentRuntime.ts"],"sourcesContent":["import { SubscribableWithState } from \"./subscribable/Subscribable\";\n\nimport type { ComposerRuntimeCoreBinding } from \"./RuntimeBindings\";\nimport {\n  Attachment,\n  CompleteAttachment,\n  PendingAttachment,\n  Unsubscribe,\n} from \"../../types\";\nimport { AttachmentRuntimePath } from \"./RuntimePathTypes\";\n\ntype MessageAttachmentState = CompleteAttachment & {\n  readonly source: \"message\";\n};\n\ntype ThreadComposerAttachmentState = PendingAttachment & {\n  readonly source: \"thread-composer\";\n};\n\ntype EditComposerAttachmentState = Attachment & {\n  readonly source: \"edit-composer\";\n};\n\nexport type AttachmentState =\n  | ThreadComposerAttachmentState\n  | EditComposerAttachmentState\n  | MessageAttachmentState;\n\ntype AttachmentSnapshotBinding<Source extends AttachmentRuntimeSource> =\n  SubscribableWithState<\n    AttachmentState & { source: Source },\n    AttachmentRuntimePath & { attachmentSource: Source }\n  >;\n\ntype AttachmentRuntimeSource = AttachmentState[\"source\"];\n\nexport type AttachmentRuntime<\n  TSource extends AttachmentRuntimeSource = AttachmentRuntimeSource,\n> = {\n  readonly path: AttachmentRuntimePath & { attachmentSource: TSource };\n  readonly source: TSource;\n  getState(): AttachmentState & { source: TSource };\n  remove(): Promise<void>;\n  subscribe(callback: () => void): Unsubscribe;\n};\n\nexport abstract class AttachmentRuntimeImpl<\n  Source extends AttachmentRuntimeSource = AttachmentRuntimeSource,\n> implements AttachmentRuntime\n{\n  public get path() {\n    return this._core.path;\n  }\n\n  public abstract get source(): Source;\n\n  constructor(private _core: AttachmentSnapshotBinding<Source>) {\n    this.__internal_bindMethods();\n  }\n\n  protected __internal_bindMethods() {\n    this.getState = this.getState.bind(this);\n    this.remove = this.remove.bind(this);\n    this.subscribe = this.subscribe.bind(this);\n  }\n\n  public getState(): AttachmentState & { source: Source } {\n    return this._core.getState();\n  }\n\n  public abstract remove(): Promise<void>;\n\n  public subscribe(callback: () => void) {\n    return this._core.subscribe(callback);\n  }\n}\n\nabstract class ComposerAttachmentRuntime<\n  Source extends \"thread-composer\" | \"edit-composer\",\n> extends AttachmentRuntimeImpl<Source> {\n  constructor(\n    core: AttachmentSnapshotBinding<Source>,\n    private _composerApi: ComposerRuntimeCoreBinding,\n  ) {\n    super(core);\n  }\n\n  public remove() {\n    const core = this._composerApi.getState();\n    if (!core) throw new Error(\"Composer is not available\");\n    return core.removeAttachment(this.getState().id);\n  }\n}\n\nexport class ThreadComposerAttachmentRuntimeImpl extends ComposerAttachmentRuntime<\"thread-composer\"> {\n  public get source(): \"thread-composer\" {\n    return \"thread-composer\";\n  }\n}\n\nexport class EditComposerAttachmentRuntimeImpl extends ComposerAttachmentRuntime<\"edit-composer\"> {\n  public get source(): \"edit-composer\" {\n    return \"edit-composer\";\n  }\n}\n\nexport class MessageAttachmentRuntimeImpl extends AttachmentRuntimeImpl<\"message\"> {\n  public get source(): \"message\" {\n    return \"message\";\n  }\n\n  constructor(core: AttachmentSnapshotBinding<\"message\">) {\n    super(core);\n  }\n\n  public remove(): never {\n    throw new Error(\"Message attachments cannot be removed\");\n  }\n}\n"],"names":[],"mappings":";;;;;;;;;;;AA8CO,IAAe,wBAAf,MAGP;IACE,IAAW,OAAO;QAChB,OAAO,IAAA,CAAK,KAAA,CAAM,IAAA;IACpB;IAQU,yBAAyB;QACjC,IAAA,CAAK,QAAA,GAAW,IAAA,CAAK,QAAA,CAAS,IAAA,CAAK,IAAI;QACvC,IAAA,CAAK,MAAA,GAAS,IAAA,CAAK,MAAA,CAAO,IAAA,CAAK,IAAI;QACnC,IAAA,CAAK,SAAA,GAAY,IAAA,CAAK,SAAA,CAAU,IAAA,CAAK,IAAI;IAC3C;IAEO,WAAiD;QACtD,OAAO,IAAA,CAAK,KAAA,CAAM,QAAA,CAAS;IAC7B;IAIO,UAAU,QAAA,EAAsB;QACrC,OAAO,IAAA,CAAK,KAAA,CAAM,SAAA,CAAU,QAAQ;IACtC;IAlBA,YAAoB,KAAA,CAA0C;QAA1C,IAAA,CAAA,KAAA,GAAA;QAClB,IAAA,CAAK,sBAAA,CAAuB;IAC9B;AAiBF;AAEA,IAAe,4BAAf,cAEU,sBAA8B;IAQ/B,SAAS;QACd,MAAM,OAAO,IAAA,CAAK,YAAA,CAAa,QAAA,CAAS;QACxC,IAAI,CAAC,KAAM,CAAA,MAAM,IAAI,MAAM,2BAA2B;QACtD,OAAO,KAAK,gBAAA,CAAiB,IAAA,CAAK,QAAA,CAAS,EAAE,EAAE;IACjD;IAXA,YACE,IAAA,EACQ,YAAA,CACR;QACA,KAAA,CAAM,IAAI;QAFF,IAAA,CAAA,YAAA,GAAA;IAGV;AAOF;AAEO,IAAM,sCAAN,cAAkD,0BAA6C;IACpG,IAAW,SAA4B;QACrC,OAAO;IACT;AACF;AAEO,IAAM,oCAAN,cAAgD,0BAA2C;IAChG,IAAW,SAA0B;QACnC,OAAO;IACT;AACF;AAEO,IAAM,+BAAN,cAA2C,sBAAiC;IACjF,IAAW,SAAoB;QAC7B,OAAO;IACT;IAMO,SAAgB;QACrB,MAAM,IAAI,MAAM,uCAAuC;IACzD;IANA,YAAY,IAAA,CAA4C;QACtD,KAAA,CAAM,IAAI;IACZ;AAKF","debugId":null}},
    {"offset": {"line": 3628, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/legacy-runtime/runtime/subscribable/EventSubscriptionSubject.ts"],"sourcesContent":["import { Unsubscribe } from \"../../../types\";\nimport { BaseSubject } from \"./BaseSubject\";\nimport { EventSubscribable } from \"./Subscribable\";\n\nexport class EventSubscriptionSubject<\n  TEvent extends string,\n> extends BaseSubject {\n  constructor(private config: EventSubscribable<TEvent>) {\n    super();\n  }\n\n  public getState() {\n    return this.config.binding.getState();\n  }\n\n  public outerSubscribe(callback: () => void) {\n    return this.config.binding.subscribe(callback);\n  }\n\n  protected _connect(): Unsubscribe {\n    const callback = () => {\n      this.notifySubscribers();\n    };\n\n    let lastState = this.config.binding.getState();\n    let innerUnsubscribe = lastState?.unstable_on(this.config.event, callback);\n    const onRuntimeUpdate = () => {\n      const newState = this.config.binding.getState();\n      if (newState === lastState) return;\n      lastState = newState;\n\n      innerUnsubscribe?.();\n      innerUnsubscribe = this.config.binding\n        .getState()\n        ?.unstable_on(this.config.event, callback);\n    };\n\n    const outerUnsubscribe = this.outerSubscribe(onRuntimeUpdate);\n    return () => {\n      outerUnsubscribe?.();\n      innerUnsubscribe?.();\n    };\n  }\n}\n"],"names":[],"mappings":";;;;;AACA,SAAS,mBAAmB;;AAGrB,IAAM,2BAAN,cAEG,mOAAA,CAAY;IAKb,WAAW;QAChB,OAAO,IAAA,CAAK,MAAA,CAAO,OAAA,CAAQ,QAAA,CAAS;IACtC;IAEO,eAAe,QAAA,EAAsB;QAC1C,OAAO,IAAA,CAAK,MAAA,CAAO,OAAA,CAAQ,SAAA,CAAU,QAAQ;IAC/C;IAEU,WAAwB;QAChC,MAAM,WAAW,MAAM;YACrB,IAAA,CAAK,iBAAA,CAAkB;QACzB;QAEA,IAAI,YAAY,IAAA,CAAK,MAAA,CAAO,OAAA,CAAQ,QAAA,CAAS;QAC7C,IAAI,yEAAmB,UAAW,WAAA,CAAY,IAAA,CAAK,MAAA,CAAO,KAAA,EAAO,QAAQ;QACzE,MAAM,kBAAkB,MAAM;;YAC5B,MAAM,WAAW,IAAA,CAAK,MAAA,CAAO,OAAA,CAAQ,QAAA,CAAS;YAC9C,IAAI,aAAa,UAAW,CAAA;YAC5B,YAAY;YAEZ,6BAAA,uCAAA,mBAAmB;YACnB,oDAAmB,IAAA,CAAK,MAAA,CAAO,OAAA,CAC5B,QAAA,CAAS,iGACR,WAAA,CAAY,IAAA,CAAK,MAAA,CAAO,KAAA,EAAO,QAAQ;QAC7C;QAEA,MAAM,mBAAmB,IAAA,CAAK,cAAA,CAAe,eAAe;QAC5D,OAAO,MAAM;YACX,mBAAmB,UAAnB,uCAAA;YACA,6BAAA,uCAAA,mBAAmB;QACrB;IACF;IAnCA,YAAoB,MAAA,CAAmC;QACrD,KAAA,CAAM;QADY,IAAA,CAAA,MAAA,GAAA;IAEpB;AAkCF","debugId":null}},
    {"offset": {"line": 3673, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/legacy-runtime/runtime/ComposerRuntime.ts"],"sourcesContent":["import { Attachment, PendingAttachment } from \"../../types/AttachmentTypes\";\nimport {\n  ComposerRuntimeCore,\n  ComposerRuntimeEventType,\n  ThreadComposerRuntimeCore,\n} from \"../runtime-cores/core/ComposerRuntimeCore\";\nimport { Unsubscribe } from \"../../types\";\n\nimport { LazyMemoizeSubject } from \"./subscribable/LazyMemoizeSubject\";\nimport {\n  AttachmentRuntime,\n  AttachmentState,\n  EditComposerAttachmentRuntimeImpl,\n  ThreadComposerAttachmentRuntimeImpl,\n} from \"./AttachmentRuntime\";\nimport { ShallowMemoizeSubject } from \"./subscribable/ShallowMemoizeSubject\";\nimport { SKIP_UPDATE } from \"./subscribable/SKIP_UPDATE\";\nimport { ComposerRuntimePath } from \"./RuntimePathTypes\";\nimport { MessageRole, RunConfig } from \"../../types/AssistantTypes\";\nimport { EventSubscriptionSubject } from \"./subscribable/EventSubscriptionSubject\";\nimport type {\n  ThreadComposerRuntimeCoreBinding,\n  EditComposerRuntimeCoreBinding,\n  ComposerRuntimeCoreBinding,\n} from \"./RuntimeBindings\";\n\nexport type {\n  ThreadComposerRuntimeCoreBinding,\n  EditComposerRuntimeCoreBinding,\n  ComposerRuntimeCoreBinding,\n};\n\ntype BaseComposerState = {\n  readonly canCancel: boolean;\n  readonly isEditing: boolean;\n  readonly isEmpty: boolean;\n\n  readonly text: string;\n  readonly role: MessageRole;\n  readonly attachments: readonly Attachment[];\n  readonly runConfig: RunConfig;\n\n  readonly attachmentAccept: string;\n};\n\nexport type ThreadComposerState = BaseComposerState & {\n  readonly type: \"thread\";\n\n  readonly attachments: readonly PendingAttachment[];\n};\n\nexport type EditComposerState = BaseComposerState & {\n  readonly type: \"edit\";\n};\n\nexport type ComposerState = ThreadComposerState | EditComposerState;\n\nconst EMPTY_ARRAY = Object.freeze([]);\nconst EMPTY_OBJECT = Object.freeze({});\nconst getThreadComposerState = (\n  runtime: ThreadComposerRuntimeCore | undefined,\n): ThreadComposerState => {\n  return Object.freeze({\n    type: \"thread\",\n\n    isEditing: runtime?.isEditing ?? false,\n    canCancel: runtime?.canCancel ?? false,\n    isEmpty: runtime?.isEmpty ?? true,\n\n    attachments: runtime?.attachments ?? EMPTY_ARRAY,\n    text: runtime?.text ?? \"\",\n    role: runtime?.role ?? \"user\",\n    runConfig: runtime?.runConfig ?? EMPTY_OBJECT,\n    attachmentAccept: runtime?.attachmentAccept ?? \"\",\n\n    value: runtime?.text ?? \"\",\n  });\n};\n\nconst getEditComposerState = (\n  runtime: ComposerRuntimeCore | undefined,\n): EditComposerState => {\n  return Object.freeze({\n    type: \"edit\",\n\n    isEditing: runtime?.isEditing ?? false,\n    canCancel: runtime?.canCancel ?? false,\n    isEmpty: runtime?.isEmpty ?? true,\n\n    text: runtime?.text ?? \"\",\n    role: runtime?.role ?? \"user\",\n    attachments: runtime?.attachments ?? EMPTY_ARRAY,\n    runConfig: runtime?.runConfig ?? EMPTY_OBJECT,\n    attachmentAccept: runtime?.attachmentAccept ?? \"\",\n\n    value: runtime?.text ?? \"\",\n  });\n};\n\nexport type ComposerRuntime = {\n  readonly path: ComposerRuntimePath;\n  readonly type: \"edit\" | \"thread\";\n\n  /**\n   * Get the current state of the composer. Includes any data that has been added to the composer.\n   */\n  getState(): ComposerState;\n\n  /**\n   * Given a standard js File object, add it to the composer. A composer can have multiple attachments.\n   * @param file The file to add to the composer.\n   */\n  addAttachment(file: File): Promise<void>;\n\n  /**\n   * Set the text of the composer.\n   * @param text The text to set in the composer.\n   */\n  setText(text: string): void;\n\n  /**\n   * Set the role of the composer. For instance, if you'd like a specific message to have the 'assistant' role, you can do so here.\n   * @param role The role to set in the composer.\n   */\n  setRole(role: MessageRole): void;\n\n  /**\n   * Set the run config of the composer. This is used to send custom configuration data to the model.\n   * Within your backend, you can access this data using the `runConfig` object.\n   * Example:\n   * ```ts\n   * composerRuntime.setRunConfig({\n   *   custom: { customField: \"customValue\" }\n   * });\n   * ```\n   * @param runConfig The run config to set in the composer.\n   */\n  setRunConfig(runConfig: RunConfig): void;\n\n  /**\n   * Reset the composer. This will clear the entire state of the composer, including all text and attachments.\n   */\n  reset(): Promise<void>;\n\n  /**\n   * Clear all attachments from the composer.\n   */\n  clearAttachments(): Promise<void>;\n\n  /**\n   * Send a message. This will send whatever text or attachments are in the composer.\n   */\n  send(): void;\n\n  /**\n   * Cancel the current run. In edit mode, this will exit edit mode.\n   */\n  cancel(): void;\n\n  /**\n   * Listens for changes to the composer state.\n   * @param callback The callback to call when the composer state changes.\n   */\n  subscribe(callback: () => void): Unsubscribe;\n\n  /**\n   * Get an attachment by index.\n   * @param idx The index of the attachment to get.\n   */\n  getAttachmentByIndex(idx: number): AttachmentRuntime;\n\n  /**\n   * @deprecated This API is still under active development and might change without notice.\n   */\n  unstable_on(\n    event: ComposerRuntimeEventType,\n    callback: () => void,\n  ): Unsubscribe;\n};\n\nexport abstract class ComposerRuntimeImpl implements ComposerRuntime {\n  public get path() {\n    return this._core.path;\n  }\n\n  public abstract get type(): \"edit\" | \"thread\";\n\n  constructor(protected _core: ComposerRuntimeCoreBinding) {}\n\n  protected __internal_bindMethods() {\n    this.setText = this.setText.bind(this);\n    this.setRunConfig = this.setRunConfig.bind(this);\n    this.getState = this.getState.bind(this);\n    this.subscribe = this.subscribe.bind(this);\n    this.addAttachment = this.addAttachment.bind(this);\n    this.reset = this.reset.bind(this);\n    this.clearAttachments = this.clearAttachments.bind(this);\n    this.send = this.send.bind(this);\n    this.cancel = this.cancel.bind(this);\n    this.setRole = this.setRole.bind(this);\n    this.getAttachmentByIndex = this.getAttachmentByIndex.bind(this);\n    this.unstable_on = this.unstable_on.bind(this);\n  }\n\n  public abstract getState(): ComposerState;\n\n  public setText(text: string) {\n    const core = this._core.getState();\n    if (!core) throw new Error(\"Composer is not available\");\n    core.setText(text);\n  }\n\n  public setRunConfig(runConfig: RunConfig) {\n    const core = this._core.getState();\n    if (!core) throw new Error(\"Composer is not available\");\n    core.setRunConfig(runConfig);\n  }\n\n  public addAttachment(file: File) {\n    const core = this._core.getState();\n    if (!core) throw new Error(\"Composer is not available\");\n    return core.addAttachment(file);\n  }\n\n  public reset() {\n    const core = this._core.getState();\n    if (!core) throw new Error(\"Composer is not available\");\n    return core.reset();\n  }\n\n  public clearAttachments() {\n    const core = this._core.getState();\n    if (!core) throw new Error(\"Composer is not available\");\n    return core.clearAttachments();\n  }\n\n  public send() {\n    const core = this._core.getState();\n    if (!core) throw new Error(\"Composer is not available\");\n    core.send();\n  }\n\n  public cancel() {\n    const core = this._core.getState();\n    if (!core) throw new Error(\"Composer is not available\");\n    core.cancel();\n  }\n\n  public setRole(role: MessageRole) {\n    const core = this._core.getState();\n    if (!core) throw new Error(\"Composer is not available\");\n    core.setRole(role);\n  }\n\n  public subscribe(callback: () => void) {\n    return this._core.subscribe(callback);\n  }\n\n  private _eventSubscriptionSubjects = new Map<\n    string,\n    EventSubscriptionSubject<ComposerRuntimeEventType>\n  >();\n\n  public unstable_on(\n    event: ComposerRuntimeEventType,\n    callback: () => void,\n  ): Unsubscribe {\n    let subject = this._eventSubscriptionSubjects.get(event);\n    if (!subject) {\n      subject = new EventSubscriptionSubject({\n        event: event,\n        binding: this._core,\n      });\n      this._eventSubscriptionSubjects.set(event, subject);\n    }\n    return subject.subscribe(callback);\n  }\n\n  public abstract getAttachmentByIndex(idx: number): AttachmentRuntime;\n}\n\nexport type ThreadComposerRuntime = Omit<\n  ComposerRuntime,\n  \"getState\" | \"getAttachmentByIndex\"\n> & {\n  readonly path: ComposerRuntimePath & { composerSource: \"thread\" };\n  readonly type: \"thread\";\n  getState(): ThreadComposerState;\n\n  getAttachmentByIndex(\n    idx: number,\n  ): AttachmentRuntime & { source: \"thread-composer\" };\n};\n\nexport class ThreadComposerRuntimeImpl\n  extends ComposerRuntimeImpl\n  implements ThreadComposerRuntime\n{\n  public override get path() {\n    return this._core.path as ComposerRuntimePath & {\n      composerSource: \"thread\";\n    };\n  }\n\n  public get type() {\n    return \"thread\" as const;\n  }\n\n  private _getState;\n\n  constructor(core: ThreadComposerRuntimeCoreBinding) {\n    const stateBinding = new LazyMemoizeSubject({\n      path: core.path,\n      getState: () => getThreadComposerState(core.getState()),\n      subscribe: (callback) => core.subscribe(callback),\n    });\n    super({\n      path: core.path,\n      getState: () => core.getState(),\n      subscribe: (callback) => stateBinding.subscribe(callback),\n    });\n    this._getState = stateBinding.getState.bind(stateBinding);\n\n    this.__internal_bindMethods();\n  }\n\n  public override getState(): ThreadComposerState {\n    return this._getState();\n  }\n\n  public getAttachmentByIndex(idx: number) {\n    return new ThreadComposerAttachmentRuntimeImpl(\n      new ShallowMemoizeSubject({\n        path: {\n          ...this.path,\n          attachmentSource: \"thread-composer\",\n          attachmentSelector: { type: \"index\", index: idx },\n          ref: this.path.ref + `${this.path.ref}.attachments[${idx}]`,\n        },\n        getState: () => {\n          const attachments = this.getState().attachments;\n          const attachment = attachments[idx];\n          if (!attachment) return SKIP_UPDATE;\n\n          return {\n            ...attachment,\n            source: \"thread-composer\",\n          } satisfies AttachmentState & { source: \"thread-composer\" };\n        },\n        subscribe: (callback) => this._core.subscribe(callback),\n      }),\n      this._core,\n    );\n  }\n}\n\nexport type EditComposerRuntime = Omit<\n  ComposerRuntime,\n  \"getState\" | \"getAttachmentByIndex\"\n> & {\n  readonly path: ComposerRuntimePath & { composerSource: \"edit\" };\n  readonly type: \"edit\";\n\n  getState(): EditComposerState;\n  beginEdit(): void;\n\n  getAttachmentByIndex(\n    idx: number,\n  ): AttachmentRuntime & { source: \"edit-composer\" };\n};\n\nexport class EditComposerRuntimeImpl\n  extends ComposerRuntimeImpl\n  implements EditComposerRuntime\n{\n  public override get path() {\n    return this._core.path as ComposerRuntimePath & { composerSource: \"edit\" };\n  }\n\n  public get type() {\n    return \"edit\" as const;\n  }\n\n  private _getState;\n  constructor(\n    core: EditComposerRuntimeCoreBinding,\n    private _beginEdit: () => void,\n  ) {\n    const stateBinding = new LazyMemoizeSubject({\n      path: core.path,\n      getState: () => getEditComposerState(core.getState()),\n      subscribe: (callback) => core.subscribe(callback),\n    });\n\n    super({\n      path: core.path,\n      getState: () => core.getState(),\n      subscribe: (callback) => stateBinding.subscribe(callback),\n    });\n\n    this._getState = stateBinding.getState.bind(stateBinding);\n\n    this.__internal_bindMethods();\n  }\n\n  public override __internal_bindMethods() {\n    super.__internal_bindMethods();\n    this.beginEdit = this.beginEdit.bind(this);\n  }\n\n  public override getState(): EditComposerState {\n    return this._getState();\n  }\n\n  public beginEdit() {\n    this._beginEdit();\n  }\n\n  public getAttachmentByIndex(idx: number) {\n    return new EditComposerAttachmentRuntimeImpl(\n      new ShallowMemoizeSubject({\n        path: {\n          ...this.path,\n          attachmentSource: \"edit-composer\",\n          attachmentSelector: { type: \"index\", index: idx },\n          ref: this.path.ref + `${this.path.ref}.attachments[${idx}]`,\n        },\n        getState: () => {\n          const attachments = this.getState().attachments;\n          const attachment = attachments[idx];\n          if (!attachment) return SKIP_UPDATE;\n\n          return {\n            ...attachment,\n            source: \"edit-composer\",\n          } satisfies AttachmentState & { source: \"edit-composer\" };\n        },\n        subscribe: (callback) => this._core.subscribe(callback),\n      }),\n      this._core,\n    );\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3913, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/legacy-runtime/runtime/MessagePartRuntime.ts"],"sourcesContent":["import {\n  ThreadAssistantMessagePart,\n  ThreadUserMessagePart,\n  MessagePartStatus,\n  ToolCallMessagePartStatus,\n} from \"../../types/AssistantTypes\";\nimport { ThreadRuntimeCoreBinding } from \"./ThreadRuntime\";\nimport type { MessageStateBinding } from \"./RuntimeBindings\";\nimport { SubscribableWithState } from \"./subscribable/Subscribable\";\nimport { Unsubscribe } from \"../../types\";\nimport { MessagePartRuntimePath } from \"./RuntimePathTypes\";\nimport { ToolResponse } from \"assistant-stream\";\n\nexport type MessagePartState = (\n  | ThreadUserMessagePart\n  | ThreadAssistantMessagePart\n) & {\n  readonly status: MessagePartStatus | ToolCallMessagePartStatus;\n};\n\ntype MessagePartSnapshotBinding = SubscribableWithState<\n  MessagePartState,\n  MessagePartRuntimePath\n>;\n\nexport type MessagePartRuntime = {\n  /**\n   * Add tool result to a tool call message part that has no tool result yet.\n   * This is useful when you are collecting a tool result via user input (\"human tool calls\").\n   */\n  addToolResult(result: any | ToolResponse<any>): void;\n\n  readonly path: MessagePartRuntimePath;\n  getState(): MessagePartState;\n  subscribe(callback: () => void): Unsubscribe;\n};\n\nexport class MessagePartRuntimeImpl implements MessagePartRuntime {\n  public get path() {\n    return this.contentBinding.path;\n  }\n\n  constructor(\n    private contentBinding: MessagePartSnapshotBinding,\n    private messageApi?: MessageStateBinding,\n    private threadApi?: ThreadRuntimeCoreBinding,\n  ) {\n    this.__internal_bindMethods();\n  }\n\n  protected __internal_bindMethods() {\n    this.addToolResult = this.addToolResult.bind(this);\n    this.getState = this.getState.bind(this);\n    this.subscribe = this.subscribe.bind(this);\n  }\n\n  public getState() {\n    return this.contentBinding.getState();\n  }\n\n  public addToolResult(result: any | ToolResponse<any>) {\n    const state = this.contentBinding.getState();\n    if (!state) throw new Error(\"Message part is not available\");\n\n    if (state.type !== \"tool-call\")\n      throw new Error(\"Tried to add tool result to non-tool message part\");\n\n    if (!this.messageApi)\n      throw new Error(\n        \"Message API is not available. This is likely a bug in assistant-ui.\",\n      );\n    if (!this.threadApi) throw new Error(\"Thread API is not available\");\n\n    const message = this.messageApi.getState();\n    if (!message) throw new Error(\"Message is not available\");\n\n    const toolName = state.toolName;\n    const toolCallId = state.toolCallId;\n\n    const response = ToolResponse.toResponse(result);\n    this.threadApi.getState().addToolResult({\n      messageId: message.id,\n      toolName,\n      toolCallId,\n      result: response.result,\n      artifact: response.artifact,\n      isError: response.isError,\n    });\n  }\n\n  public subscribe(callback: () => void) {\n    return this.contentBinding.subscribe(callback);\n  }\n}\n"],"names":[],"mappings":";;;;;AAWA,SAAS,oBAAoB;;AA0BtB,IAAM,yBAAN,MAA2D;IAChE,IAAW,OAAO;QAChB,OAAO,IAAA,CAAK,cAAA,CAAe,IAAA;IAC7B;IAUU,yBAAyB;QACjC,IAAA,CAAK,aAAA,GAAgB,IAAA,CAAK,aAAA,CAAc,IAAA,CAAK,IAAI;QACjD,IAAA,CAAK,QAAA,GAAW,IAAA,CAAK,QAAA,CAAS,IAAA,CAAK,IAAI;QACvC,IAAA,CAAK,SAAA,GAAY,IAAA,CAAK,SAAA,CAAU,IAAA,CAAK,IAAI;IAC3C;IAEO,WAAW;QAChB,OAAO,IAAA,CAAK,cAAA,CAAe,QAAA,CAAS;IACtC;IAEO,cAAc,MAAA,EAAiC;QACpD,MAAM,QAAQ,IAAA,CAAK,cAAA,CAAe,QAAA,CAAS;QAC3C,IAAI,CAAC,MAAO,CAAA,MAAM,IAAI,MAAM,+BAA+B;QAE3D,IAAI,MAAM,IAAA,KAAS,aACjB,MAAM,IAAI,MAAM,mDAAmD;QAErE,IAAI,CAAC,IAAA,CAAK,UAAA,EACR,MAAM,IAAI,MACR;QAEJ,IAAI,CAAC,IAAA,CAAK,SAAA,CAAW,CAAA,MAAM,IAAI,MAAM,6BAA6B;QAElE,MAAM,UAAU,IAAA,CAAK,UAAA,CAAW,QAAA,CAAS;QACzC,IAAI,CAAC,QAAS,CAAA,MAAM,IAAI,MAAM,0BAA0B;QAExD,MAAM,WAAW,MAAM,QAAA;QACvB,MAAM,aAAa,MAAM,UAAA;QAEzB,MAAM,WAAW,8LAAA,CAAa,UAAA,CAAW,MAAM;QAC/C,IAAA,CAAK,SAAA,CAAU,QAAA,CAAS,EAAE,aAAA,CAAc;YACtC,WAAW,QAAQ,EAAA;YACnB;YACA;YACA,QAAQ,SAAS,MAAA;YACjB,UAAU,SAAS,QAAA;YACnB,SAAS,SAAS,OAAA;QACpB,CAAC;IACH;IAEO,UAAU,QAAA,EAAsB;QACrC,OAAO,IAAA,CAAK,cAAA,CAAe,SAAA,CAAU,QAAQ;IAC/C;IAlDA,YACU,cAAA,EACA,UAAA,EACA,SAAA,CACR;QAHQ,IAAA,CAAA,cAAA,GAAA;QACA,IAAA,CAAA,UAAA,GAAA;QACA,IAAA,CAAA,SAAA,GAAA;QAER,IAAA,CAAK,sBAAA,CAAuB;IAC9B;AA6CF","debugId":null}},
    {"offset": {"line": 3968, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/legacy-runtime/runtime/subscribable/NestedSubscriptionSubject.ts"],"sourcesContent":["import { Unsubscribe } from \"../../../types\";\nimport { BaseSubject } from \"./BaseSubject\";\nimport {\n  NestedSubscribable,\n  Subscribable,\n  SubscribableWithState,\n} from \"./Subscribable\";\n\nexport class NestedSubscriptionSubject<\n    TState extends Subscribable | undefined,\n    TPath,\n  >\n  extends BaseSubject\n  implements\n    SubscribableWithState<TState, TPath>,\n    NestedSubscribable<TState, TPath>\n{\n  public get path() {\n    return this.binding.path;\n  }\n\n  constructor(private binding: NestedSubscribable<TState, TPath>) {\n    super();\n  }\n\n  public getState() {\n    return this.binding.getState();\n  }\n\n  public outerSubscribe(callback: () => void) {\n    return this.binding.subscribe(callback);\n  }\n\n  protected _connect(): Unsubscribe {\n    const callback = () => {\n      this.notifySubscribers();\n    };\n\n    let lastState = this.binding.getState();\n    let innerUnsubscribe = lastState?.subscribe(callback);\n    const onRuntimeUpdate = () => {\n      const newState = this.binding.getState();\n      if (newState === lastState) return;\n      lastState = newState;\n\n      innerUnsubscribe?.();\n      innerUnsubscribe = this.binding.getState()?.subscribe(callback);\n\n      callback();\n    };\n\n    const outerUnsubscribe = this.outerSubscribe(onRuntimeUpdate);\n    return () => {\n      outerUnsubscribe?.();\n      innerUnsubscribe?.();\n    };\n  }\n}\n"],"names":[],"mappings":";;;;;AACA,SAAS,mBAAmB;;AAOrB,IAAM,4BAAN,cAIG,mOAAA,CAIV;IACE,IAAW,OAAO;QAChB,OAAO,IAAA,CAAK,OAAA,CAAQ,IAAA;IACtB;IAMO,WAAW;QAChB,OAAO,IAAA,CAAK,OAAA,CAAQ,QAAA,CAAS;IAC/B;IAEO,eAAe,QAAA,EAAsB;QAC1C,OAAO,IAAA,CAAK,OAAA,CAAQ,SAAA,CAAU,QAAQ;IACxC;IAEU,WAAwB;QAChC,MAAM,WAAW,MAAM;YACrB,IAAA,CAAK,iBAAA,CAAkB;QACzB;QAEA,IAAI,YAAY,IAAA,CAAK,OAAA,CAAQ,QAAA,CAAS;QACtC,IAAI,yCAAmB,0CAAW,SAAA,CAAU,QAAQ;QACpD,MAAM,kBAAkB,MAAM;;YAC5B,MAAM,WAAW,IAAA,CAAK,OAAA,CAAQ,QAAA,CAAS;YACvC,IAAI,aAAa,UAAW,CAAA;YAC5B,YAAY;YAEZ,mBAAmB,UAAnB,uCAAA;YACA,iDAAmB,CAAK,OAAA,CAAQ,QAAA,CAAS,4DAAtB,uBAAyB,SAAA,CAAU,QAAQ;YAE9D,SAAS;QACX;QAEA,MAAM,mBAAmB,IAAA,CAAK,cAAA,CAAe,eAAe;QAC5D,OAAO,MAAM;YACX,6BAAA,uCAAA,mBAAmB;YACnB,6BAAA,uCAAA,mBAAmB;QACrB;IACF;IAnCA,YAAoB,OAAA,CAA4C;QAC9D,KAAA,CAAM;QADY,IAAA,CAAA,OAAA,GAAA;IAEpB;AAkCF","debugId":null}},
    {"offset": {"line": 4017, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/legacy-runtime/runtime/MessageRuntime.ts"],"sourcesContent":["import {\n  SpeechState,\n  SubmittedFeedback,\n} from \"../runtime-cores/core/ThreadRuntimeCore\";\nimport { symbolInnerMessage } from \"../runtime-cores/external-store/getExternalStoreMessage\";\nimport {\n  ThreadMessage,\n  ThreadAssistantMessagePart,\n  ThreadUserMessagePart,\n  Unsubscribe,\n} from \"../../types\";\nimport {\n  MessagePartStatus,\n  RunConfig,\n  ToolCallMessagePartStatus,\n} from \"../../types/AssistantTypes\";\nimport { getThreadMessageText } from \"../../utils/getThreadMessageText\";\nimport {\n  AttachmentRuntime,\n  AttachmentState,\n  MessageAttachmentRuntimeImpl,\n} from \"./AttachmentRuntime\";\nimport {\n  EditComposerRuntime,\n  EditComposerRuntimeImpl,\n} from \"./ComposerRuntime\";\nimport {\n  MessagePartRuntime,\n  MessagePartRuntimeImpl,\n  MessagePartState,\n} from \"./MessagePartRuntime\";\nimport { MessageRuntimePath } from \"./RuntimePathTypes\";\nimport { ThreadRuntimeCoreBinding } from \"./ThreadRuntime\";\nimport { NestedSubscriptionSubject } from \"./subscribable/NestedSubscriptionSubject\";\nimport { SKIP_UPDATE } from \"./subscribable/SKIP_UPDATE\";\nimport { ShallowMemoizeSubject } from \"./subscribable/ShallowMemoizeSubject\";\nimport type { MessageStateBinding } from \"./RuntimeBindings\";\n\nconst COMPLETE_STATUS: MessagePartStatus = Object.freeze({\n  type: \"complete\",\n});\n\nexport const toMessagePartStatus = (\n  message: ThreadMessage,\n  partIndex: number,\n  part: ThreadUserMessagePart | ThreadAssistantMessagePart,\n): ToolCallMessagePartStatus => {\n  if (message.role !== \"assistant\") return COMPLETE_STATUS;\n\n  if (part.type === \"tool-call\") {\n    if (!part.result) {\n      return message.status as ToolCallMessagePartStatus;\n    } else {\n      return COMPLETE_STATUS;\n    }\n  }\n\n  const isLastPart = partIndex === Math.max(0, message.content.length - 1);\n  if (message.status.type === \"requires-action\") return COMPLETE_STATUS;\n  return isLastPart ? (message.status as MessagePartStatus) : COMPLETE_STATUS;\n};\n\nconst getMessagePartState = (\n  message: MessageState,\n  partIndex: number,\n): MessagePartState | SKIP_UPDATE => {\n  const part = message.content[partIndex];\n  if (!part) {\n    return SKIP_UPDATE;\n  }\n\n  // if the message part is the same, don't update\n  const status = toMessagePartStatus(message, partIndex, part);\n  return Object.freeze({\n    ...part,\n    ...{ [symbolInnerMessage]: (part as any)[symbolInnerMessage] },\n    status,\n  });\n};\n\nexport type MessageState = ThreadMessage & {\n  readonly parentId: string | null;\n  readonly isLast: boolean;\n\n  readonly branchNumber: number;\n  readonly branchCount: number;\n\n  /**\n   * @deprecated This API is still under active development and might change without notice.\n   */\n  readonly speech: SpeechState | undefined;\n  readonly submittedFeedback: SubmittedFeedback | undefined;\n};\n\nexport type { MessageStateBinding } from \"./RuntimeBindings\";\n\ntype ReloadConfig = {\n  runConfig?: RunConfig;\n};\n\nexport type MessageRuntime = {\n  readonly path: MessageRuntimePath;\n\n  readonly composer: EditComposerRuntime;\n\n  getState(): MessageState;\n  reload(config?: ReloadConfig): void;\n  /**\n   * @deprecated This API is still under active development and might change without notice.\n   */\n  speak(): void;\n  /**\n   * @deprecated This API is still under active development and might change without notice.\n   */\n  stopSpeaking(): void;\n  submitFeedback({ type }: { type: \"positive\" | \"negative\" }): void;\n  switchToBranch({\n    position,\n    branchId,\n  }: {\n    position?: \"previous\" | \"next\" | undefined;\n    branchId?: string | undefined;\n  }): void;\n  unstable_getCopyText(): string;\n\n  subscribe(callback: () => void): Unsubscribe;\n\n  getMessagePartByIndex(idx: number): MessagePartRuntime;\n  getMessagePartByToolCallId(toolCallId: string): MessagePartRuntime;\n\n  getAttachmentByIndex(idx: number): AttachmentRuntime & { source: \"message\" };\n};\n\nexport class MessageRuntimeImpl implements MessageRuntime {\n  public get path() {\n    return this._core.path;\n  }\n\n  constructor(\n    private _core: MessageStateBinding,\n    private _threadBinding: ThreadRuntimeCoreBinding,\n  ) {\n    this.composer = new EditComposerRuntimeImpl(\n      new NestedSubscriptionSubject({\n        path: {\n          ...this.path,\n          ref: this.path.ref + `${this.path.ref}.composer`,\n          composerSource: \"edit\",\n        },\n        getState: this._getEditComposerRuntimeCore,\n        subscribe: (callback) => this._threadBinding.subscribe(callback),\n      }),\n      () => this._threadBinding.getState().beginEdit(this._core.getState().id),\n    );\n\n    this.__internal_bindMethods();\n  }\n\n  protected __internal_bindMethods() {\n    this.reload = this.reload.bind(this);\n    this.getState = this.getState.bind(this);\n    this.subscribe = this.subscribe.bind(this);\n    this.getMessagePartByIndex = this.getMessagePartByIndex.bind(this);\n    this.getMessagePartByToolCallId =\n      this.getMessagePartByToolCallId.bind(this);\n    this.getAttachmentByIndex = this.getAttachmentByIndex.bind(this);\n    this.unstable_getCopyText = this.unstable_getCopyText.bind(this);\n    this.speak = this.speak.bind(this);\n    this.stopSpeaking = this.stopSpeaking.bind(this);\n    this.submitFeedback = this.submitFeedback.bind(this);\n    this.switchToBranch = this.switchToBranch.bind(this);\n  }\n\n  public readonly composer;\n\n  private _getEditComposerRuntimeCore = () => {\n    return this._threadBinding\n      .getState()\n      .getEditComposer(this._core.getState().id);\n  };\n\n  public getState() {\n    return this._core.getState();\n  }\n\n  public reload(reloadConfig: ReloadConfig = {}) {\n    const editComposerRuntimeCore = this._getEditComposerRuntimeCore();\n    const composerRuntimeCore =\n      editComposerRuntimeCore ?? this._threadBinding.getState().composer;\n    const composer = editComposerRuntimeCore ?? composerRuntimeCore;\n\n    const { runConfig = composer.runConfig } = reloadConfig;\n    const state = this._core.getState();\n    if (state.role !== \"assistant\")\n      throw new Error(\"Can only reload assistant messages\");\n\n    this._threadBinding.getState().startRun({\n      parentId: state.parentId,\n      sourceId: state.id,\n      runConfig,\n    });\n  }\n\n  public speak() {\n    const state = this._core.getState();\n    return this._threadBinding.getState().speak(state.id);\n  }\n\n  public stopSpeaking() {\n    const state = this._core.getState();\n    const thread = this._threadBinding.getState();\n    if (thread.speech?.messageId === state.id) {\n      this._threadBinding.getState().stopSpeaking();\n    } else {\n      throw new Error(\"Message is not being spoken\");\n    }\n  }\n\n  public submitFeedback({ type }: { type: \"positive\" | \"negative\" }) {\n    const state = this._core.getState();\n    this._threadBinding.getState().submitFeedback({\n      messageId: state.id,\n      type,\n    });\n  }\n\n  public switchToBranch({\n    position,\n    branchId,\n  }: {\n    position?: \"previous\" | \"next\" | undefined;\n    branchId?: string | undefined;\n  }) {\n    const state = this._core.getState();\n    if (branchId && position) {\n      throw new Error(\"May not specify both branchId and position\");\n    } else if (!branchId && !position) {\n      throw new Error(\"Must specify either branchId or position\");\n    }\n\n    const thread = this._threadBinding.getState();\n    const branches = thread.getBranches(state.id);\n    let targetBranch = branchId;\n    if (position === \"previous\") {\n      targetBranch = branches[state.branchNumber - 2];\n    } else if (position === \"next\") {\n      targetBranch = branches[state.branchNumber];\n    }\n    if (!targetBranch) throw new Error(\"Branch not found\");\n\n    this._threadBinding.getState().switchToBranch(targetBranch);\n  }\n\n  public unstable_getCopyText() {\n    return getThreadMessageText(this.getState());\n  }\n\n  public subscribe(callback: () => void) {\n    return this._core.subscribe(callback);\n  }\n\n  public getMessagePartByIndex(idx: number) {\n    if (idx < 0) throw new Error(\"Message part index must be >= 0\");\n    return new MessagePartRuntimeImpl(\n      new ShallowMemoizeSubject({\n        path: {\n          ...this.path,\n          ref: this.path.ref + `${this.path.ref}.content[${idx}]`,\n          messagePartSelector: { type: \"index\", index: idx },\n        },\n        getState: () => {\n          return getMessagePartState(this.getState(), idx);\n        },\n        subscribe: (callback) => this._core.subscribe(callback),\n      }),\n      this._core,\n      this._threadBinding,\n    );\n  }\n\n  public getMessagePartByToolCallId(toolCallId: string) {\n    return new MessagePartRuntimeImpl(\n      new ShallowMemoizeSubject({\n        path: {\n          ...this.path,\n          ref:\n            this.path.ref +\n            `${this.path.ref}.content[toolCallId=${JSON.stringify(toolCallId)}]`,\n          messagePartSelector: { type: \"toolCallId\", toolCallId },\n        },\n        getState: () => {\n          const state = this._core.getState();\n          const idx = state.content.findIndex(\n            (part) =>\n              part.type === \"tool-call\" && part.toolCallId === toolCallId,\n          );\n          if (idx === -1) return SKIP_UPDATE;\n          return getMessagePartState(state, idx);\n        },\n        subscribe: (callback) => this._core.subscribe(callback),\n      }),\n      this._core,\n      this._threadBinding,\n    );\n  }\n\n  public getAttachmentByIndex(idx: number) {\n    return new MessageAttachmentRuntimeImpl(\n      new ShallowMemoizeSubject({\n        path: {\n          ...this.path,\n          ref: this.path.ref + `${this.path.ref}.attachments[${idx}]`,\n          attachmentSource: \"message\",\n          attachmentSelector: { type: \"index\", index: idx },\n        },\n        getState: () => {\n          const attachments = this.getState().attachments;\n          const attachment = attachments?.[idx];\n          if (!attachment) return SKIP_UPDATE;\n\n          return {\n            ...attachment,\n            source: \"message\",\n          } satisfies AttachmentState & { source: \"message\" };\n        },\n        subscribe: (callback) => this._core.subscribe(callback),\n      }),\n    );\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 4237, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/legacy-runtime/runtime/ThreadRuntime.ts"],"sourcesContent":["import {\n  ThreadSuggestion,\n  RuntimeCapabilities,\n  ThreadRuntimeCore,\n  SpeechState,\n  ThreadRuntimeEventType,\n  StartRunConfig,\n  ResumeRunConfig,\n} from \"../runtime-cores/core/ThreadRuntimeCore\";\nimport { ExportedMessageRepository } from \"../runtime-cores/utils/MessageRepository\";\nimport { AppendMessage, ThreadMessage, Unsubscribe } from \"../../types\";\nimport { ThreadMessageLike } from \"../runtime-cores/external-store\";\nimport {\n  MessageRuntime,\n  MessageRuntimeImpl,\n  MessageState,\n} from \"./MessageRuntime\";\nimport { NestedSubscriptionSubject } from \"./subscribable/NestedSubscriptionSubject\";\nimport { ShallowMemoizeSubject } from \"./subscribable/ShallowMemoizeSubject\";\nimport { SubscribableWithState } from \"./subscribable/Subscribable\";\nimport {\n  ThreadComposerRuntime,\n  ThreadComposerRuntimeImpl,\n} from \"./ComposerRuntime\";\nimport { SKIP_UPDATE } from \"./subscribable/SKIP_UPDATE\";\nimport {\n  MessageRuntimePath,\n  ThreadListItemRuntimePath,\n  ThreadRuntimePath,\n} from \"./RuntimePathTypes\";\nimport type { ThreadListItemState } from \"./RuntimeBindings\";\nimport { RunConfig } from \"../../types/AssistantTypes\";\nimport { EventSubscriptionSubject } from \"./subscribable/EventSubscriptionSubject\";\nimport { symbolInnerMessage } from \"../runtime-cores/external-store/getExternalStoreMessage\";\nimport { ModelContext } from \"../../model-context\";\nimport { ChatModelRunOptions, ChatModelRunResult } from \"../runtime-cores\";\nimport { ReadonlyJSONValue } from \"assistant-stream/utils\";\n\nexport type CreateStartRunConfig = {\n  parentId: string | null;\n  sourceId?: string | null | undefined;\n  runConfig?: RunConfig | undefined;\n};\n\nexport type CreateResumeRunConfig = CreateStartRunConfig & {\n  stream?: (\n    options: ChatModelRunOptions,\n  ) => AsyncGenerator<ChatModelRunResult, void, unknown>;\n};\n\nconst toResumeRunConfig = (message: CreateResumeRunConfig): ResumeRunConfig => {\n  return {\n    parentId: message.parentId ?? null,\n    sourceId: message.sourceId ?? null,\n    runConfig: message.runConfig ?? {},\n    ...(message.stream ? { stream: message.stream } : {}),\n  };\n};\n\nconst toStartRunConfig = (message: CreateStartRunConfig): StartRunConfig => {\n  return {\n    parentId: message.parentId ?? null,\n    sourceId: message.sourceId ?? null,\n    runConfig: message.runConfig ?? {},\n  };\n};\n\nexport type CreateAppendMessage =\n  | string\n  | {\n      parentId?: string | null | undefined;\n      sourceId?: string | null | undefined;\n      role?: AppendMessage[\"role\"] | undefined;\n      content: AppendMessage[\"content\"];\n      attachments?: AppendMessage[\"attachments\"] | undefined;\n      metadata?: AppendMessage[\"metadata\"] | undefined;\n      createdAt?: Date | undefined;\n      runConfig?: AppendMessage[\"runConfig\"] | undefined;\n      startRun?: boolean | undefined;\n    };\n\nconst toAppendMessage = (\n  messages: readonly ThreadMessage[],\n  message: CreateAppendMessage,\n): AppendMessage => {\n  if (typeof message === \"string\") {\n    return {\n      createdAt: new Date(),\n      parentId: messages.at(-1)?.id ?? null,\n      sourceId: null,\n      runConfig: {},\n      role: \"user\",\n      content: [{ type: \"text\", text: message }],\n      attachments: [],\n      metadata: { custom: {} },\n    };\n  }\n\n  return {\n    createdAt: message.createdAt ?? new Date(),\n    parentId: message.parentId ?? messages.at(-1)?.id ?? null,\n    sourceId: message.sourceId ?? null,\n    role: message.role ?? \"user\",\n    content: message.content,\n    attachments: message.attachments ?? [],\n    metadata: message.metadata ?? { custom: {} },\n    runConfig: message.runConfig ?? {},\n    startRun: message.startRun,\n  } as AppendMessage;\n};\n\nexport type ThreadRuntimeCoreBinding = SubscribableWithState<\n  ThreadRuntimeCore,\n  ThreadRuntimePath\n> & {\n  outerSubscribe(callback: () => void): Unsubscribe;\n};\n\nexport type ThreadListItemRuntimeBinding = SubscribableWithState<\n  ThreadListItemState,\n  ThreadListItemRuntimePath\n>;\n\nexport type ThreadState = {\n  /**\n   * The thread ID.\n   * @deprecated This field is deprecated and will be removed in 0.8.0. Use `useThreadListItem().id` instead.\n   */\n  readonly threadId: string;\n\n  /**\n   * The thread metadata.\n   *\n   * @deprecated Use `useThreadListItem()` instead. This field is deprecated and will be removed in 0.8.0.\n   */\n  readonly metadata: ThreadListItemState;\n\n  /**\n   * Whether the thread is disabled. Disabled threads cannot receive new messages.\n   */\n  readonly isDisabled: boolean;\n\n  /**\n   * Whether the thread is loading its history.\n   */\n  readonly isLoading: boolean;\n\n  /**\n   * Whether the thread is running. A thread is considered running when there is an active stream connection to the backend.\n   */\n  readonly isRunning: boolean;\n\n  /**\n   * The capabilities of the thread, such as whether the thread supports editing, branch switching, etc.\n   */\n  readonly capabilities: RuntimeCapabilities;\n\n  /**\n   * The messages in the currently selected branch of the thread.\n   */\n  readonly messages: readonly ThreadMessage[];\n\n  /**\n   * The thread state.\n   *\n   * @deprecated This feature is experimental\n   */\n  readonly state: ReadonlyJSONValue;\n\n  /**\n   * Follow up message suggestions to show the user.\n   */\n  readonly suggestions: readonly ThreadSuggestion[];\n\n  /**\n   * Custom extra information provided by the runtime.\n   */\n  readonly extras: unknown;\n\n  /**\n   * @deprecated This API is still under active development and might change without notice.\n   */\n  readonly speech: SpeechState | undefined;\n};\n\nexport const getThreadState = (\n  runtime: ThreadRuntimeCore,\n  threadListItemState: ThreadListItemState,\n): ThreadState => {\n  const lastMessage = runtime.messages.at(-1);\n  return Object.freeze({\n    threadId: threadListItemState.id,\n    metadata: threadListItemState,\n    capabilities: runtime.capabilities,\n    isDisabled: runtime.isDisabled,\n    isLoading: runtime.isLoading,\n    isRunning:\n      lastMessage?.role !== \"assistant\"\n        ? false\n        : lastMessage.status.type === \"running\",\n    messages: runtime.messages,\n    state: runtime.state,\n    suggestions: runtime.suggestions,\n    extras: runtime.extras,\n    speech: runtime.speech,\n  });\n};\n\nexport type ThreadRuntime = {\n  /**\n   * The selector for the thread runtime.\n   */\n  readonly path: ThreadRuntimePath;\n\n  /**\n   * The thread composer runtime.\n   */\n  readonly composer: ThreadComposerRuntime;\n\n  /**\n   * Gets a snapshot of the thread state.\n   */\n  getState(): ThreadState;\n\n  /**\n   * Append a new message to the thread.\n   *\n   * @example ```ts\n   * // append a new user message with the text \"Hello, world!\"\n   * threadRuntime.append(\"Hello, world!\");\n   * ```\n   *\n   * @example ```ts\n   * // append a new assistant message with the text \"Hello, world!\"\n   * threadRuntime.append({\n   *   role: \"assistant\",\n   *   content: [{ type: \"text\", text: \"Hello, world!\" }],\n   * });\n   * ```\n   */\n  append(message: CreateAppendMessage): void;\n\n  /**\n   * @deprecated pass an object with `parentId` instead. This will be removed in 0.8.0.\n   */\n  startRun(parentId: string | null): void;\n  /**\n   * Start a new run with the given configuration.\n   * @param config The configuration for starting the run\n   */\n  startRun(config: CreateStartRunConfig): void;\n\n  /**\n   * Resume a run with the given configuration.\n   * @param config The configuration for resuming the run\n   **/\n  unstable_resumeRun(config: CreateResumeRunConfig): void;\n\n  /**\n   * Load external state into the thread.\n   * @param state The state to load into the thread\n   */\n  unstable_loadExternalState(state: any): void;\n\n  subscribe(callback: () => void): Unsubscribe;\n  cancelRun(): void;\n  getModelContext(): ModelContext;\n\n  /**\n   * @deprecated This method was renamed to `getModelContext`.\n   */\n  getModelConfig(): ModelContext;\n\n  export(): ExportedMessageRepository;\n  import(repository: ExportedMessageRepository): void;\n\n  /**\n   * Reset the thread with optional initial messages.\n   *\n   * @param initialMessages - Optional array of initial messages to populate the thread\n   */\n  reset(initialMessages?: readonly ThreadMessageLike[]): void;\n\n  getMessageByIndex(idx: number): MessageRuntime;\n  getMessageById(messageId: string): MessageRuntime;\n\n  /**\n   * @deprecated This API is still under active development and might change without notice.\n   */\n  stopSpeaking(): void;\n\n  unstable_on(event: ThreadRuntimeEventType, callback: () => void): Unsubscribe;\n};\n\nexport class ThreadRuntimeImpl implements ThreadRuntime {\n  public get path() {\n    return this._threadBinding.path;\n  }\n\n  public get __internal_threadBinding() {\n    return this._threadBinding;\n  }\n\n  private readonly _threadBinding: ThreadRuntimeCoreBinding & {\n    getStateState(): ThreadState;\n  };\n\n  constructor(\n    threadBinding: ThreadRuntimeCoreBinding,\n    threadListItemBinding: ThreadListItemRuntimeBinding,\n  ) {\n    const stateBinding = new ShallowMemoizeSubject({\n      path: threadBinding.path,\n      getState: () =>\n        getThreadState(\n          threadBinding.getState(),\n          threadListItemBinding.getState(),\n        ),\n      subscribe: (callback) => {\n        const sub1 = threadBinding.subscribe(callback);\n        const sub2 = threadListItemBinding.subscribe(callback);\n        return () => {\n          sub1();\n          sub2();\n        };\n      },\n    });\n\n    this._threadBinding = {\n      path: threadBinding.path,\n      getState: () => threadBinding.getState(),\n      getStateState: () => stateBinding.getState(),\n      outerSubscribe: (callback) => threadBinding.outerSubscribe(callback),\n      subscribe: (callback) => threadBinding.subscribe(callback),\n    };\n\n    this.composer = new ThreadComposerRuntimeImpl(\n      new NestedSubscriptionSubject({\n        path: {\n          ...this.path,\n          ref: this.path.ref + `${this.path.ref}.composer`,\n          composerSource: \"thread\",\n        },\n        getState: () => this._threadBinding.getState().composer,\n        subscribe: (callback) => this._threadBinding.subscribe(callback),\n      }),\n    );\n\n    this.__internal_bindMethods();\n  }\n\n  protected __internal_bindMethods() {\n    this.append = this.append.bind(this);\n    this.unstable_resumeRun = this.unstable_resumeRun.bind(this);\n    this.unstable_loadExternalState =\n      this.unstable_loadExternalState.bind(this);\n    this.startRun = this.startRun.bind(this);\n    this.cancelRun = this.cancelRun.bind(this);\n    this.stopSpeaking = this.stopSpeaking.bind(this);\n    this.export = this.export.bind(this);\n    this.import = this.import.bind(this);\n    this.reset = this.reset.bind(this);\n    this.getMessageByIndex = this.getMessageByIndex.bind(this);\n    this.getMessageById = this.getMessageById.bind(this);\n    this.subscribe = this.subscribe.bind(this);\n    this.unstable_on = this.unstable_on.bind(this);\n    this.getModelContext = this.getModelContext.bind(this);\n    this.getModelConfig = this.getModelConfig.bind(this);\n    this.getState = this.getState.bind(this);\n  }\n\n  public readonly composer;\n\n  public getState() {\n    return this._threadBinding.getStateState();\n  }\n\n  public append(message: CreateAppendMessage) {\n    this._threadBinding\n      .getState()\n      .append(\n        toAppendMessage(this._threadBinding.getState().messages, message),\n      );\n  }\n\n  public subscribe(callback: () => void) {\n    return this._threadBinding.subscribe(callback);\n  }\n\n  public getModelContext() {\n    return this._threadBinding.getState().getModelContext();\n  }\n\n  public getModelConfig() {\n    return this.getModelContext();\n  }\n\n  public startRun(configOrParentId: string | null | CreateStartRunConfig) {\n    const config =\n      configOrParentId === null || typeof configOrParentId === \"string\"\n        ? { parentId: configOrParentId }\n        : configOrParentId;\n    return this._threadBinding.getState().startRun(toStartRunConfig(config));\n  }\n\n  public unstable_resumeRun(config: CreateResumeRunConfig) {\n    return this._threadBinding.getState().resumeRun(toResumeRunConfig(config));\n  }\n\n  public unstable_loadExternalState(state: any) {\n    this._threadBinding.getState().unstable_loadExternalState(state);\n  }\n\n  public cancelRun() {\n    this._threadBinding.getState().cancelRun();\n  }\n\n  public stopSpeaking() {\n    return this._threadBinding.getState().stopSpeaking();\n  }\n\n  public export() {\n    return this._threadBinding.getState().export();\n  }\n\n  public import(data: ExportedMessageRepository) {\n    this._threadBinding.getState().import(data);\n  }\n\n  public reset(initialMessages?: readonly ThreadMessageLike[]) {\n    this._threadBinding.getState().reset(initialMessages);\n  }\n\n  public getMessageByIndex(idx: number) {\n    if (idx < 0) throw new Error(\"Message index must be >= 0\");\n\n    return this._getMessageRuntime(\n      {\n        ...this.path,\n        ref: this.path.ref + `${this.path.ref}.messages[${idx}]`,\n        messageSelector: { type: \"index\", index: idx },\n      },\n      () => {\n        const messages = this._threadBinding.getState().messages;\n        const message = messages[idx];\n        if (!message) return undefined;\n        return {\n          message,\n          parentId: messages[idx - 1]?.id ?? null,\n        };\n      },\n    );\n  }\n\n  public getMessageById(messageId: string) {\n    return this._getMessageRuntime(\n      {\n        ...this.path,\n        ref:\n          this.path.ref +\n          `${this.path.ref}.messages[messageId=${JSON.stringify(messageId)}]`,\n        messageSelector: { type: \"messageId\", messageId: messageId },\n      },\n      () => this._threadBinding.getState().getMessageById(messageId),\n    );\n  }\n\n  private _getMessageRuntime(\n    path: MessageRuntimePath,\n    callback: () =>\n      | { parentId: string | null; message: ThreadMessage }\n      | undefined,\n  ) {\n    return new MessageRuntimeImpl(\n      new ShallowMemoizeSubject({\n        path,\n        getState: () => {\n          const { message, parentId } = callback() ?? {};\n\n          const { messages, speech: speechState } =\n            this._threadBinding.getState();\n\n          if (!message || parentId === undefined) return SKIP_UPDATE;\n\n          const thread = this._threadBinding.getState();\n\n          const branches = thread.getBranches(message.id);\n          const submittedFeedback = thread.getSubmittedFeedback(message.id);\n\n          return {\n            ...message,\n            ...{ [symbolInnerMessage]: (message as any)[symbolInnerMessage] },\n\n            isLast: messages.at(-1)?.id === message.id,\n            parentId,\n\n            branchNumber: branches.indexOf(message.id) + 1,\n            branchCount: branches.length,\n\n            speech:\n              speechState?.messageId === message.id ? speechState : undefined,\n\n            submittedFeedback,\n          } satisfies MessageState;\n        },\n        subscribe: (callback) => this._threadBinding.subscribe(callback),\n      }),\n      this._threadBinding,\n    );\n  }\n\n  private _eventSubscriptionSubjects = new Map<\n    string,\n    EventSubscriptionSubject<ThreadRuntimeEventType>\n  >();\n\n  public unstable_on(\n    event: ThreadRuntimeEventType,\n    callback: () => void,\n  ): Unsubscribe {\n    let subject = this._eventSubscriptionSubjects.get(event);\n    if (!subject) {\n      subject = new EventSubscriptionSubject({\n        event: event,\n        binding: this._threadBinding,\n      });\n      this._eventSubscriptionSubjects.set(event, subject);\n    }\n    return subject.subscribe(callback);\n  }\n}\n"],"names":["callback"],"mappings":"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","debugId":null}},
    {"offset": {"line": 4511, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/legacy-runtime/runtime/ThreadListRuntime.ts"],"sourcesContent":["import { LazyMemoizeSubject } from \"./subscribable/LazyMemoizeSubject\";\nimport { ThreadListRuntimeCore } from \"../runtime-cores/core/ThreadListRuntimeCore\";\nimport { Unsubscribe } from \"../../types\";\nimport {\n  ThreadListItemRuntime,\n  ThreadListItemRuntimeImpl,\n  ThreadListItemState,\n} from \"./ThreadListItemRuntime\";\nimport { SKIP_UPDATE } from \"./subscribable/SKIP_UPDATE\";\nimport { ShallowMemoizeSubject } from \"./subscribable/ShallowMemoizeSubject\";\nimport {\n  ThreadListItemRuntimeBinding,\n  ThreadRuntime,\n  ThreadRuntimeCoreBinding,\n  ThreadRuntimeImpl,\n} from \"./ThreadRuntime\";\nimport { NestedSubscriptionSubject } from \"./subscribable/NestedSubscriptionSubject\";\n\nexport type ThreadListState = {\n  readonly mainThreadId: string;\n  readonly newThread: string | undefined;\n  readonly threads: readonly string[];\n  readonly archivedThreads: readonly string[];\n  readonly isLoading: boolean;\n  readonly threadItems: Readonly<\n    Record<string, Omit<ThreadListItemState, \"isMain\" | \"threadId\">>\n  >;\n};\n\nexport type ThreadListRuntime = {\n  getState(): ThreadListState;\n\n  subscribe(callback: () => void): Unsubscribe;\n\n  readonly main: ThreadRuntime;\n  getById(threadId: string): ThreadRuntime;\n\n  readonly mainItem: ThreadListItemRuntime;\n  getItemById(threadId: string): ThreadListItemRuntime;\n  getItemByIndex(idx: number): ThreadListItemRuntime;\n  getArchivedItemByIndex(idx: number): ThreadListItemRuntime;\n\n  switchToThread(threadId: string): Promise<void>;\n  switchToNewThread(): Promise<void>;\n};\n\nconst getThreadListState = (\n  threadList: ThreadListRuntimeCore,\n): ThreadListState => {\n  return {\n    mainThreadId: threadList.mainThreadId,\n    newThread: threadList.newThreadId,\n    threads: threadList.threadIds,\n    archivedThreads: threadList.archivedThreadIds,\n    isLoading: threadList.isLoading,\n    threadItems: threadList.threadData,\n  };\n};\n\nconst getThreadListItemState = (\n  threadList: ThreadListRuntimeCore,\n  threadId: string | undefined,\n): ThreadListItemState | SKIP_UPDATE => {\n  if (threadId === undefined) return SKIP_UPDATE;\n\n  const threadData = threadList.getItemById(threadId);\n  if (!threadData) return SKIP_UPDATE;\n  return {\n    id: threadData.id,\n    threadId: threadData.id, // TODO remove in 0.8.0\n    remoteId: threadData.remoteId,\n    externalId: threadData.externalId,\n    title: threadData.title,\n    status: threadData.status,\n    isMain: threadData.id === threadList.mainThreadId,\n  };\n};\n\nexport type ThreadListRuntimeCoreBinding = ThreadListRuntimeCore;\n\nexport class ThreadListRuntimeImpl implements ThreadListRuntime {\n  private _getState;\n  constructor(\n    private _core: ThreadListRuntimeCoreBinding,\n    private _runtimeFactory: new (\n      binding: ThreadRuntimeCoreBinding,\n      threadListItemBinding: ThreadListItemRuntimeBinding,\n    ) => ThreadRuntime = ThreadRuntimeImpl,\n  ) {\n    const stateBinding = new LazyMemoizeSubject({\n      path: {},\n      getState: () => getThreadListState(_core),\n      subscribe: (callback) => _core.subscribe(callback),\n    });\n\n    this._getState = stateBinding.getState.bind(stateBinding);\n\n    this._mainThreadListItemRuntime = new ThreadListItemRuntimeImpl(\n      new ShallowMemoizeSubject({\n        path: {\n          ref: `threadItems[main]`,\n          threadSelector: { type: \"main\" },\n        },\n        getState: () => {\n          return getThreadListItemState(this._core, this._core.mainThreadId);\n        },\n        subscribe: (callback) => this._core.subscribe(callback),\n      }),\n      this._core,\n    );\n\n    this.main = new _runtimeFactory(\n      new NestedSubscriptionSubject({\n        path: {\n          ref: \"threads.main\",\n          threadSelector: { type: \"main\" },\n        },\n        getState: () => _core.getMainThreadRuntimeCore(),\n        subscribe: (callback) => _core.subscribe(callback),\n      }),\n      this._mainThreadListItemRuntime, // TODO capture \"main\" threadListItem from context around useLocalRuntime / useExternalStoreRuntime\n    );\n\n    this.__internal_bindMethods();\n  }\n\n  protected __internal_bindMethods() {\n    this.switchToThread = this.switchToThread.bind(this);\n    this.switchToNewThread = this.switchToNewThread.bind(this);\n    this.getState = this.getState.bind(this);\n    this.subscribe = this.subscribe.bind(this);\n    this.getById = this.getById.bind(this);\n    this.getItemById = this.getItemById.bind(this);\n    this.getItemByIndex = this.getItemByIndex.bind(this);\n    this.getArchivedItemByIndex = this.getArchivedItemByIndex.bind(this);\n  }\n\n  public switchToThread(threadId: string): Promise<void> {\n    return this._core.switchToThread(threadId);\n  }\n\n  public switchToNewThread(): Promise<void> {\n    return this._core.switchToNewThread();\n  }\n\n  public getState(): ThreadListState {\n    return this._getState();\n  }\n\n  public subscribe(callback: () => void): Unsubscribe {\n    return this._core.subscribe(callback);\n  }\n\n  private _mainThreadListItemRuntime;\n\n  public readonly main: ThreadRuntime;\n\n  public get mainItem() {\n    return this._mainThreadListItemRuntime;\n  }\n\n  public getById(threadId: string) {\n    return new this._runtimeFactory(\n      new NestedSubscriptionSubject({\n        path: {\n          ref: \"threads[threadId=\" + JSON.stringify(threadId) + \"]\",\n          threadSelector: { type: \"threadId\", threadId },\n        },\n        getState: () => this._core.getThreadRuntimeCore(threadId),\n        subscribe: (callback) => this._core.subscribe(callback),\n      }),\n      this.mainItem, // TODO capture \"main\" threadListItem from context around useLocalRuntime / useExternalStoreRuntime\n    );\n  }\n\n  public getItemByIndex(idx: number) {\n    return new ThreadListItemRuntimeImpl(\n      new ShallowMemoizeSubject({\n        path: {\n          ref: `threadItems[${idx}]`,\n          threadSelector: { type: \"index\", index: idx },\n        },\n        getState: () => {\n          return getThreadListItemState(this._core, this._core.threadIds[idx]);\n        },\n        subscribe: (callback) => this._core.subscribe(callback),\n      }),\n      this._core,\n    );\n  }\n\n  public getArchivedItemByIndex(idx: number) {\n    return new ThreadListItemRuntimeImpl(\n      new ShallowMemoizeSubject({\n        path: {\n          ref: `archivedThreadItems[${idx}]`,\n          threadSelector: { type: \"archiveIndex\", index: idx },\n        },\n        getState: () => {\n          return getThreadListItemState(\n            this._core,\n            this._core.archivedThreadIds[idx],\n          );\n        },\n        subscribe: (callback) => this._core.subscribe(callback),\n      }),\n      this._core,\n    );\n  }\n\n  public getItemById(threadId: string) {\n    return new ThreadListItemRuntimeImpl(\n      new ShallowMemoizeSubject({\n        path: {\n          ref: `threadItems[threadId=${threadId}]`,\n          threadSelector: { type: \"threadId\", threadId },\n        },\n        getState: () => {\n          return getThreadListItemState(this._core, threadId);\n        },\n        subscribe: (callback) => this._core.subscribe(callback),\n      }),\n      this._core,\n    );\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 4682, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/legacy-runtime/runtime-cores/external-store/auto-status.tsx"],"sourcesContent":["import { MessageStatus } from \"../../../types\";\n\nconst AUTO_STATUS_RUNNING = Object.freeze({ type: \"running\" });\nconst AUTO_STATUS_COMPLETE = Object.freeze({\n  type: \"complete\",\n  reason: \"unknown\",\n});\n\nconst AUTO_STATUS_PENDING = Object.freeze({\n  type: \"requires-action\",\n  reason: \"tool-calls\",\n});\n\nexport const isAutoStatus = (status: MessageStatus) =>\n  status === AUTO_STATUS_RUNNING || status === AUTO_STATUS_COMPLETE;\n\nexport const getAutoStatus = (\n  isLast: boolean,\n  isRunning: boolean,\n  hasPendingToolCalls: boolean,\n) =>\n  isLast && isRunning\n    ? AUTO_STATUS_RUNNING\n    : hasPendingToolCalls\n      ? AUTO_STATUS_PENDING\n      : AUTO_STATUS_COMPLETE;\n"],"names":[],"mappings":";;;;;;;AAEA,IAAM,sBAAsB,OAAO,MAAA,CAAO;IAAE,MAAM;AAAU,CAAC;AAC7D,IAAM,uBAAuB,OAAO,MAAA,CAAO;IACzC,MAAM;IACN,QAAQ;AACV,CAAC;AAED,IAAM,sBAAsB,OAAO,MAAA,CAAO;IACxC,MAAM;IACN,QAAQ;AACV,CAAC;AAEM,IAAM,eAAe,CAAC,SAC3B,WAAW,uBAAuB,WAAW;AAExC,IAAM,gBAAgB,CAC3B,QACA,WACA,sBAEA,UAAU,YACN,sBACA,sBACE,sBACA","debugId":null}},
    {"offset": {"line": 4708, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/legacy-runtime/runtime-cores/utils/MessageRepository.tsx"],"sourcesContent":["import type { ThreadMessage } from \"../../../types\";\nimport { generateId, generateOptimisticId } from \"../../../utils/idUtils\";\nimport { ThreadMessageLike } from \"../external-store\";\nimport { getAutoStatus } from \"../external-store/auto-status\";\nimport { fromThreadMessageLike } from \"../external-store/ThreadMessageLike\";\n\n/**\n * Represents a parent node in the repository tree structure.\n */\ntype RepositoryParent = {\n  /** IDs of child messages */\n  children: string[];\n  /** Reference to the next message in the active branch */\n  next: RepositoryMessage | null;\n};\n\n/**\n * Represents a message node in the repository tree structure.\n */\ntype RepositoryMessage = RepositoryParent & {\n  /** Reference to the parent message */\n  prev: RepositoryMessage | null;\n  /** The actual message data */\n  current: ThreadMessage;\n  /** The depth level in the tree (0 for root messages) */\n  level: number;\n};\n\n/**\n * Represents a message item that can be exported from the repository.\n */\nexport type ExportedMessageRepositoryItem = {\n  /** The message data */\n  message: ThreadMessage;\n  /** ID of the parent message, or null for root messages */\n  parentId: string | null;\n};\n\n/**\n * Represents the entire repository state for export/import.\n */\nexport type ExportedMessageRepository = {\n  /** ID of the head message, or null/undefined if no head */\n  headId?: string | null;\n  /** Array of all messages with their parent references */\n  messages: Array<{\n    message: ThreadMessage;\n    parentId: string | null;\n  }>;\n};\n\n/**\n * Utility functions for working with exported message repositories.\n */\nexport const ExportedMessageRepository = {\n  /**\n   * Converts an array of messages to an ExportedMessageRepository format.\n   * Creates parent-child relationships based on the order of messages in the array.\n   *\n   * @param messages - Array of message-like objects to convert\n   * @returns ExportedMessageRepository with parent-child relationships established\n   */\n  fromArray: (\n    messages: readonly ThreadMessageLike[],\n  ): ExportedMessageRepository => {\n    const conv = messages.map((m) =>\n      fromThreadMessageLike(\n        m,\n        generateId(),\n        getAutoStatus(false, false, false),\n      ),\n    );\n\n    return {\n      messages: conv.map((m, idx) => ({\n        parentId: idx > 0 ? conv[idx - 1]!.id : null,\n        message: m,\n      })),\n    };\n  },\n};\n\n/**\n * Recursively finds the head (leaf) message in a branch.\n *\n * @param message - The starting message or parent node\n * @returns The leaf message of the branch, or null if not found\n */\nconst findHead = (\n  message: RepositoryMessage | RepositoryParent,\n): RepositoryMessage | null => {\n  if (message.next) return findHead(message.next);\n  if (\"current\" in message) return message;\n  return null;\n};\n\n/**\n * A utility class for caching computed values and invalidating the cache when needed.\n */\nclass CachedValue<T> {\n  private _value: T | null = null;\n\n  /**\n   * @param func - The function that computes the cached value\n   */\n  constructor(private func: () => T) {}\n\n  /**\n   * Gets the cached value, computing it if necessary.\n   */\n  get value() {\n    if (this._value === null) {\n      this._value = this.func();\n    }\n    return this._value;\n  }\n\n  /**\n   * Invalidates the cache, forcing recomputation on next access.\n   */\n  dirty() {\n    this._value = null;\n  }\n}\n\n/**\n * A repository that manages a tree of messages with branching capabilities.\n * Supports operations like adding, updating, and deleting messages, as well as\n * managing multiple conversation branches.\n */\nexport class MessageRepository {\n  /** Map of message IDs to repository message objects */\n  private messages = new Map<string, RepositoryMessage>();\n  /** Reference to the current head (most recent) message in the active branch */\n  private head: RepositoryMessage | null = null;\n  /** Root node of the tree structure */\n  private root: RepositoryParent = {\n    children: [],\n    next: null,\n  };\n\n  /**\n   * Performs link/unlink operations between messages in the tree.\n   *\n   * @param newParent - The new parent message, or null\n   * @param child - The child message to operate on\n   * @param operation - The type of operation to perform:\n   *   - \"cut\": Remove the child from its current parent\n   *   - \"link\": Add the child to a new parent\n   *   - \"relink\": Both cut and link operations\n   */\n  private performOp(\n    newParent: RepositoryMessage | null,\n    child: RepositoryMessage,\n    operation: \"cut\" | \"link\" | \"relink\",\n  ) {\n    const parentOrRoot = child.prev ?? this.root;\n    const newParentOrRoot = newParent ?? this.root;\n\n    if (operation === \"relink\" && parentOrRoot === newParentOrRoot) return;\n\n    // cut\n    if (operation !== \"link\") {\n      // remove from parentOrRoot.children\n      parentOrRoot.children = parentOrRoot.children.filter(\n        (m) => m !== child.current.id,\n      );\n\n      // update parentOrRoot.next\n      if (parentOrRoot.next === child) {\n        const fallbackId = parentOrRoot.children.at(-1);\n        const fallback = fallbackId ? this.messages.get(fallbackId) : null;\n        if (fallback === undefined) {\n          throw new Error(\n            \"MessageRepository(performOp/cut): Fallback sibling message not found. This is likely an internal bug in assistant-ui.\",\n          );\n        }\n        parentOrRoot.next = fallback;\n      }\n    }\n\n    // link\n    if (operation !== \"cut\") {\n      // ensure the child is not part of parent tree\n      for (\n        let current: RepositoryMessage | null = newParent;\n        current;\n        current = current.prev\n      ) {\n        if (current.current.id === child.current.id) {\n          throw new Error(\n            \"MessageRepository(performOp/link): A message with the same id already exists in the parent tree. This error occurs if the same message id is found multiple times. This is likely an internal bug in assistant-ui.\",\n          );\n        }\n      }\n\n      // add to parentOrRoot.children\n      newParentOrRoot.children = [\n        ...newParentOrRoot.children,\n        child.current.id,\n      ];\n\n      // update parentOrRoot.next\n      if (findHead(child) === this.head || newParentOrRoot.next === null) {\n        newParentOrRoot.next = child;\n      }\n\n      child.prev = newParent;\n    }\n  }\n\n  /** Cached array of messages in the current active branch, from root to head */\n  private _messages = new CachedValue<readonly ThreadMessage[]>(() => {\n    const messages = new Array<ThreadMessage>(this.head?.level ?? 0);\n    for (let current = this.head; current; current = current.prev) {\n      messages[current.level] = current.current;\n    }\n    return messages;\n  });\n\n  /**\n   * Gets the ID of the current head message.\n   * @returns The ID of the head message, or null if no messages exist\n   */\n  get headId() {\n    return this.head?.current.id ?? null;\n  }\n\n  /**\n   * Gets all messages in the current active branch, from root to head.\n   * @returns Array of messages in the current branch\n   */\n  getMessages() {\n    return this._messages.value;\n  }\n\n  /**\n   * Adds a new message or updates an existing one in the repository.\n   * If the message ID already exists, the message is updated and potentially relinked to a new parent.\n   * If the message is new, it's added as a child of the specified parent.\n   *\n   * @param parentId - ID of the parent message, or null for root messages\n   * @param message - The message to add or update\n   * @throws Error if the parent message is not found\n   */\n  addOrUpdateMessage(parentId: string | null, message: ThreadMessage) {\n    const existingItem = this.messages.get(message.id);\n    const prev = parentId ? this.messages.get(parentId) : null;\n    if (prev === undefined)\n      throw new Error(\n        \"MessageRepository(addOrUpdateMessage): Parent message not found. This is likely an internal bug in assistant-ui.\",\n      );\n\n    // update existing message\n    if (existingItem) {\n      existingItem.current = message;\n      this.performOp(prev, existingItem, \"relink\");\n      this._messages.dirty();\n      return;\n    }\n\n    // create a new message\n    const newItem: RepositoryMessage = {\n      prev,\n      current: message,\n      next: null,\n      children: [],\n      level: prev ? prev.level + 1 : 0,\n    };\n\n    this.messages.set(message.id, newItem);\n    this.performOp(prev, newItem, \"link\");\n\n    if (this.head === prev) {\n      this.head = newItem;\n    }\n\n    this._messages.dirty();\n  }\n\n  /**\n   * Gets a message and its parent ID by message ID.\n   *\n   * @param messageId - ID of the message to retrieve\n   * @returns Object containing the message and its parent ID\n   * @throws Error if the message is not found\n   */\n  getMessage(messageId: string) {\n    const message = this.messages.get(messageId);\n    if (!message)\n      throw new Error(\n        \"MessageRepository(updateMessage): Message not found. This is likely an internal bug in assistant-ui.\",\n      );\n\n    return {\n      parentId: message.prev?.current.id ?? null,\n      message: message.current,\n    };\n  }\n\n  /**\n   * Adds an optimistic message to the repository.\n   * An optimistic message is a temporary placeholder that will be replaced by a real message later.\n   *\n   * @param parentId - ID of the parent message, or null for root messages\n   * @param message - The core message to convert to an optimistic message\n   * @returns The generated optimistic ID\n   */\n  appendOptimisticMessage(parentId: string | null, message: ThreadMessageLike) {\n    let optimisticId: string;\n    do {\n      optimisticId = generateOptimisticId();\n    } while (this.messages.has(optimisticId));\n\n    this.addOrUpdateMessage(\n      parentId,\n      fromThreadMessageLike(message, optimisticId, { type: \"running\" }),\n    );\n\n    return optimisticId;\n  }\n\n  /**\n   * Deletes a message from the repository and relinks its children.\n   *\n   * @param messageId - ID of the message to delete\n   * @param replacementId - Optional ID of the message to become the new parent of the children,\n   *                       undefined means use the deleted message's parent,\n   *                       null means use the root\n   * @throws Error if the message or replacement is not found\n   */\n  deleteMessage(messageId: string, replacementId?: string | null | undefined) {\n    const message = this.messages.get(messageId);\n\n    if (!message)\n      throw new Error(\n        \"MessageRepository(deleteMessage): Message not found. This is likely an internal bug in assistant-ui.\",\n      );\n\n    const replacement =\n      replacementId === undefined\n        ? message.prev // if no replacementId is provided, use the parent\n        : replacementId === null\n          ? null\n          : this.messages.get(replacementId);\n    if (replacement === undefined)\n      throw new Error(\n        \"MessageRepository(deleteMessage): Replacement not found. This is likely an internal bug in assistant-ui.\",\n      );\n\n    for (const child of message.children) {\n      const childMessage = this.messages.get(child);\n      if (!childMessage)\n        throw new Error(\n          \"MessageRepository(deleteMessage): Child message not found. This is likely an internal bug in assistant-ui.\",\n        );\n      this.performOp(replacement, childMessage, \"relink\");\n    }\n\n    this.performOp(null, message, \"cut\");\n    this.messages.delete(messageId);\n\n    if (this.head === message) {\n      this.head = findHead(replacement ?? this.root);\n    }\n\n    this._messages.dirty();\n  }\n\n  /**\n   * Gets all branch IDs (sibling messages) at the level of a specified message.\n   *\n   * @param messageId - ID of the message to find branches for\n   * @returns Array of message IDs representing branches\n   * @throws Error if the message is not found\n   */\n  getBranches(messageId: string) {\n    const message = this.messages.get(messageId);\n    if (!message)\n      throw new Error(\n        \"MessageRepository(getBranches): Message not found. This is likely an internal bug in assistant-ui.\",\n      );\n\n    const { children } = message.prev ?? this.root;\n    return children;\n  }\n\n  /**\n   * Switches the active branch to the one containing the specified message.\n   *\n   * @param messageId - ID of the message in the branch to switch to\n   * @throws Error if the branch is not found\n   */\n  switchToBranch(messageId: string) {\n    const message = this.messages.get(messageId);\n    if (!message)\n      throw new Error(\n        \"MessageRepository(switchToBranch): Branch not found. This is likely an internal bug in assistant-ui.\",\n      );\n\n    const prevOrRoot = message.prev ?? this.root;\n    prevOrRoot.next = message;\n\n    this.head = findHead(message);\n\n    this._messages.dirty();\n  }\n\n  /**\n   * Resets the head to a specific message or null.\n   *\n   * @param messageId - ID of the message to set as head, or null to clear the head\n   * @throws Error if the message is not found\n   */\n  resetHead(messageId: string | null) {\n    if (messageId === null) {\n      this.clear();\n      return;\n    }\n\n    const message = this.messages.get(messageId);\n    if (!message)\n      throw new Error(\n        \"MessageRepository(resetHead): Branch not found. This is likely an internal bug in assistant-ui.\",\n      );\n\n    if (message.children.length > 0) {\n      const deleteDescendants = (msg: RepositoryMessage) => {\n        for (const childId of msg.children) {\n          const childMessage = this.messages.get(childId);\n          if (childMessage) {\n            deleteDescendants(childMessage);\n            this.messages.delete(childId);\n          }\n        }\n      };\n      deleteDescendants(message);\n\n      message.children = [];\n      message.next = null;\n    }\n\n    this.head = message;\n    for (\n      let current: RepositoryMessage | null = message;\n      current;\n      current = current.prev\n    ) {\n      if (current.prev) {\n        current.prev.next = current;\n      }\n    }\n\n    this._messages.dirty();\n  }\n\n  /**\n   * Clears all messages from the repository.\n   */\n  clear(): void {\n    this.messages.clear();\n    this.head = null;\n    this.root = {\n      children: [],\n      next: null,\n    };\n    this._messages.dirty();\n  }\n\n  /**\n   * Exports the repository state for persistence.\n   *\n   * @returns Exportable repository state\n   */\n  export(): ExportedMessageRepository {\n    const exportItems: ExportedMessageRepository[\"messages\"] = [];\n\n    // hint: we are relying on the insertion order of the messages\n    // this is important for the import function to properly link the messages\n    for (const [, message] of this.messages) {\n      exportItems.push({\n        message: message.current,\n        parentId: message.prev?.current.id ?? null,\n      });\n    }\n\n    return {\n      headId: this.head?.current.id ?? null,\n      messages: exportItems,\n    };\n  }\n\n  /**\n   * Imports repository state from an exported repository.\n   *\n   * @param repository - The exported repository state to import\n   */\n  import({ headId, messages }: ExportedMessageRepository) {\n    for (const { message, parentId } of messages) {\n      this.addOrUpdateMessage(parentId, message);\n    }\n\n    // switch to the saved head id if it is not the most recent message\n    this.resetHead(headId ?? messages.at(-1)?.message.id ?? null);\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 5042, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/legacy-runtime/runtime/AssistantRuntime.ts"],"sourcesContent":["import { AssistantRuntimeCore } from \"../runtime-cores/core/AssistantRuntimeCore\";\nimport { ModelContextProvider } from \"../../model-context/ModelContextTypes\";\nimport { ThreadRuntime } from \"./ThreadRuntime\";\nimport { Unsubscribe } from \"../../types\";\nimport { ThreadListRuntime, ThreadListRuntimeImpl } from \"./ThreadListRuntime\";\nimport { ExportedMessageRepository, ThreadMessageLike } from \"../runtime-cores\";\n\nexport type AssistantRuntime = {\n  /**\n   * The threads in this assistant.\n   */\n  readonly threads: ThreadListRuntime;\n\n  /**\n   * The currently selected main thread. Equivalent to `threads.main`.\n   */\n  readonly thread: ThreadRuntime;\n\n  /**\n   * @deprecated This field was renamed to `threads`.\n   */\n  readonly threadList: ThreadListRuntime;\n\n  /**\n   * Switch to a new thread.\n   *\n   * @deprecated This method was moved to `threads.switchToNewThread`.\n   */\n  switchToNewThread(): void;\n\n  /**\n   * Switch to a thread.\n   *\n   * @param threadId The thread ID to switch to.\n   * @deprecated This method was moved to `threads.switchToThread`.\n   */\n  switchToThread(threadId: string): void;\n\n  /**\n   * Register a model context provider. Model context providers are configuration such as system message, temperature, etc. that are set in the frontend.\n   *\n   * @param provider The model context provider to register.\n   */\n  registerModelContextProvider(provider: ModelContextProvider): Unsubscribe;\n\n  /**\n   * @deprecated This method was renamed to `registerModelContextProvider`.\n   */\n  registerModelConfigProvider(provider: ModelContextProvider): Unsubscribe;\n\n  /**\n   * @deprecated Use `runtime.thread.reset(initialMessages)`.\n   */\n  reset: unknown; // make it a type error\n};\n\nexport class AssistantRuntimeImpl implements AssistantRuntime {\n  public readonly threads;\n  public get threadList() {\n    return this.threads;\n  }\n\n  public readonly _thread: ThreadRuntime;\n\n  public constructor(private readonly _core: AssistantRuntimeCore) {\n    this.threads = new ThreadListRuntimeImpl(_core.threads);\n    this._thread = this.threads.main;\n\n    this.__internal_bindMethods();\n  }\n\n  protected __internal_bindMethods() {\n    this.switchToNewThread = this.switchToNewThread.bind(this);\n    this.switchToThread = this.switchToThread.bind(this);\n    this.registerModelContextProvider =\n      this.registerModelContextProvider.bind(this);\n    this.registerModelConfigProvider =\n      this.registerModelConfigProvider.bind(this);\n    this.reset = this.reset.bind(this);\n  }\n\n  public get thread() {\n    return this._thread;\n  }\n\n  public switchToNewThread() {\n    return this._core.threads.switchToNewThread();\n  }\n\n  public switchToThread(threadId: string) {\n    return this._core.threads.switchToThread(threadId);\n  }\n\n  public registerModelContextProvider(provider: ModelContextProvider) {\n    return this._core.registerModelContextProvider(provider);\n  }\n\n  public registerModelConfigProvider(provider: ModelContextProvider) {\n    return this.registerModelContextProvider(provider);\n  }\n\n  public reset({\n    initialMessages,\n  }: { initialMessages?: ThreadMessageLike[] } = {}) {\n    return this._core.threads\n      .getMainThreadRuntimeCore()\n      .import(ExportedMessageRepository.fromArray(initialMessages ?? []));\n  }\n}\n"],"names":[],"mappings":";;;;;;AAIA,SAA4B,6BAA6B;AACzD,SAAS,iCAAoD;;;;AAmDtD,IAAM,uBAAN,MAAuD;IAE5D,IAAW,aAAa;QACtB,OAAO,IAAA,CAAK,OAAA;IACd;IAWU,yBAAyB;QACjC,IAAA,CAAK,iBAAA,GAAoB,IAAA,CAAK,iBAAA,CAAkB,IAAA,CAAK,IAAI;QACzD,IAAA,CAAK,cAAA,GAAiB,IAAA,CAAK,cAAA,CAAe,IAAA,CAAK,IAAI;QACnD,IAAA,CAAK,4BAAA,GACH,IAAA,CAAK,4BAAA,CAA6B,IAAA,CAAK,IAAI;QAC7C,IAAA,CAAK,2BAAA,GACH,IAAA,CAAK,2BAAA,CAA4B,IAAA,CAAK,IAAI;QAC5C,IAAA,CAAK,KAAA,GAAQ,IAAA,CAAK,KAAA,CAAM,IAAA,CAAK,IAAI;IACnC;IAEA,IAAW,SAAS;QAClB,OAAO,IAAA,CAAK,OAAA;IACd;IAEO,oBAAoB;QACzB,OAAO,IAAA,CAAK,KAAA,CAAM,OAAA,CAAQ,iBAAA,CAAkB;IAC9C;IAEO,eAAe,QAAA,EAAkB;QACtC,OAAO,IAAA,CAAK,KAAA,CAAM,OAAA,CAAQ,cAAA,CAAe,QAAQ;IACnD;IAEO,6BAA6B,QAAA,EAAgC;QAClE,OAAO,IAAA,CAAK,KAAA,CAAM,4BAAA,CAA6B,QAAQ;IACzD;IAEO,4BAA4B,QAAA,EAAgC;QACjE,OAAO,IAAA,CAAK,4BAAA,CAA6B,QAAQ;IACnD;IAEO,QAE4C;cADjD,eAAA,EACF,GAFa,iEAEkC,CAAC;QAC9C,OAAO,IAAA,CAAK,KAAA,CAAM,OAAA,CACf,wBAAA,CAAyB,EACzB,MAAA,CAAO,yPAAA,CAA0B,SAAA,0DAAU,kBAAmB,CAAC,CAAC,CAAC;IACtE;IA3CO,YAA6B,KAAA,CAA6B;QAPjD;uMAKA;QAEoB,IAAA,CAAA,KAAA,GAAA;QAClC,IAAA,CAAK,OAAA,GAAU,IAAI,mOAAA,CAAsB,MAAM,OAAO;QACtD,IAAA,CAAK,OAAA,GAAU,IAAA,CAAK,OAAA,CAAQ,IAAA;QAE5B,IAAA,CAAK,sBAAA,CAAuB;IAC9B;AAuCF","debugId":null}},
    {"offset": {"line": 5098, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/legacy-runtime/runtime-cores/remote-thread-list/useRemoteThreadListRuntime.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState, useEffect, useMemo } from \"react\";\nimport { BaseAssistantRuntimeCore } from \"../core/BaseAssistantRuntimeCore\";\nimport { RemoteThreadListThreadListRuntimeCore } from \"./RemoteThreadListThreadListRuntimeCore\";\nimport { RemoteThreadListOptions } from \"./types\";\nimport { AssistantRuntimeImpl } from \"../../../internal\";\nimport { AssistantRuntimeCore } from \"../core/AssistantRuntimeCore\";\n\nclass RemoteThreadListRuntimeCore\n  extends BaseAssistantRuntimeCore\n  implements AssistantRuntimeCore\n{\n  public readonly threads;\n\n  constructor(options: RemoteThreadListOptions) {\n    super();\n    this.threads = new RemoteThreadListThreadListRuntimeCore(\n      options,\n      this._contextProvider,\n    );\n  }\n\n  public get RenderComponent() {\n    return this.threads.__internal_RenderComponent;\n  }\n}\n\nexport const useRemoteThreadListRuntime = (\n  options: RemoteThreadListOptions,\n) => {\n  const [runtime] = useState(() => new RemoteThreadListRuntimeCore(options));\n  useEffect(() => {\n    runtime.threads.__internal_setOptions(options);\n    runtime.threads.__internal_load();\n  }, [runtime, options]);\n  return useMemo(() => new AssistantRuntimeImpl(runtime), [runtime]);\n};\n"],"names":[],"mappings":";;;;;;AAEA,SAAS,UAAU,WAAW,eAAe;AAC7C,SAAS,gCAAgC;AACzC,SAAS,6CAA6C;AAEtD,SAAS,4BAA4B;;;;;;;AAGrC,IAAM,8BAAN,cACU,8PAAA,CAEV;IAWE,IAAW,kBAAkB;QAC3B,OAAO,IAAA,CAAK,OAAA,CAAQ,0BAAA;IACtB;IAVA,YAAY,OAAA,CAAkC;QAC5C,KAAA,CAAM,kMAHQ;QAId,IAAA,CAAK,OAAA,GAAU,IAAI,4SAAA,CACjB,SACA,IAAA,CAAK,gBAAA;IAET;AAKF;AAEO,IAAM,6BAA6B,CACxC,YACG;IACH,MAAM,CAAC,OAAO,CAAA,OAAI,yKAAA;+CAAS,IAAM,IAAI,4BAA4B,OAAO,CAAC;;IACzE,IAAA,0KAAA;gDAAU,MAAM;YACd,QAAQ,OAAA,CAAQ,qBAAA,CAAsB,OAAO;YAC7C,QAAQ,OAAA,CAAQ,eAAA,CAAgB;QAClC;+CAAG;QAAC;QAAS,OAAO;KAAC;IACrB,WAAO,wKAAA;8CAAQ,IAAM,IAAI,iOAAA,CAAqB,OAAO;6CAAG;QAAC,OAAO;KAAC;AACnE","debugId":null}},
    {"offset": {"line": 5157, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/legacy-runtime/runtime-cores/external-store/ExternalStoreThreadListRuntimeCore.tsx"],"sourcesContent":["import type { Unsubscribe } from \"../../../types\";\nimport { ExternalStoreThreadRuntimeCore } from \"./ExternalStoreThreadRuntimeCore\";\nimport {\n  ThreadListItemCoreState,\n  ThreadListRuntimeCore,\n} from \"../core/ThreadListRuntimeCore\";\nimport { ExternalStoreThreadListAdapter } from \"./ExternalStoreAdapter\";\n\nexport type ExternalStoreThreadFactory = () => ExternalStoreThreadRuntimeCore;\n\nconst EMPTY_ARRAY = Object.freeze([]);\nconst DEFAULT_THREAD_ID = \"DEFAULT_THREAD_ID\";\nconst DEFAULT_THREADS = Object.freeze([DEFAULT_THREAD_ID]);\nconst DEFAULT_THREAD = Object.freeze({\n  id: DEFAULT_THREAD_ID,\n  remoteId: undefined,\n  externalId: undefined,\n  status: \"regular\",\n});\nconst RESOLVED_PROMISE = Promise.resolve();\nconst DEFAULT_THREAD_DATA = Object.freeze({\n  [DEFAULT_THREAD_ID]: DEFAULT_THREAD,\n});\n\nexport class ExternalStoreThreadListRuntimeCore\n  implements ThreadListRuntimeCore\n{\n  private _mainThreadId: string = DEFAULT_THREAD_ID;\n  private _threads: readonly string[] = DEFAULT_THREADS;\n  private _archivedThreads: readonly string[] = EMPTY_ARRAY;\n  private _threadData: Readonly<Record<string, ThreadListItemCoreState>> =\n    DEFAULT_THREAD_DATA;\n\n  public get isLoading() {\n    return this.adapter.isLoading ?? false;\n  }\n\n  public get newThreadId() {\n    return undefined;\n  }\n\n  public get threadIds() {\n    return this._threads;\n  }\n\n  public get archivedThreadIds() {\n    return this._archivedThreads;\n  }\n\n  public get threadData() {\n    return this._threadData;\n  }\n\n  public getLoadThreadsPromise() {\n    return RESOLVED_PROMISE;\n  }\n\n  private _mainThread: ExternalStoreThreadRuntimeCore;\n\n  public get mainThreadId() {\n    return this._mainThreadId;\n  }\n\n  constructor(\n    private adapter: ExternalStoreThreadListAdapter = {},\n    private threadFactory: ExternalStoreThreadFactory,\n  ) {\n    this._mainThread = this.threadFactory();\n    this.__internal_setAdapter(adapter, true);\n  }\n\n  public getMainThreadRuntimeCore() {\n    return this._mainThread;\n  }\n\n  public getThreadRuntimeCore(): never {\n    throw new Error(\"Method not implemented.\");\n  }\n\n  public getItemById(threadId: string) {\n    for (const thread of this.adapter.threads ?? []) {\n      if (thread.id === threadId) return thread as any;\n    }\n    for (const thread of this.adapter.archivedThreads ?? []) {\n      if (thread.id === threadId) return thread as any;\n    }\n    if (threadId === DEFAULT_THREAD_ID) return DEFAULT_THREAD;\n    return undefined;\n  }\n\n  public __internal_setAdapter(\n    adapter: ExternalStoreThreadListAdapter,\n    initialLoad = false,\n  ) {\n    const previousAdapter = this.adapter;\n    this.adapter = adapter;\n\n    const newThreadId = adapter.threadId ?? DEFAULT_THREAD_ID;\n    const newThreads = adapter.threads ?? EMPTY_ARRAY;\n    const newArchivedThreads = adapter.archivedThreads ?? EMPTY_ARRAY;\n\n    const previousThreadId = previousAdapter.threadId ?? DEFAULT_THREAD_ID;\n    const previousThreads = previousAdapter.threads ?? EMPTY_ARRAY;\n    const previousArchivedThreads =\n      previousAdapter.archivedThreads ?? EMPTY_ARRAY;\n\n    if (\n      !initialLoad &&\n      previousThreadId === newThreadId &&\n      previousThreads === newThreads &&\n      previousArchivedThreads === newArchivedThreads\n    ) {\n      return;\n    }\n\n    this._threadData = {\n      ...DEFAULT_THREAD_DATA,\n      ...Object.fromEntries(\n        adapter.threads?.map((t) => [\n          t.id,\n          {\n            ...t,\n            remoteId: t.remoteId,\n            externalId: t.externalId,\n            status: \"regular\",\n          },\n        ]) ?? [],\n      ),\n      ...Object.fromEntries(\n        adapter.archivedThreads?.map((t) => [\n          t.id,\n          {\n            ...t,\n            remoteId: t.remoteId,\n            externalId: t.externalId,\n            status: \"archived\",\n          },\n        ]) ?? [],\n      ),\n    };\n\n    if (previousThreads !== newThreads) {\n      this._threads = this.adapter.threads?.map((t) => t.id) ?? EMPTY_ARRAY;\n    }\n\n    if (previousArchivedThreads !== newArchivedThreads) {\n      this._archivedThreads =\n        this.adapter.archivedThreads?.map((t) => t.id) ?? EMPTY_ARRAY;\n    }\n\n    if (previousThreadId !== newThreadId) {\n      this._mainThreadId = newThreadId;\n      this._mainThread = this.threadFactory();\n    }\n\n    this._notifySubscribers();\n  }\n\n  public async switchToThread(threadId: string): Promise<void> {\n    if (this._mainThreadId === threadId) return;\n    const onSwitchToThread = this.adapter.onSwitchToThread;\n    if (!onSwitchToThread)\n      throw new Error(\n        \"External store adapter does not support switching to thread\",\n      );\n    onSwitchToThread(threadId);\n  }\n\n  public async switchToNewThread(): Promise<void> {\n    const onSwitchToNewThread = this.adapter.onSwitchToNewThread;\n    if (!onSwitchToNewThread)\n      throw new Error(\n        \"External store adapter does not support switching to new thread\",\n      );\n\n    onSwitchToNewThread();\n  }\n\n  public async rename(threadId: string, newTitle: string): Promise<void> {\n    const onRename = this.adapter.onRename;\n    if (!onRename)\n      throw new Error(\"External store adapter does not support renaming\");\n\n    onRename(threadId, newTitle);\n  }\n\n  public async detach(): Promise<void> {\n    // no-op\n  }\n\n  public async archive(threadId: string): Promise<void> {\n    const onArchive = this.adapter.onArchive;\n    if (!onArchive)\n      throw new Error(\"External store adapter does not support archiving\");\n\n    onArchive(threadId);\n  }\n\n  public async unarchive(threadId: string): Promise<void> {\n    const onUnarchive = this.adapter.onUnarchive;\n    if (!onUnarchive)\n      throw new Error(\"External store adapter does not support unarchiving\");\n\n    onUnarchive(threadId);\n  }\n\n  public async delete(threadId: string): Promise<void> {\n    const onDelete = this.adapter.onDelete;\n    if (!onDelete)\n      throw new Error(\"External store adapter does not support deleting\");\n\n    onDelete(threadId);\n  }\n\n  public initialize(): never {\n    throw new Error(\"Method not implemented.\");\n  }\n\n  public generateTitle(): never {\n    throw new Error(\"Method not implemented.\");\n  }\n\n  private _subscriptions = new Set<() => void>();\n\n  public subscribe(callback: () => void): Unsubscribe {\n    this._subscriptions.add(callback);\n    return () => this._subscriptions.delete(callback);\n  }\n\n  private _notifySubscribers() {\n    for (const callback of this._subscriptions) callback();\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 5342, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/legacy-runtime/runtime-cores/external-store/ThreadMessageConverter.ts"],"sourcesContent":["import { ThreadMessage } from \"../../../types\";\n\nexport type ConverterCallback<TIn> = (\n  cache: ThreadMessage | undefined,\n  message: TIn,\n  idx: number,\n) => ThreadMessage;\n\nexport class ThreadMessageConverter {\n  private readonly cache = new WeakMap<WeakKey, ThreadMessage>();\n\n  convertMessages<TIn extends WeakKey>(\n    messages: readonly TIn[],\n    converter: ConverterCallback<TIn>,\n  ): ThreadMessage[] {\n    return messages.map((m, idx) => {\n      const cached = this.cache.get(m);\n      const newMessage = converter(cached, m, idx);\n      this.cache.set(m, newMessage);\n      return newMessage;\n    });\n  }\n}\n"],"names":[],"mappings":";;;;;;;AAQO,IAAM,yBAAN,MAA6B;IAGlC,gBACE,QAAA,EACA,SAAA,EACiB;QACjB,OAAO,SAAS,GAAA,CAAI,CAAC,GAAG,QAAQ;YAC9B,MAAM,SAAS,IAAA,CAAK,KAAA,CAAM,GAAA,CAAI,CAAC;YAC/B,MAAM,aAAa,UAAU,QAAQ,GAAG,GAAG;YAC3C,IAAA,CAAK,KAAA,CAAM,GAAA,CAAI,GAAG,UAAU;YAC5B,OAAO;QACT,CAAC;IACH;;uLAZiB,SAAQ,aAAA,GAAA,IAAI,QAAgC;;AAa/D","debugId":null}},
    {"offset": {"line": 5368, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/legacy-runtime/runtime-cores/composer/BaseComposerRuntimeCore.tsx"],"sourcesContent":["import {\n  Attachment,\n  CompleteAttachment,\n  PendingAttachment,\n} from \"../../../types/AttachmentTypes\";\nimport { AppendMessage } from \"../../../types\";\nimport { AttachmentAdapter } from \"../adapters/attachment\";\nimport {\n  ComposerRuntimeCore,\n  ComposerRuntimeEventType,\n} from \"../core/ComposerRuntimeCore\";\nimport { MessageRole, RunConfig } from \"../../../types/AssistantTypes\";\nimport { BaseSubscribable } from \"../remote-thread-list/BaseSubscribable\";\n\nconst isAttachmentComplete = (a: Attachment): a is CompleteAttachment =>\n  a.status.type === \"complete\";\n\nexport abstract class BaseComposerRuntimeCore\n  extends BaseSubscribable\n  implements ComposerRuntimeCore\n{\n  public readonly isEditing = true;\n\n  protected abstract getAttachmentAdapter(): AttachmentAdapter | undefined;\n\n  public get attachmentAccept(): string {\n    return this.getAttachmentAdapter()?.accept ?? \"*\";\n  }\n\n  private _attachments: readonly Attachment[] = [];\n  public get attachments() {\n    return this._attachments;\n  }\n\n  protected setAttachments(value: readonly Attachment[]) {\n    this._attachments = value;\n    this._notifySubscribers();\n  }\n\n  public abstract get canCancel(): boolean;\n\n  public get isEmpty() {\n    return !this.text.trim() && !this.attachments.length;\n  }\n\n  private _text = \"\";\n\n  get text() {\n    return this._text;\n  }\n\n  private _role: MessageRole = \"user\";\n\n  get role() {\n    return this._role;\n  }\n\n  private _runConfig: RunConfig = {};\n\n  get runConfig() {\n    return this._runConfig;\n  }\n\n  public setText(value: string) {\n    if (this._text === value) return;\n\n    this._text = value;\n    this._notifySubscribers();\n  }\n\n  public setRole(role: MessageRole) {\n    if (this._role === role) return;\n\n    this._role = role;\n    this._notifySubscribers();\n  }\n\n  public setRunConfig(runConfig: RunConfig) {\n    if (this._runConfig === runConfig) return;\n\n    this._runConfig = runConfig;\n    this._notifySubscribers();\n  }\n\n  private _emptyTextAndAttachments() {\n    this._attachments = [];\n    this._text = \"\";\n    this._notifySubscribers();\n  }\n\n  private async _onClearAttachments() {\n    const adapter = this.getAttachmentAdapter();\n    if (adapter) {\n      await Promise.all(this._attachments.map((a) => adapter.remove(a)));\n    }\n  }\n\n  public async reset() {\n    if (\n      this._attachments.length === 0 &&\n      this._text === \"\" &&\n      this._role === \"user\" &&\n      Object.keys(this._runConfig).length === 0\n    ) {\n      return;\n    }\n\n    this._role = \"user\";\n    this._runConfig = {};\n\n    const task = this._onClearAttachments();\n    this._emptyTextAndAttachments();\n    await task;\n  }\n\n  public async clearAttachments() {\n    const task = this._onClearAttachments();\n    this.setAttachments([]);\n\n    await task;\n  }\n\n  public async send() {\n    const adapter = this.getAttachmentAdapter();\n    const attachments =\n      adapter && this.attachments.length > 0\n        ? Promise.all(\n            this.attachments.map(async (a) => {\n              if (isAttachmentComplete(a)) return a;\n              const result = await adapter.send(a);\n              return result as CompleteAttachment;\n            }),\n          )\n        : [];\n\n    const text = this.text;\n    this._emptyTextAndAttachments();\n    const message: Omit<AppendMessage, \"parentId\" | \"sourceId\"> = {\n      createdAt: new Date(),\n      role: this.role,\n      content: text ? [{ type: \"text\", text }] : [],\n      attachments: await attachments,\n      runConfig: this.runConfig,\n      metadata: { custom: {} },\n    };\n\n    this.handleSend(message);\n    this._notifyEventSubscribers(\"send\");\n  }\n\n  public cancel() {\n    this.handleCancel();\n  }\n\n  protected abstract handleSend(\n    message: Omit<AppendMessage, \"parentId\" | \"sourceId\">,\n  ): void;\n  protected abstract handleCancel(): void;\n\n  async addAttachment(file: File) {\n    const adapter = this.getAttachmentAdapter();\n    if (!adapter) throw new Error(\"Attachments are not supported\");\n\n    const upsertAttachment = (a: PendingAttachment) => {\n      const idx = this._attachments.findIndex(\n        (attachment) => attachment.id === a.id,\n      );\n      if (idx !== -1)\n        this._attachments = [\n          ...this._attachments.slice(0, idx),\n          a,\n          ...this._attachments.slice(idx + 1),\n        ];\n      else {\n        this._attachments = [...this._attachments, a];\n      }\n\n      this._notifySubscribers();\n    };\n\n    const promiseOrGenerator = adapter.add({ file });\n    if (Symbol.asyncIterator in promiseOrGenerator) {\n      for await (const r of promiseOrGenerator) {\n        upsertAttachment(r);\n      }\n    } else {\n      upsertAttachment(await promiseOrGenerator);\n    }\n\n    this._notifyEventSubscribers(\"attachment-add\");\n    this._notifySubscribers();\n  }\n\n  async removeAttachment(attachmentId: string) {\n    const adapter = this.getAttachmentAdapter();\n    if (!adapter) throw new Error(\"Attachments are not supported\");\n\n    const index = this._attachments.findIndex((a) => a.id === attachmentId);\n    if (index === -1) throw new Error(\"Attachment not found\");\n    const attachment = this._attachments[index]!;\n\n    await adapter.remove(attachment);\n\n    // this._attachments.toSpliced(index, 1); - not yet widely supported\n    this._attachments = [\n      ...this._attachments.slice(0, index),\n      ...this._attachments.slice(index + 1),\n    ];\n    this._notifySubscribers();\n  }\n\n  private _eventSubscribers = new Map<\n    ComposerRuntimeEventType,\n    Set<() => void>\n  >();\n\n  protected _notifyEventSubscribers(event: ComposerRuntimeEventType) {\n    const subscribers = this._eventSubscribers.get(event);\n    if (!subscribers) return;\n\n    for (const callback of subscribers) callback();\n  }\n\n  public unstable_on(event: ComposerRuntimeEventType, callback: () => void) {\n    const subscribers = this._eventSubscribers.get(event);\n    if (!subscribers) {\n      this._eventSubscribers.set(event, new Set([callback]));\n    } else {\n      subscribers.add(callback);\n    }\n\n    return () => {\n      const subscribers = this._eventSubscribers.get(event);\n      if (!subscribers) return;\n      subscribers.delete(callback);\n    };\n  }\n}\n"],"names":["subscribers"],"mappings":"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","debugId":null}},
    {"offset": {"line": 5548, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/legacy-runtime/runtime-cores/composer/DefaultThreadComposerRuntimeCore.tsx"],"sourcesContent":["import { AppendMessage, PendingAttachment } from \"../../../types\";\nimport { AttachmentAdapter } from \"../adapters/attachment\";\nimport { ThreadComposerRuntimeCore } from \"../core/ComposerRuntimeCore\";\nimport { ThreadRuntimeCore } from \"../core/ThreadRuntimeCore\";\nimport { BaseComposerRuntimeCore } from \"./BaseComposerRuntimeCore\";\n\nexport class DefaultThreadComposerRuntimeCore\n  extends BaseComposerRuntimeCore\n  implements ThreadComposerRuntimeCore\n{\n  private _canCancel = false;\n  public get canCancel() {\n    return this._canCancel;\n  }\n\n  public override get attachments(): readonly PendingAttachment[] {\n    return super.attachments as readonly PendingAttachment[];\n  }\n\n  protected getAttachmentAdapter() {\n    return this.runtime.adapters?.attachments;\n  }\n\n  constructor(\n    private runtime: Omit<ThreadRuntimeCore, \"composer\"> & {\n      adapters?: { attachments?: AttachmentAdapter | undefined } | undefined;\n    },\n  ) {\n    super();\n    this.connect();\n  }\n\n  public connect() {\n    return this.runtime.subscribe(() => {\n      if (this.canCancel !== this.runtime.capabilities.cancel) {\n        this._canCancel = this.runtime.capabilities.cancel;\n        this._notifySubscribers();\n      }\n    });\n  }\n\n  public async handleSend(\n    message: Omit<AppendMessage, \"parentId\" | \"sourceId\">,\n  ) {\n    this.runtime.append({\n      ...(message as AppendMessage),\n      parentId: this.runtime.messages.at(-1)?.id ?? null,\n      sourceId: null,\n    });\n  }\n\n  public async handleCancel() {\n    this.runtime.cancelRun();\n  }\n}\n"],"names":[],"mappings":";;;;;;AAIA,SAAS,+BAA+B;;;AAEjC,IAAM,mCAAN,cACG,gQAAA,CAEV;IAEE,IAAW,YAAY;QACrB,OAAO,IAAA,CAAK,UAAA;IACd;IAEA,IAAoB,cAA4C;QAC9D,OAAO,KAAA,CAAM;IACf;IAEU,uBAAuB;YACxB;QAAP,qCAAO,CAAK,OAAA,CAAQ,QAAA,kFAAU,WAAA;IAChC;IAWO,UAAU;QACf,OAAO,IAAA,CAAK,OAAA,CAAQ,SAAA,CAAU,MAAM;YAClC,IAAI,IAAA,CAAK,SAAA,KAAc,IAAA,CAAK,OAAA,CAAQ,YAAA,CAAa,MAAA,EAAQ;gBACvD,IAAA,CAAK,UAAA,GAAa,IAAA,CAAK,OAAA,CAAQ,YAAA,CAAa,MAAA;gBAC5C,IAAA,CAAK,kBAAA,CAAmB;YAC1B;QACF,CAAC;IACH;IAEA,MAAa,WACX,OAAA,EACA;;;QACA,IAAA,CAAK,OAAA,CAAQ,MAAA,CAAO;YAClB,GAAI,OAAA;YACJ,2EAAU,CAAK,OAAA,CAAQ,QAAA,CAAS,EAAA,CAAG,CAAA,CAAE,+DAA3B,0BAA8B,EAAA,uFAAM;YAC9C,UAAU;QACZ,CAAC;IACH;IAEA,MAAa,eAAe;QAC1B,IAAA,CAAK,OAAA,CAAQ,SAAA,CAAU;IACzB;IA9BA,YACU,OAAA,CAGR;QACA,KAAA,CAAM,kLAlBA,cAAa;QAcX,IAAA,CAAA,OAAA,GAAA;QAKR,IAAA,CAAK,OAAA,CAAQ;IACf;AAwBF","debugId":null}},
    {"offset": {"line": 5600, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/legacy-runtime/runtime-cores/composer/DefaultEditComposerRuntimeCore.tsx"],"sourcesContent":["import { AppendMessage, ThreadMessage } from \"../../../types\";\nimport { getThreadMessageText } from \"../../../utils/getThreadMessageText\";\nimport { AttachmentAdapter } from \"../adapters/attachment\";\nimport { ThreadRuntimeCore } from \"../core/ThreadRuntimeCore\";\nimport { BaseComposerRuntimeCore } from \"./BaseComposerRuntimeCore\";\n\nexport class DefaultEditComposerRuntimeCore extends BaseComposerRuntimeCore {\n  public get canCancel() {\n    return true;\n  }\n\n  protected getAttachmentAdapter() {\n    return this.runtime.adapters?.attachments;\n  }\n\n  private _nonTextParts;\n  private _previousText;\n  private _parentId;\n  private _sourceId;\n  constructor(\n    private runtime: ThreadRuntimeCore & {\n      adapters?: { attachments?: AttachmentAdapter | undefined } | undefined;\n    },\n    private endEditCallback: () => void,\n    { parentId, message }: { parentId: string | null; message: ThreadMessage },\n  ) {\n    super();\n    this._parentId = parentId;\n    this._sourceId = message.id;\n    this._previousText = getThreadMessageText(message);\n    this.setText(this._previousText);\n\n    this.setRole(message.role);\n    this.setAttachments(message.attachments ?? []);\n\n    this._nonTextParts = message.content.filter((part) => part.type !== \"text\");\n\n    // Use the runConfig from the regular (non-edit) composer as the initial runConfig for the edit composer\n    this.setRunConfig({ ...runtime.composer.runConfig });\n  }\n\n  public async handleSend(\n    message: Omit<AppendMessage, \"parentId\" | \"sourceId\">,\n  ) {\n    const text = getThreadMessageText(message as AppendMessage);\n    if (text !== this._previousText) {\n      this.runtime.append({\n        ...message,\n        content: [...message.content, ...this._nonTextParts] as any,\n        parentId: this._parentId,\n        sourceId: this._sourceId,\n      });\n    }\n\n    this.handleCancel();\n  }\n\n  public handleCancel() {\n    this.endEditCallback();\n    this._notifySubscribers();\n  }\n}\n"],"names":[],"mappings":";;;;;;AACA,SAAS,4BAA4B;AAGrC,SAAS,+BAA+B;;;;AAEjC,IAAM,iCAAN,cAA6C,gQAAA,CAAwB;IAC1E,IAAW,YAAY;QACrB,OAAO;IACT;IAEU,uBAAuB;;QAC/B,iCAAO,IAAA,CAAK,OAAA,CAAQ,QAAA,kFAAU,WAAA;IAChC;IA4BA,MAAa,WACX,OAAA,EACA;QACA,MAAM,WAAO,8MAAA,EAAqB,OAAwB;QAC1D,IAAI,SAAS,IAAA,CAAK,aAAA,EAAe;YAC/B,IAAA,CAAK,OAAA,CAAQ,MAAA,CAAO;gBAClB,GAAG,OAAA;gBACH,SAAS,CAAC;uBAAG,QAAQ,OAAA,EAAS;uBAAG,IAAA,CAAK,aAAa;iBAAA;gBACnD,UAAU,IAAA,CAAK,SAAA;gBACf,UAAU,IAAA,CAAK,SAAA;YACjB,CAAC;QACH;QAEA,IAAA,CAAK,YAAA,CAAa;IACpB;IAEO,eAAe;QACpB,IAAA,CAAK,eAAA,CAAgB;QACrB,IAAA,CAAK,kBAAA,CAAmB;IAC1B;IAzCA,YACU,OAAA,EAGA,eAAA,EACR,EAAE,QAAA,EAAU,OAAA,CAAQ,CAAA,CACpB;QACA,KAAA,CAAM,mMAXA,wLACA,0BACA,sYACA;QAEE,IAAA,CAAA,OAAA,GAAA;QAGA,IAAA,CAAA,eAAA,GAAA;QAIR,IAAA,CAAK,SAAA,GAAY;QACjB,IAAA,CAAK,SAAA,GAAY,QAAQ,EAAA;QACzB,IAAA,CAAK,aAAA,OAAgB,8MAAA,EAAqB,OAAO;QACjD,IAAA,CAAK,OAAA,CAAQ,IAAA,CAAK,aAAa;QAE/B,IAAA,CAAK,OAAA,CAAQ,QAAQ,IAAI;;QACzB,IAAA,CAAK,cAAA,CAAe,gCAAQ,WAAA,uEAAe,CAAC,CAAC;QAE7C,IAAA,CAAK,aAAA,GAAgB,QAAQ,OAAA,CAAQ,MAAA,CAAO,CAAC,OAAS,KAAK,IAAA,KAAS,MAAM;QAG1E,IAAA,CAAK,YAAA,CAAa;YAAE,GAAG,QAAQ,QAAA,CAAS,SAAA;QAAU,CAAC;IACrD;AAsBF","debugId":null}},
    {"offset": {"line": 5661, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/legacy-runtime/runtime-cores/core/BaseThreadRuntimeCore.tsx"],"sourcesContent":["import type { AppendMessage, Unsubscribe } from \"../../../types\";\nimport {\n  ExportedMessageRepository,\n  MessageRepository,\n} from \"../utils/MessageRepository\";\nimport { DefaultThreadComposerRuntimeCore } from \"../composer/DefaultThreadComposerRuntimeCore\";\nimport {\n  AddToolResultOptions,\n  ThreadSuggestion,\n  SubmitFeedbackOptions,\n  ThreadRuntimeCore,\n  SpeechState,\n  RuntimeCapabilities,\n  SubmittedFeedback,\n  ThreadRuntimeEventType,\n  StartRunConfig,\n  ResumeRunConfig,\n} from \"./ThreadRuntimeCore\";\nimport { DefaultEditComposerRuntimeCore } from \"../composer/DefaultEditComposerRuntimeCore\";\nimport { SpeechSynthesisAdapter } from \"../adapters/speech/SpeechAdapterTypes\";\nimport { FeedbackAdapter } from \"../adapters/feedback/FeedbackAdapter\";\nimport { AttachmentAdapter } from \"../adapters/attachment\";\nimport { getThreadMessageText } from \"../../../utils/getThreadMessageText\";\nimport { ModelContextProvider } from \"../../../model-context\";\nimport { ThreadMessageLike } from \"../external-store\";\n\ntype BaseThreadAdapters = {\n  speech?: SpeechSynthesisAdapter | undefined;\n  feedback?: FeedbackAdapter | undefined;\n  attachments?: AttachmentAdapter | undefined;\n};\n\nexport abstract class BaseThreadRuntimeCore implements ThreadRuntimeCore {\n  private _subscriptions = new Set<() => void>();\n  private _isInitialized = false;\n\n  protected readonly repository = new MessageRepository();\n  public abstract get adapters(): BaseThreadAdapters | undefined;\n  public abstract get isDisabled(): boolean;\n  public abstract get isLoading(): boolean;\n  public abstract get suggestions(): readonly ThreadSuggestion[];\n  public abstract get extras(): unknown;\n\n  public abstract get capabilities(): RuntimeCapabilities;\n  public abstract append(message: AppendMessage): void;\n  public abstract startRun(config: StartRunConfig): void;\n  public abstract resumeRun(config: ResumeRunConfig): void;\n  public abstract addToolResult(options: AddToolResultOptions): void;\n  public abstract cancelRun(): void;\n  public abstract unstable_loadExternalState(state: any): void;\n\n  public get messages() {\n    return this.repository.getMessages();\n  }\n\n  public get state() {\n    let mostRecentAssistantMessage;\n    for (const message of this.messages) {\n      if (message.role === \"assistant\") {\n        mostRecentAssistantMessage = message;\n        break;\n      }\n    }\n\n    return mostRecentAssistantMessage?.metadata.unstable_state ?? null;\n  }\n\n  public readonly composer = new DefaultThreadComposerRuntimeCore(this);\n\n  constructor(private readonly _contextProvider: ModelContextProvider) {}\n\n  public getModelContext() {\n    return this._contextProvider.getModelContext();\n  }\n\n  private _editComposers = new Map<string, DefaultEditComposerRuntimeCore>();\n  public getEditComposer(messageId: string) {\n    return this._editComposers.get(messageId);\n  }\n  public beginEdit(messageId: string) {\n    if (this._editComposers.has(messageId))\n      throw new Error(\"Edit already in progress\");\n\n    this._editComposers.set(\n      messageId,\n      new DefaultEditComposerRuntimeCore(\n        this,\n        () => this._editComposers.delete(messageId),\n        this.repository.getMessage(messageId),\n      ),\n    );\n    this._notifySubscribers();\n  }\n\n  public getMessageById(messageId: string) {\n    try {\n      return this.repository.getMessage(messageId);\n    } catch {\n      return undefined;\n    }\n  }\n\n  public getBranches(messageId: string): string[] {\n    return this.repository.getBranches(messageId);\n  }\n\n  public switchToBranch(branchId: string): void {\n    this.repository.switchToBranch(branchId);\n    this._notifySubscribers();\n  }\n\n  protected _notifySubscribers() {\n    for (const callback of this._subscriptions) callback();\n  }\n\n  public _notifyEventSubscribers(event: ThreadRuntimeEventType) {\n    const subscribers = this._eventSubscribers.get(event);\n    if (!subscribers) return;\n\n    for (const callback of subscribers) callback();\n  }\n\n  public subscribe(callback: () => void): Unsubscribe {\n    this._subscriptions.add(callback);\n    return () => this._subscriptions.delete(callback);\n  }\n\n  private _submittedFeedback: Record<string, SubmittedFeedback> = {};\n\n  public getSubmittedFeedback(messageId: string) {\n    return this._submittedFeedback[messageId];\n  }\n\n  public submitFeedback({ messageId, type }: SubmitFeedbackOptions) {\n    const adapter = this.adapters?.feedback;\n    if (!adapter) throw new Error(\"Feedback adapter not configured\");\n\n    const { message } = this.repository.getMessage(messageId);\n    adapter.submit({ message, type });\n\n    this._submittedFeedback[messageId] = { type };\n    this._notifySubscribers();\n  }\n\n  private _stopSpeaking: Unsubscribe | undefined;\n  public speech: SpeechState | undefined;\n\n  public speak(messageId: string) {\n    const adapter = this.adapters?.speech;\n    if (!adapter) throw new Error(\"Speech adapter not configured\");\n\n    const { message } = this.repository.getMessage(messageId);\n\n    this._stopSpeaking?.();\n\n    const utterance = adapter.speak(getThreadMessageText(message));\n    const unsub = utterance.subscribe(() => {\n      if (utterance.status.type === \"ended\") {\n        this._stopSpeaking = undefined;\n        this.speech = undefined;\n      } else {\n        this.speech = { messageId, status: utterance.status };\n      }\n      this._notifySubscribers();\n    });\n\n    this.speech = { messageId, status: utterance.status };\n    this._notifySubscribers();\n\n    this._stopSpeaking = () => {\n      utterance.cancel();\n      unsub();\n      this.speech = undefined;\n      this._stopSpeaking = undefined;\n    };\n  }\n\n  public stopSpeaking() {\n    if (!this._stopSpeaking) throw new Error(\"No message is being spoken\");\n    this._stopSpeaking();\n    this._notifySubscribers();\n  }\n\n  protected ensureInitialized() {\n    if (!this._isInitialized) {\n      this._isInitialized = true;\n      this._notifyEventSubscribers(\"initialize\");\n    }\n  }\n\n  // TODO import()/export() on external store doesn't make much sense\n  public export() {\n    return this.repository.export();\n  }\n\n  public import(data: ExportedMessageRepository) {\n    this.ensureInitialized();\n    this.repository.clear();\n    this.repository.import(data);\n    this._notifySubscribers();\n  }\n\n  public reset(initialMessages?: readonly ThreadMessageLike[]) {\n    this.import(ExportedMessageRepository.fromArray(initialMessages ?? []));\n  }\n\n  private _eventSubscribers = new Map<\n    ThreadRuntimeEventType,\n    Set<() => void>\n  >();\n\n  public unstable_on(event: ThreadRuntimeEventType, callback: () => void) {\n    if (event === \"model-context-update\") {\n      return this._contextProvider.subscribe?.(callback) ?? (() => {});\n    }\n\n    const subscribers = this._eventSubscribers.get(event);\n    if (!subscribers) {\n      this._eventSubscribers.set(event, new Set([callback]));\n    } else {\n      subscribers.add(callback);\n    }\n\n    return () => {\n      const subscribers = this._eventSubscribers.get(event)!;\n      subscribers.delete(callback);\n    };\n  }\n}\n"],"names":["subscribers"],"mappings":"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","debugId":null}},
    {"offset": {"line": 5839, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/legacy-runtime/runtime-cores/external-store/ExternalStoreThreadRuntimeCore.tsx"],"sourcesContent":["import {\n  AddToolResultOptions,\n  ResumeRunConfig,\n  StartRunConfig,\n  ThreadSuggestion,\n} from \"../core/ThreadRuntimeCore\";\n\nimport { AppendMessage, ThreadMessage } from \"../../../types\";\nimport { ExternalStoreAdapter } from \"./ExternalStoreAdapter\";\nimport {\n  getExternalStoreMessage,\n  symbolInnerMessage,\n} from \"./getExternalStoreMessage\";\nimport { ThreadMessageConverter } from \"./ThreadMessageConverter\";\nimport { getAutoStatus, isAutoStatus } from \"./auto-status\";\nimport { fromThreadMessageLike, ThreadMessageLike } from \"./ThreadMessageLike\";\nimport { getThreadMessageText } from \"../../../utils/getThreadMessageText\";\nimport {\n  RuntimeCapabilities,\n  ThreadRuntimeCore,\n} from \"../core/ThreadRuntimeCore\";\nimport { BaseThreadRuntimeCore } from \"../core/BaseThreadRuntimeCore\";\nimport { ModelContextProvider } from \"../../../model-context\";\nimport {\n  ExportedMessageRepository,\n  MessageRepository,\n} from \"../utils/MessageRepository\";\n\nconst EMPTY_ARRAY = Object.freeze([]);\n\nexport const hasUpcomingMessage = (\n  isRunning: boolean,\n  messages: readonly ThreadMessage[],\n) => {\n  return isRunning && messages[messages.length - 1]?.role !== \"assistant\";\n};\n\nexport class ExternalStoreThreadRuntimeCore\n  extends BaseThreadRuntimeCore\n  implements ThreadRuntimeCore\n{\n  private _assistantOptimisticId: string | null = null;\n\n  private _capabilities: RuntimeCapabilities = {\n    switchToBranch: false,\n    edit: false,\n    reload: false,\n    cancel: false,\n    unstable_copy: false,\n    speech: false,\n    attachments: false,\n    feedback: false,\n  };\n\n  public get capabilities() {\n    return this._capabilities;\n  }\n\n  private _messages!: readonly ThreadMessage[];\n  public isDisabled!: boolean;\n  public get isLoading() {\n    return this._store.isLoading ?? false;\n  }\n\n  public override get messages() {\n    return this._messages;\n  }\n\n  public override get state() {\n    return this._store.state ?? super.state;\n  }\n\n  public get adapters() {\n    return this._store.adapters;\n  }\n\n  public suggestions: readonly ThreadSuggestion[] = [];\n  public extras: unknown = undefined;\n\n  private _converter = new ThreadMessageConverter();\n\n  private _store!: ExternalStoreAdapter<any>;\n\n  public override beginEdit(messageId: string) {\n    if (!this._store.onEdit)\n      throw new Error(\"Runtime does not support editing.\");\n\n    super.beginEdit(messageId);\n  }\n\n  constructor(\n    contextProvider: ModelContextProvider,\n    store: ExternalStoreAdapter<any>,\n  ) {\n    super(contextProvider);\n    this.__internal_setAdapter(store);\n  }\n\n  public __internal_setAdapter(store: ExternalStoreAdapter<any>) {\n    if (this._store === store) return;\n\n    const isRunning = store.isRunning ?? false;\n    this.isDisabled = store.isDisabled ?? false;\n\n    const oldStore = this._store as ExternalStoreAdapter<any> | undefined;\n    this._store = store;\n    this.extras = store.extras;\n    this.suggestions = store.suggestions ?? EMPTY_ARRAY;\n    this._capabilities = {\n      switchToBranch: this._store.setMessages !== undefined,\n      edit: this._store.onEdit !== undefined,\n      reload: this._store.onReload !== undefined,\n      cancel: this._store.onCancel !== undefined,\n      speech: this._store.adapters?.speech !== undefined,\n      unstable_copy: this._store.unstable_capabilities?.copy !== false, // default true\n      attachments: !!this._store.adapters?.attachments,\n      feedback: !!this._store.adapters?.feedback,\n    };\n\n    let messages: readonly ThreadMessage[];\n\n    if (store.messageRepository) {\n      // Handle messageRepository\n      if (\n        oldStore &&\n        oldStore.isRunning === store.isRunning &&\n        oldStore.messageRepository === store.messageRepository\n      ) {\n        this._notifySubscribers();\n        return;\n      }\n\n      // Clear and import the message repository\n      this.repository.clear();\n      this._assistantOptimisticId = null;\n      this.repository.import(store.messageRepository);\n\n      messages = this.repository.getMessages();\n    } else if (store.messages) {\n      // Handle messages array\n\n      if (oldStore) {\n        // flush the converter cache when the convertMessage prop changes\n        if (oldStore.convertMessage !== store.convertMessage) {\n          this._converter = new ThreadMessageConverter();\n        } else if (\n          oldStore.isRunning === store.isRunning &&\n          oldStore.messages === store.messages\n        ) {\n          this._notifySubscribers();\n          // no conversion update\n          return;\n        }\n      }\n\n      messages = !store.convertMessage\n        ? store.messages\n        : this._converter.convertMessages(store.messages, (cache, m, idx) => {\n            if (!store.convertMessage) return m;\n\n            const isLast = idx === store.messages!.length - 1;\n            const autoStatus = getAutoStatus(isLast, isRunning, false);\n\n            if (\n              cache &&\n              (cache.role !== \"assistant\" ||\n                !isAutoStatus(cache.status) ||\n                cache.status === autoStatus)\n            )\n              return cache;\n\n            const messageLike = store.convertMessage(m, idx);\n            const newMessage = fromThreadMessageLike(\n              messageLike,\n              idx.toString(),\n              autoStatus,\n            );\n            (newMessage as any)[symbolInnerMessage] = m;\n            return newMessage;\n          });\n\n      for (let i = 0; i < messages.length; i++) {\n        const message = messages[i]!;\n        const parent = messages[i - 1];\n        this.repository.addOrUpdateMessage(parent?.id ?? null, message);\n      }\n    } else {\n      throw new Error(\n        \"ExternalStoreAdapter must provide either 'messages' or 'messageRepository'\",\n      );\n    }\n\n    // Common logic for both paths\n    if (messages.length > 0) this.ensureInitialized();\n\n    if ((oldStore?.isRunning ?? false) !== (store.isRunning ?? false)) {\n      if (store.isRunning) {\n        this._notifyEventSubscribers(\"run-start\");\n      } else {\n        this._notifyEventSubscribers(\"run-end\");\n      }\n    }\n\n    if (this._assistantOptimisticId) {\n      this.repository.deleteMessage(this._assistantOptimisticId);\n      this._assistantOptimisticId = null;\n    }\n\n    if (hasUpcomingMessage(isRunning, messages)) {\n      this._assistantOptimisticId = this.repository.appendOptimisticMessage(\n        messages.at(-1)?.id ?? null,\n        {\n          role: \"assistant\",\n          content: [],\n        },\n      );\n    }\n\n    this.repository.resetHead(\n      this._assistantOptimisticId ?? messages.at(-1)?.id ?? null,\n    );\n\n    this._messages = this.repository.getMessages();\n    this._notifySubscribers();\n  }\n\n  public override switchToBranch(branchId: string): void {\n    if (!this._store.setMessages)\n      throw new Error(\"Runtime does not support switching branches.\");\n\n    this.repository.switchToBranch(branchId);\n    this.updateMessages(this.repository.getMessages());\n  }\n\n  public async append(message: AppendMessage): Promise<void> {\n    if (message.parentId !== (this.messages.at(-1)?.id ?? null)) {\n      if (!this._store.onEdit)\n        throw new Error(\"Runtime does not support editing messages.\");\n      await this._store.onEdit(message);\n    } else {\n      await this._store.onNew(message);\n    }\n  }\n\n  public async startRun(config: StartRunConfig): Promise<void> {\n    if (!this._store.onReload)\n      throw new Error(\"Runtime does not support reloading messages.\");\n\n    await this._store.onReload(config.parentId, config);\n  }\n\n  public async resumeRun(config: ResumeRunConfig): Promise<void> {\n    if (!this._store.onResume)\n      throw new Error(\"Runtime does not support resuming runs.\");\n\n    await this._store.onResume(config);\n  }\n\n  public unstable_loadExternalState(state: any): void {\n    if (!this._store.onLoadExternalState)\n      throw new Error(\"Runtime does not support importing states.\");\n\n    this._store.onLoadExternalState(state);\n  }\n\n  public cancelRun(): void {\n    if (!this._store.onCancel)\n      throw new Error(\"Runtime does not support cancelling runs.\");\n\n    this._store.onCancel();\n\n    if (this._assistantOptimisticId) {\n      this.repository.deleteMessage(this._assistantOptimisticId);\n      this._assistantOptimisticId = null;\n    }\n\n    let messages = this.repository.getMessages();\n    const previousMessage = messages[messages.length - 1];\n    if (\n      previousMessage?.role === \"user\" &&\n      previousMessage.id === messages.at(-1)?.id // ensure the previous message is a leaf node\n    ) {\n      this.repository.deleteMessage(previousMessage.id);\n      if (!this.composer.text.trim()) {\n        this.composer.setText(getThreadMessageText(previousMessage));\n      }\n\n      messages = this.repository.getMessages();\n    } else {\n      this._notifySubscribers();\n    }\n\n    // resync messages (for reloading, to restore the previous branch)\n    setTimeout(() => {\n      this.updateMessages(messages);\n    }, 0);\n  }\n\n  public addToolResult(options: AddToolResultOptions) {\n    if (!this._store.onAddToolResult && !this._store.onAddToolResult)\n      throw new Error(\"Runtime does not support tool results.\");\n    this._store.onAddToolResult?.(options);\n  }\n\n  public override reset(initialMessages?: readonly ThreadMessageLike[]) {\n    const repo = new MessageRepository();\n    repo.import(ExportedMessageRepository.fromArray(initialMessages ?? []));\n    this.updateMessages(repo.getMessages());\n  }\n\n  public override import(data: ExportedMessageRepository) {\n    this._assistantOptimisticId = null;\n\n    super.import(data);\n\n    if (this._store.onImport) {\n      this._store.onImport(this.repository.getMessages());\n    }\n  }\n\n  private updateMessages = (messages: readonly ThreadMessage[]) => {\n    const hasConverter = this._store.convertMessage !== undefined;\n    if (hasConverter) {\n      this._store.setMessages?.(\n        messages.flatMap(getExternalStoreMessage).filter((m) => m != null),\n      );\n    } else {\n      // TODO mark this as readonly in v0.8.0\n      this._store.setMessages?.(messages as ThreadMessage[]);\n    }\n  };\n}\n"],"names":[],"mappings":";;;;;;;;AASA;AAIA,SAAS,8BAA8B;AACvC,SAAS,eAAe,oBAAoB;AAC5C,SAAS,6BAAgD;AACzD,SAAS,4BAA4B;AAKrC,SAAS,6BAA6B;AAEtC;;;;;;;;;AAKA,IAAM,cAAc,OAAO,MAAA,CAAO,CAAC,CAAC;AAE7B,IAAM,qBAAqB,CAChC,WACA,aACG;;IACH,OAAO,oCAAa,CAAS,SAAS,MAAA,GAAS,CAAC,CAAA,+CAA5B,WAA+B,IAAA,MAAS;AAC9D;AAEO,IAAM,iCAAN,cACG,wPAAA,CAEV;IAcE,IAAW,eAAe;QACxB,OAAO,IAAA,CAAK,aAAA;IACd;IAIA,IAAW,YAAY;;QACrB,qCAAO,CAAK,MAAA,CAAO,SAAA,kDAAZ,yBAAyB;IAClC;IAEA,IAAoB,WAAW;QAC7B,OAAO,IAAA,CAAK,SAAA;IACd;IAEA,IAAoB,QAAQ;;QAC1B,6BAAO,IAAA,CAAK,MAAA,CAAO,KAAA,mEAAS,KAAA,CAAM;IACpC;IAEA,IAAW,WAAW;QACpB,OAAO,IAAA,CAAK,MAAA,CAAO,QAAA;IACrB;IASgB,UAAU,SAAA,EAAmB;QAC3C,IAAI,CAAC,IAAA,CAAK,MAAA,CAAO,MAAA,EACf,MAAM,IAAI,MAAM,mCAAmC;QAErD,KAAA,CAAM,UAAU,SAAS;IAC3B;IAUO,sBAAsB,KAAA,EAAkC;+FAkB/C;QAjBd,IAAI,IAAA,CAAK,MAAA,KAAW,MAAO,CAAA;;QAE3B,MAAM,sCAAkB,SAAA,4CAAN,mBAAmB;;QACrC,IAAA,CAAK,UAAA,8BAAmB,UAAA,6CAAN,oBAAoB;QAEtC,MAAM,WAAW,IAAA,CAAK,MAAA;QACtB,IAAA,CAAK,MAAA,GAAS;QACd,IAAA,CAAK,MAAA,GAAS,MAAM,MAAA;;QACpB,IAAA,CAAK,WAAA,GAAc,4BAAM,WAAA,mEAAe;QACxC,IAAA,CAAK,aAAA,GAAgB;YACnB,gBAAgB,IAAA,CAAK,MAAA,CAAO,WAAA,KAAgB,KAAA;YAC5C,MAAM,IAAA,CAAK,MAAA,CAAO,MAAA,KAAW,KAAA;YAC7B,QAAQ,IAAA,CAAK,MAAA,CAAO,QAAA,KAAa,KAAA;YACjC,QAAQ,IAAA,CAAK,MAAA,CAAO,QAAA,KAAa,KAAA;YACjC,kCAAQ,IAAA,CAAK,MAAA,CAAO,QAAA,gFAAU,MAAA,MAAW,KAAA;YACzC,0DAAe,CAAK,MAAA,CAAO,qBAAA,uEAAZ,mCAAmC,IAAA,MAAS;YAAA,eAAA;YAC3D,aAAa,CAAC,4BAAC,IAAA,CAAK,MAAA,CAAO,QAAA,kFAAU,WAAA;YACrC,UAAU,CAAC,gCAAC,CAAK,MAAA,CAAO,QAAA,kFAAU,QAAA;QACpC;QAEA,IAAI;QAEJ,IAAI,MAAM,iBAAA,EAAmB;YAE3B,IACE,YACA,SAAS,SAAA,KAAc,MAAM,SAAA,IAC7B,SAAS,iBAAA,KAAsB,MAAM,iBAAA,EACrC;gBACA,IAAA,CAAK,kBAAA,CAAmB;gBACxB;YACF;YAGA,IAAA,CAAK,UAAA,CAAW,KAAA,CAAM;YACtB,IAAA,CAAK,sBAAA,GAAyB;YAC9B,IAAA,CAAK,UAAA,CAAW,MAAA,CAAO,MAAM,iBAAiB;YAE9C,WAAW,IAAA,CAAK,UAAA,CAAW,WAAA,CAAY;QACzC,OAAA,IAAW,MAAM,QAAA,EAAU;YAGzB,IAAI,UAAU;gBAEZ,IAAI,SAAS,cAAA,KAAmB,MAAM,cAAA,EAAgB;oBACpD,IAAA,CAAK,UAAA,GAAa,IAAI,uQAAA,CAAuB;gBAC/C,OAAA,IACE,SAAS,SAAA,KAAc,MAAM,SAAA,IAC7B,SAAS,QAAA,KAAa,MAAM,QAAA,EAC5B;oBACA,IAAA,CAAK,kBAAA,CAAmB;oBAExB;gBACF;YACF;YAEA,WAAW,CAAC,MAAM,cAAA,GACd,MAAM,QAAA,GACN,IAAA,CAAK,UAAA,CAAW,eAAA,CAAgB,MAAM,QAAA,EAAU,CAAC,OAAO,GAAG,QAAQ;gBACjE,IAAI,CAAC,MAAM,cAAA,CAAgB,CAAA,OAAO;gBAElC,MAAM,SAAS,QAAQ,MAAM,QAAA,CAAU,MAAA,GAAS;gBAChD,MAAM,iBAAa,sPAAA,EAAc,QAAQ,WAAW,KAAK;gBAEzD,IACE,SAAA,CACC,MAAM,IAAA,KAAS,eACd,KAAC,qPAAA,EAAa,MAAM,MAAM,KAC1B,MAAM,MAAA,KAAW,UAAA,GAEnB,OAAO;gBAET,MAAM,cAAc,MAAM,cAAA,CAAe,GAAG,GAAG;gBAC/C,MAAM,iBAAa,iQAAA,EACjB,aACA,IAAI,QAAA,CAAS,GACb;gBAED,UAAA,CAAmB,oQAAkB,CAAA,GAAI;gBAC1C,OAAO;YACT,CAAC;YAEL,IAAA,IAAS,IAAI,GAAG,IAAI,SAAS,MAAA,EAAQ,IAAK;gBACxC,MAAM,UAAU,QAAA,CAAS,CAAC,CAAA;gBAC1B,MAAM,SAAS,QAAA,CAAS,IAAI,CAAC,CAAA;oBACM;gBAAnC,IAAA,CAAK,UAAA,CAAW,kBAAA,sEAA2B,EAAA,mDAAM,MAAM,OAAO;YAChE;QACF,OAAO;YACL,MAAM,IAAI,MACR;QAEJ;QAGA,IAAI,SAAS,MAAA,GAAS,EAAG,CAAA,IAAA,CAAK,iBAAA,CAAkB;;QAEhD,IAAA,qFAAe,SAAA,+CAAV,sBAAuB,KAAA,MAAA,4BAAkB,SAAA,6CAAN,oBAAmB,KAAA,GAAQ;YACjE,IAAI,MAAM,SAAA,EAAW;gBACnB,IAAA,CAAK,uBAAA,CAAwB,WAAW;YAC1C,OAAO;gBACL,IAAA,CAAK,uBAAA,CAAwB,SAAS;YACxC;QACF;QAEA,IAAI,IAAA,CAAK,sBAAA,EAAwB;YAC/B,IAAA,CAAK,UAAA,CAAW,aAAA,CAAc,IAAA,CAAK,sBAAsB;YACzD,IAAA,CAAK,sBAAA,GAAyB;QAChC;QAEA,IAAI,mBAAmB,WAAW,QAAQ,GAAG;;;YAC3C,IAAA,CAAK,sBAAA,GAAyB,IAAA,CAAK,UAAA,CAAW,uBAAA,8CACnC,EAAA,CAAG,CAAA,CAAE,iEAAG,EAAA,2CAAjB,kBAAuB,MACvB;gBACE,MAAM;gBACN,SAAS,CAAC,CAAA;YACZ;QAEJ;;QAEA,IAAA,CAAK,UAAA,CAAW,SAAA,EACd,2CAAA,CAAK,sBAAA,gHAAmC,EAAA,CAAG,CAAA,CAAE,kDAAd,aAAiB,EAAA,uCAAM;QAGxD,IAAA,CAAK,SAAA,GAAY,IAAA,CAAK,UAAA,CAAW,WAAA,CAAY;QAC7C,IAAA,CAAK,kBAAA,CAAmB;IAC1B;IAEgB,eAAe,QAAA,EAAwB;QACrD,IAAI,CAAC,IAAA,CAAK,MAAA,CAAO,WAAA,EACf,MAAM,IAAI,MAAM,8CAA8C;QAEhE,IAAA,CAAK,UAAA,CAAW,cAAA,CAAe,QAAQ;QACvC,IAAA,CAAK,cAAA,CAAe,IAAA,CAAK,UAAA,CAAW,WAAA,CAAY,CAAC;IACnD;IAEA,MAAa,OAAO,OAAA,EAAuC;;;QACzD,IAAI,QAAQ,QAAA,KAAA,kDAAc,CAAK,QAAA,CAAS,EAAA,CAAG,CAAA,CAAE,yEAAG,EAAA,cAAtB,yDAA4B,IAAA,GAAO;YAC3D,IAAI,CAAC,IAAA,CAAK,MAAA,CAAO,MAAA,EACf,MAAM,IAAI,MAAM,4CAA4C;YAC9D,MAAM,IAAA,CAAK,MAAA,CAAO,MAAA,CAAO,OAAO;QAClC,OAAO;YACL,MAAM,IAAA,CAAK,MAAA,CAAO,KAAA,CAAM,OAAO;QACjC;IACF;IAEA,MAAa,SAAS,MAAA,EAAuC;QAC3D,IAAI,CAAC,IAAA,CAAK,MAAA,CAAO,QAAA,EACf,MAAM,IAAI,MAAM,8CAA8C;QAEhE,MAAM,IAAA,CAAK,MAAA,CAAO,QAAA,CAAS,OAAO,QAAA,EAAU,MAAM;IACpD;IAEA,MAAa,UAAU,MAAA,EAAwC;QAC7D,IAAI,CAAC,IAAA,CAAK,MAAA,CAAO,QAAA,EACf,MAAM,IAAI,MAAM,yCAAyC;QAE3D,MAAM,IAAA,CAAK,MAAA,CAAO,QAAA,CAAS,MAAM;IACnC;IAEO,2BAA2B,KAAA,EAAkB;QAClD,IAAI,CAAC,IAAA,CAAK,MAAA,CAAO,mBAAA,EACf,MAAM,IAAI,MAAM,4CAA4C;QAE9D,IAAA,CAAK,MAAA,CAAO,mBAAA,CAAoB,KAAK;IACvC;IAEO,YAAkB;;QACvB,IAAI,CAAC,IAAA,CAAK,MAAA,CAAO,QAAA,EACf,MAAM,IAAI,MAAM,2CAA2C;QAE7D,IAAA,CAAK,MAAA,CAAO,QAAA,CAAS;QAErB,IAAI,IAAA,CAAK,sBAAA,EAAwB;YAC/B,IAAA,CAAK,UAAA,CAAW,aAAA,CAAc,IAAA,CAAK,sBAAsB;YACzD,IAAA,CAAK,sBAAA,GAAyB;QAChC;QAEA,IAAI,WAAW,IAAA,CAAK,UAAA,CAAW,WAAA,CAAY;QAC3C,MAAM,kBAAkB,QAAA,CAAS,SAAS,MAAA,GAAS,CAAC,CAAA;QACpD,IACE,mFAAiB,IAAA,MAAS,UAC1B,gBAAgB,EAAA,+BAAgB,EAAA,CAAG,CAAA,CAAE,kDAAd,aAAiB,EAAA,GACxC;YACA,IAAA,CAAK,UAAA,CAAW,aAAA,CAAc,gBAAgB,EAAE;YAChD,IAAI,CAAC,IAAA,CAAK,QAAA,CAAS,IAAA,CAAK,IAAA,CAAK,GAAG;gBAC9B,IAAA,CAAK,QAAA,CAAS,OAAA,KAAQ,8MAAA,EAAqB,eAAe,CAAC;YAC7D;YAEA,WAAW,IAAA,CAAK,UAAA,CAAW,WAAA,CAAY;QACzC,OAAO;YACL,IAAA,CAAK,kBAAA,CAAmB;QAC1B;QAGA,WAAW,MAAM;YACf,IAAA,CAAK,cAAA,CAAe,QAAQ;QAC9B,GAAG,CAAC;IACN;IAEO,cAAc,OAAA,EAA+B;YAGlD,8BAAA;QAFA,IAAI,CAAC,IAAA,CAAK,MAAA,CAAO,eAAA,IAAmB,CAAC,IAAA,CAAK,MAAA,CAAO,eAAA,EAC/C,MAAM,IAAI,MAAM,wCAAwC;SAC1D,+BAAA,CAAA,eAAA,IAAA,CAAK,MAAA,EAAO,eAAA,cAAZ,mDAAA,kCAAA,cAA8B,OAAO;IACvC;IAEgB,MAAM,eAAA,EAAgD;QACpE,MAAM,OAAO,IAAI,iPAAA,CAAkB;QACnC,KAAK,MAAA,CAAO,yPAAA,CAA0B,SAAA,0DAAU,kBAAmB,CAAC,CAAC,CAAC;QACtE,IAAA,CAAK,cAAA,CAAe,KAAK,WAAA,CAAY,CAAC;IACxC;IAEgB,OAAO,IAAA,EAAiC;QACtD,IAAA,CAAK,sBAAA,GAAyB;QAE9B,KAAA,CAAM,OAAO,IAAI;QAEjB,IAAI,IAAA,CAAK,MAAA,CAAO,QAAA,EAAU;YACxB,IAAA,CAAK,MAAA,CAAO,QAAA,CAAS,IAAA,CAAK,UAAA,CAAW,WAAA,CAAY,CAAC;QACpD;IACF;IApOA,YACE,eAAA,EACA,KAAA,CACA;QACA,KAAA,CAAM,eAAe,kLArDf,0BAAwC,sLAExC,iBAAqC;YAC3C,gBAAgB;YAChB,MAAM;YACN,QAAQ;YACR,QAAQ;YACR,eAAe;YACf,QAAQ;YACR,aAAa;YACb,UAAU;QACZ,qMAMQ,iMACD,SAiBA,8LAA2C,CAAC,CAAA,kLAC5C,UAAkB,KAAA,mLAEjB,cAAa,IAAI,uQAAA,CAAuB,6LAExC,wLA+OA,kBAAiB,CAAC,aAAuC;YAC/D,MAAM,eAAe,IAAA,CAAK,MAAA,CAAO,cAAA,KAAmB,KAAA;YACpD,IAAI,cAAc;oBAChB,0BAAA;iBAAA,2BAAA,CAAA,eAAA,IAAA,CAAK,MAAA,EAAO,WAAA,cAAZ,+CAAA,8BAAA,cACE,SAAS,OAAA,CAAQ,yQAAuB,EAAE,MAAA,CAAO,CAAC,IAAM,KAAK,IAAI;YAErE,OAAO;oBAEL,2BAAA;iBAAA,4BAAA,CAAA,gBAAA,IAAA,CAAK,MAAA,EAAO,WAAA,cAAZ,gDAAA,+BAAA,eAA0B,QAA2B;YACvD;QACF;QA3OE,IAAA,CAAK,qBAAA,CAAsB,KAAK;IAClC;AA2OF","debugId":null}},
    {"offset": {"line": 6072, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/legacy-runtime/runtime-cores/external-store/ExternalStoreRuntimeCore.tsx"],"sourcesContent":["import { BaseAssistantRuntimeCore } from \"../core/BaseAssistantRuntimeCore\";\nimport { ExternalStoreThreadListRuntimeCore } from \"./ExternalStoreThreadListRuntimeCore\";\nimport { ExternalStoreAdapter } from \"./ExternalStoreAdapter\";\nimport { ExternalStoreThreadRuntimeCore } from \"./ExternalStoreThreadRuntimeCore\";\n\nconst getThreadListAdapter = (store: ExternalStoreAdapter<any>) => {\n  return store.adapters?.threadList ?? {};\n};\n\nexport class ExternalStoreRuntimeCore extends BaseAssistantRuntimeCore {\n  public readonly threads;\n\n  constructor(adapter: ExternalStoreAdapter<any>) {\n    super();\n    this.threads = new ExternalStoreThreadListRuntimeCore(\n      getThreadListAdapter(adapter),\n      () => new ExternalStoreThreadRuntimeCore(this._contextProvider, adapter),\n    );\n  }\n\n  public setAdapter(adapter: ExternalStoreAdapter<any>) {\n    // Update the thread list adapter and propagate store changes to the main thread\n    this.threads.__internal_setAdapter(getThreadListAdapter(adapter));\n    this.threads.getMainThreadRuntimeCore().__internal_setAdapter(adapter);\n  }\n}\n"],"names":[],"mappings":";;;;;;AAAA,SAAS,gCAAgC;AACzC,SAAS,0CAA0C;AAEnD,SAAS,sCAAsC;;;;;AAE/C,IAAM,uBAAuB,CAAC,UAAqC;;;IACjE,8DAAa,QAAA,oEAAU,UAAA,sDAAhB,6BAA8B,CAAC;AACxC;AAEO,IAAM,2BAAN,cAAuC,8PAAA,CAAyB;IAW9D,WAAW,OAAA,EAAoC;QAEpD,IAAA,CAAK,OAAA,CAAQ,qBAAA,CAAsB,qBAAqB,OAAO,CAAC;QAChE,IAAA,CAAK,OAAA,CAAQ,wBAAA,CAAyB,EAAE,qBAAA,CAAsB,OAAO;IACvE;IAZA,YAAY,OAAA,CAAoC;QAC9C,KAAA,CAAM,kMAHQ;QAId,IAAA,CAAK,OAAA,GAAU,IAAI,+RAAA,CACjB,qBAAqB,OAAO,GAC5B,IAAM,IAAI,uRAAA,CAA+B,IAAA,CAAK,gBAAA,EAAkB,OAAO;IAE3E;AAOF","debugId":null}},
    {"offset": {"line": 6106, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/legacy-runtime/runtime-cores/external-store/useExternalStoreRuntime.tsx"],"sourcesContent":["\"use client\";\n\nimport { useEffect, useMemo, useState } from \"react\";\nimport { ExternalStoreRuntimeCore } from \"./ExternalStoreRuntimeCore\";\nimport { ExternalStoreAdapter } from \"./ExternalStoreAdapter\";\nimport {\n  AssistantRuntime,\n  AssistantRuntimeImpl,\n} from \"../../runtime/AssistantRuntime\";\nimport { useRuntimeAdapters } from \"../adapters/RuntimeAdapterProvider\";\n\nexport const useExternalStoreRuntime = <T,>(\n  store: ExternalStoreAdapter<T>,\n): AssistantRuntime => {\n  const [runtime] = useState(() => new ExternalStoreRuntimeCore(store));\n\n  useEffect(() => {\n    runtime.setAdapter(store);\n  });\n\n  const { modelContext } = useRuntimeAdapters() ?? {};\n\n  useEffect(() => {\n    if (!modelContext) return undefined;\n    return runtime.registerModelContextProvider(modelContext);\n  }, [modelContext, runtime]);\n\n  return useMemo(() => new AssistantRuntimeImpl(runtime), [runtime]);\n};\n"],"names":[],"mappings":";;;;;AAEA,SAAS,WAAW,SAAS,gBAAgB;AAC7C,SAAS,gCAAgC;AAEzC;AAIA,SAAS,0BAA0B;;;;;;AAE5B,IAAM,0BAA0B,CACrC,UACqB;IACrB,MAAM,CAAC,OAAO,CAAA,OAAI,yKAAA;4CAAS,IAAM,IAAI,2QAAA,CAAyB,KAAK,CAAC;;IAEpE,IAAA,0KAAA;6CAAU,MAAM;YACd,QAAQ,UAAA,CAAW,KAAK;QAC1B,CAAC;;;IAED,MAAM,EAAE,YAAA,CAAa,CAAA,GAAI,qRAAA,CAAmB,uEAAK,CAAC;IAElD,IAAA,0KAAA;6CAAU,MAAM;YACd,IAAI,CAAC,aAAc,CAAA,OAAO,KAAA;YAC1B,OAAO,QAAQ,4BAAA,CAA6B,YAAY;QAC1D;4CAAG;QAAC;QAAc,OAAO;KAAC;IAE1B,WAAO,wKAAA;2CAAQ,IAAM,IAAI,iOAAA,CAAqB,OAAO;0CAAG;QAAC,OAAO;KAAC;AACnE","debugId":null}},
    {"offset": {"line": 6152, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/context/react/hooks/useAssistantState.tsx"],"sourcesContent":["import { useMemo, useSyncExternalStore, useDebugValue } from \"react\";\nimport {\n  AssistantState,\n  AssistantApi,\n  useAssistantApi,\n} from \"../AssistantApiContext\";\n\nclass ProxiedAssistantState implements AssistantState {\n  #api: AssistantApi;\n  constructor(api: AssistantApi) {\n    this.#api = api;\n  }\n\n  get threads() {\n    return this.#api.threads().getState();\n  }\n\n  get toolUIs() {\n    return this.#api.toolUIs().getState();\n  }\n\n  get threadListItem() {\n    return this.#api.threadListItem().getState();\n  }\n\n  get thread() {\n    return this.#api.thread().getState();\n  }\n\n  get composer() {\n    return this.#api.composer().getState();\n  }\n\n  get message() {\n    return this.#api.message().getState();\n  }\n\n  get part() {\n    return this.#api.part().getState();\n  }\n\n  get attachment() {\n    return this.#api.attachment().getState();\n  }\n}\n\nexport const useAssistantState = <T,>(\n  selector: (state: AssistantState) => T,\n): T => {\n  const api = useAssistantApi();\n  const proxiedState = useMemo(() => new ProxiedAssistantState(api), [api]);\n  const slice = useSyncExternalStore(\n    api.subscribe,\n    () => selector(proxiedState),\n    () => selector(proxiedState),\n  );\n  useDebugValue(slice);\n\n  if (slice instanceof ProxiedAssistantState)\n    throw new Error(\n      \"You tried to return the entire AssistantState. This is not supported due to technical limitations.\",\n    );\n\n  return slice;\n};\n"],"names":[],"mappings":";;;;;;;;AAAA,SAAS,SAAS,sBAAsB,qBAAqB;AAC7D;;;;;;;AAMA,IAAM,6DAAN,MAAsD;IAMpD,IAAI,UAAU;QACZ,wLAAO,IAAA,EAAK,MAAK,OAAA,CAAQ,EAAE,QAAA,CAAS;IACtC;IAEA,IAAI,UAAU;QACZ,wLAAO,IAAA,EAAK,MAAK,OAAA,CAAQ,EAAE,QAAA,CAAS;IACtC;IAEA,IAAI,iBAAiB;QACnB,wLAAO,IAAA,EAAK,MAAK,cAAA,CAAe,EAAE,QAAA,CAAS;IAC7C;IAEA,IAAI,SAAS;QACX,wLAAO,IAAA,EAAK,MAAK,MAAA,CAAO,EAAE,QAAA,CAAS;IACrC;IAEA,IAAI,WAAW;QACb,OAAO,qLAAA,EAAK,MAAK,QAAA,CAAS,EAAE,QAAA,CAAS;IACvC;IAEA,IAAI,UAAU;QACZ,wLAAO,IAAA,EAAK,MAAK,OAAA,CAAQ,EAAE,QAAA,CAAS;IACtC;IAEA,IAAI,OAAO;QACT,wLAAO,IAAA,EAAK,MAAK,IAAA,CAAK,EAAE,QAAA,CAAS;IACnC;IAEA,IAAI,aAAa;QACf,wLAAO,IAAA,EAAK,MAAK,UAAA,CAAW,EAAE,QAAA,CAAS;IACzC;IAlCA,YAAY,GAAA,CAAmB;;;wBAD/B;;+LAEO,MAAO;IACd;AAiCF;AAEO,IAAM,oBAAoB,CAC/B,aACM;IACN,MAAM,UAAM,mNAAA,CAAgB;IAC5B,MAAM,mBAAe,wKAAA;mDAAQ,IAAM,IAAI,sBAAsB,GAAG;kDAAG;QAAC,GAAG;KAAC;IACxE,MAAM,YAAQ,qLAAA,EACZ,IAAI,SAAA;yDACJ,IAAM,SAAS,YAAY;;yDAC3B,IAAM,SAAS,YAAY;;IAE7B,IAAA,8KAAA,EAAc,KAAK;IAEnB,IAAI,iBAAiB,uBACnB,MAAM,IAAI,MACR;IAGJ,OAAO;AACT","debugId":null}},
    {"offset": {"line": 6223, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/legacy-runtime/runtime-cores/external-store/external-message-converter.tsx"],"sourcesContent":["\"use client\";\n\nimport { useMemo } from \"react\";\nimport { ThreadMessageConverter } from \"./ThreadMessageConverter\";\nimport {\n  getExternalStoreMessages,\n  symbolInnerMessage,\n} from \"./getExternalStoreMessage\";\nimport { fromThreadMessageLike, ThreadMessageLike } from \"./ThreadMessageLike\";\nimport { getAutoStatus, isAutoStatus } from \"./auto-status\";\nimport { ToolCallMessagePart } from \"../../../types\";\n\nexport namespace useExternalMessageConverter {\n  export type Message =\n    | (ThreadMessageLike & {\n        readonly convertConfig?: {\n          readonly joinStrategy?: \"concat-content\" | \"none\";\n        };\n      })\n    | {\n        role: \"tool\";\n        toolCallId: string;\n        toolName?: string | undefined;\n        result: any;\n        artifact?: any;\n        isError?: boolean;\n      };\n\n  export type Callback<T> = (message: T) => Message | Message[];\n}\n\ntype CallbackResult<T> = {\n  input: T;\n  outputs: useExternalMessageConverter.Message[];\n};\n\ntype ChunkResult<T> = {\n  inputs: T[];\n  outputs: useExternalMessageConverter.Message[];\n};\n\ntype Mutable<T> = {\n  -readonly [P in keyof T]: T[P];\n};\n\nconst joinExternalMessages = (\n  messages: readonly useExternalMessageConverter.Message[],\n): ThreadMessageLike => {\n  const assistantMessage: Mutable<Omit<ThreadMessageLike, \"metadata\">> & {\n    content: Exclude<ThreadMessageLike[\"content\"][0], string>[];\n    metadata?: Mutable<ThreadMessageLike[\"metadata\"]>;\n  } = {\n    role: \"assistant\",\n    content: [],\n  };\n  for (const output of messages) {\n    if (output.role === \"tool\") {\n      const toolCallIdx = assistantMessage.content.findIndex(\n        (c) => c.type === \"tool-call\" && c.toolCallId === output.toolCallId,\n      );\n      if (toolCallIdx !== -1) {\n        const toolCall = assistantMessage.content[\n          toolCallIdx\n        ]! as ToolCallMessagePart;\n        if (output.toolName) {\n          if (toolCall.toolName !== output.toolName)\n            throw new Error(\n              `Tool call name ${output.toolCallId} ${output.toolName} does not match existing tool call ${toolCall.toolName}`,\n            );\n        }\n        assistantMessage.content[toolCallIdx] = {\n          ...toolCall,\n          ...{\n            [symbolInnerMessage]: [\n              ...((toolCall as any)[symbolInnerMessage] ?? []),\n              output,\n            ],\n          },\n          result: output.result,\n          artifact: output.artifact,\n          isError: output.isError,\n        };\n      } else {\n        throw new Error(\n          `Tool call ${output.toolCallId} ${output.toolName} not found in assistant message`,\n        );\n      }\n    } else {\n      const role = output.role;\n      const content = (\n        typeof output.content === \"string\"\n          ? [{ type: \"text\" as const, text: output.content }]\n          : output.content\n      ).map((c) => ({\n        ...c,\n        ...{ [symbolInnerMessage]: [output] },\n      }));\n      switch (role) {\n        case \"system\":\n        case \"user\":\n          return {\n            ...output,\n            content,\n          };\n        case \"assistant\":\n          if (assistantMessage.content.length === 0) {\n            assistantMessage.id = output.id;\n            assistantMessage.createdAt ??= output.createdAt;\n            assistantMessage.status ??= output.status;\n\n            if (output.attachments) {\n              assistantMessage.attachments = [\n                ...(assistantMessage.attachments ?? []),\n                ...output.attachments,\n              ];\n            }\n\n            if (output.metadata) {\n              assistantMessage.metadata ??= {};\n              if (output.metadata.unstable_state) {\n                assistantMessage.metadata.unstable_state =\n                  output.metadata.unstable_state;\n              }\n              if (output.metadata.unstable_annotations) {\n                assistantMessage.metadata.unstable_annotations = [\n                  ...(assistantMessage.metadata.unstable_annotations ?? []),\n                  ...output.metadata.unstable_annotations,\n                ];\n              }\n              if (output.metadata.unstable_data) {\n                assistantMessage.metadata.unstable_data = [\n                  ...(assistantMessage.metadata.unstable_data ?? []),\n                  ...output.metadata.unstable_data,\n                ];\n              }\n              if (output.metadata.steps) {\n                assistantMessage.metadata.steps = [\n                  ...(assistantMessage.metadata.steps ?? []),\n                  ...output.metadata.steps,\n                ];\n              }\n              if (output.metadata.custom) {\n                assistantMessage.metadata.custom = {\n                  ...(assistantMessage.metadata.custom ?? {}),\n                  ...output.metadata.custom,\n                };\n              }\n            }\n            // TODO keep this in sync\n          }\n\n          assistantMessage.content.push(...content);\n          break;\n        default: {\n          const unsupportedRole: never = role;\n          throw new Error(`Unknown message role: ${unsupportedRole}`);\n        }\n      }\n    }\n  }\n  return assistantMessage;\n};\n\nconst chunkExternalMessages = <T,>(\n  callbackResults: CallbackResult<T>[],\n  joinStrategy?: \"concat-content\" | \"none\",\n) => {\n  const results: ChunkResult<T>[] = [];\n  let isAssistant = false;\n  let pendingNone = false; // true if the previous assistant message had joinStrategy \"none\"\n  let inputs: T[] = [];\n  let outputs: useExternalMessageConverter.Message[] = [];\n\n  const flush = () => {\n    if (outputs.length) {\n      results.push({\n        inputs,\n        outputs,\n      });\n    }\n    inputs = [];\n    outputs = [];\n    isAssistant = false;\n    pendingNone = false;\n  };\n\n  for (const callbackResult of callbackResults) {\n    for (const output of callbackResult.outputs) {\n      if (\n        (pendingNone && output.role !== \"tool\") ||\n        !isAssistant ||\n        output.role === \"user\" ||\n        output.role === \"system\"\n      ) {\n        flush();\n      }\n      isAssistant = output.role === \"assistant\" || output.role === \"tool\";\n\n      if (inputs.at(-1) !== callbackResult.input) {\n        inputs.push(callbackResult.input);\n      }\n      outputs.push(output);\n\n      if (\n        output.role === \"assistant\" &&\n        (output.convertConfig?.joinStrategy === \"none\" ||\n          joinStrategy === \"none\")\n      ) {\n        pendingNone = true;\n      }\n    }\n  }\n  flush();\n  return results;\n};\n\nexport const convertExternalMessages = <T extends WeakKey>(\n  messages: T[],\n  callback: useExternalMessageConverter.Callback<T>,\n  isRunning: boolean,\n) => {\n  const callbackResults: CallbackResult<T>[] = [];\n  for (const message of messages) {\n    const output = callback(message);\n    const outputs = Array.isArray(output) ? output : [output];\n    const result = { input: message, outputs };\n    callbackResults.push(result);\n  }\n\n  const chunks = chunkExternalMessages(callbackResults);\n\n  return chunks.map((message, idx) => {\n    const isLast = idx === chunks.length - 1;\n    const joined = joinExternalMessages(message.outputs);\n    const hasPendingToolCalls =\n      typeof joined.content === \"object\" &&\n      joined.content.some(\n        (c) => c.type === \"tool-call\" && c.result === undefined,\n      );\n    const autoStatus = getAutoStatus(isLast, isRunning, hasPendingToolCalls);\n    const newMessage = fromThreadMessageLike(\n      joined,\n      idx.toString(),\n      autoStatus,\n    );\n    (newMessage as any)[symbolInnerMessage] = message.inputs;\n    return newMessage;\n  });\n};\n\nexport const useExternalMessageConverter = <T extends WeakKey>({\n  callback,\n  messages,\n  isRunning,\n  joinStrategy,\n}: {\n  callback: useExternalMessageConverter.Callback<T>;\n  messages: T[];\n  isRunning: boolean;\n  joinStrategy?: \"concat-content\" | \"none\" | undefined;\n}) => {\n  const state = useMemo(\n    () => ({\n      callback,\n      callbackCache: new WeakMap<T, CallbackResult<T>>(),\n      chunkCache: new WeakMap<\n        useExternalMessageConverter.Message,\n        ChunkResult<T>\n      >(),\n      converterCache: new ThreadMessageConverter(),\n    }),\n    [callback],\n  );\n\n  return useMemo(() => {\n    const callbackResults: CallbackResult<T>[] = [];\n    for (const message of messages) {\n      let result = state.callbackCache.get(message);\n      if (!result) {\n        const output = state.callback(message);\n        const outputs = Array.isArray(output) ? output : [output];\n        result = { input: message, outputs };\n        state.callbackCache.set(message, result);\n      }\n      callbackResults.push(result);\n    }\n\n    const chunks = chunkExternalMessages(callbackResults, joinStrategy).map(\n      (m) => {\n        const key = m.outputs[0];\n        if (!key) return m;\n\n        const cached = state.chunkCache.get(key);\n        if (cached && shallowArrayEqual(cached.outputs, m.outputs))\n          return cached;\n        state.chunkCache.set(key, m);\n        return m;\n      },\n    );\n\n    const threadMessages = state.converterCache.convertMessages(\n      chunks,\n      (cache, message, idx) => {\n        const isLast = idx === chunks.length - 1;\n\n        const joined = joinExternalMessages(message.outputs);\n        const hasPendingToolCalls =\n          typeof joined.content === \"object\" &&\n          joined.content.some(\n            (c) => c.type === \"tool-call\" && c.result === undefined,\n          );\n        const autoStatus = getAutoStatus(\n          isLast,\n          isRunning,\n          hasPendingToolCalls,\n        );\n\n        if (\n          cache &&\n          (cache.role !== \"assistant\" ||\n            !isAutoStatus(cache.status) ||\n            cache.status === autoStatus)\n        ) {\n          const inputs = getExternalStoreMessages<T>(cache);\n          if (shallowArrayEqual(inputs, message.inputs)) {\n            return cache;\n          }\n        }\n\n        const newMessage = fromThreadMessageLike(\n          joined,\n          idx.toString(),\n          autoStatus,\n        );\n        (newMessage as any)[symbolInnerMessage] = message.inputs;\n        return newMessage;\n      },\n    );\n\n    (threadMessages as unknown as { [symbolInnerMessage]: T[] })[\n      symbolInnerMessage\n    ] = messages;\n\n    return threadMessages;\n  }, [state, messages, isRunning, joinStrategy]);\n};\n\nconst shallowArrayEqual = (a: unknown[], b: unknown[]) => {\n  if (a.length !== b.length) return false;\n  for (let i = 0; i < a.length; i++) {\n    if (a[i] !== b[i]) return false;\n  }\n  return true;\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 6499, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/legacy-runtime/runtime-cores/external-store/createMessageConverter.tsx"],"sourcesContent":["\"use client\";\nimport { ThreadState } from \"../../runtime\";\nimport { useAssistantApi, useAssistantState } from \"../../../context\";\nimport { ThreadMessage } from \"../../../types\";\nimport {\n  useExternalMessageConverter,\n  convertExternalMessages,\n} from \"./external-message-converter\";\nimport { getExternalStoreMessages } from \"./getExternalStoreMessage\";\n\nexport const createMessageConverter = <T extends object>(\n  callback: useExternalMessageConverter.Callback<T>,\n) => {\n  const result = {\n    useThreadMessages: ({\n      messages,\n      isRunning,\n      joinStrategy,\n    }: {\n      messages: T[];\n      isRunning: boolean;\n      joinStrategy?: \"concat-content\" | \"none\" | undefined;\n    }) => {\n      return useExternalMessageConverter<T>({\n        callback,\n        messages,\n        isRunning,\n        joinStrategy,\n      });\n    },\n    toThreadMessages: (messages: T[]) => {\n      return convertExternalMessages(messages, callback, false); // TODO figure out isRunning\n    },\n    toOriginalMessages: (\n      input: ThreadState | ThreadMessage | ThreadMessage[\"content\"][number],\n    ) => {\n      const messages = getExternalStoreMessages(input);\n      if (messages.length === 0) throw new Error(\"No original messages found\");\n      return messages;\n    },\n    toOriginalMessage: (\n      input: ThreadState | ThreadMessage | ThreadMessage[\"content\"][number],\n    ) => {\n      const messages = result.toOriginalMessages(input);\n      return messages[0]!;\n    },\n    useOriginalMessage: () => {\n      const messageMessages = result.useOriginalMessages();\n      const first = messageMessages[0]!;\n      return first;\n    },\n    useOriginalMessages: () => {\n      const api = useAssistantApi();\n      const partMessages = useAssistantState((s) => {\n        if (api.part.source) return getExternalStoreMessages(s.part);\n        return undefined;\n      });\n\n      const messageMessages = useAssistantState<T[]>(({ message }) =>\n        getExternalStoreMessages(message),\n      );\n\n      const messages = partMessages ?? messageMessages;\n      if (messages.length === 0) throw new Error(\"No original messages found\");\n      return messages;\n    },\n  };\n\n  return result;\n};\n"],"names":[],"mappings":";;;;;AAEA,SAAS,iBAAiB,yBAAyB;;AAEnD;AAIA,SAAS,gCAAgC;;;;;AAElC,IAAM,yBAAyB,CACpC,aACG;IACH,MAAM,SAAS;QACb,mBAAmB;gBAAC,EAClB,QAAA,EACA,SAAA,EACA,YAAA,EACF,KAIM;YACJ,OAAO,0RAAA,EAA+B;gBACpC;gBACA;gBACA;gBACA;YACF,CAAC;QACH;QACA,kBAAkB,CAAC,aAAkB;YACnC,WAAO,kRAAA,EAAwB,UAAU,UAAU,KAAK;QAC1D;QACA,oBAAoB,CAClB,UACG;YACH,MAAM,WAAW,8QAAA,EAAyB,KAAK;YAC/C,IAAI,SAAS,MAAA,KAAW,EAAG,CAAA,MAAM,IAAI,MAAM,4BAA4B;YACvE,OAAO;QACT;QACA,mBAAmB,CACjB,UACG;YACH,MAAM,WAAW,OAAO,kBAAA,CAAmB,KAAK;YAChD,OAAO,QAAA,CAAS,CAAC,CAAA;QACnB;QACA,oBAAoB,MAAM;YACxB,MAAM,kBAAkB,OAAO,mBAAA,CAAoB;YACnD,MAAM,QAAQ,eAAA,CAAgB,CAAC,CAAA;YAC/B,OAAO;QACT;QACA,qBAAqB,MAAM;YACzB,MAAM,UAAM,mNAAA,CAAgB;YAC5B,MAAM,mBAAe,4NAAA;0EAAkB,CAAC,MAAM;oBAC5C,IAAI,IAAI,IAAA,CAAK,MAAA,CAAQ,CAAA,WAAO,0QAAA,EAAyB,EAAE,IAAI;oBAC3D,OAAO,KAAA;gBACT,CAAC;;YAED,MAAM,sBAAkB,4NAAA;6EAAuB;wBAAC,EAAE,OAAA,CAAQ,CAAA;+BACxD,0QAAA,EAAyB,OAAO;;;YAGlC,MAAM,8DAAW,eAAgB;YACjC,IAAI,SAAS,MAAA,KAAW,EAAG,CAAA,MAAM,IAAI,MAAM,4BAA4B;YACvE,OAAO;QACT;IACF;IAEA,OAAO;AACT","debugId":null}},
    {"offset": {"line": 6576, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/legacy-runtime/runtime-cores/local/LocalRuntimeOptions.tsx"],"sourcesContent":["import { ThreadHistoryAdapter } from \"../adapters/thread-history/ThreadHistoryAdapter\";\nimport { AttachmentAdapter } from \"../adapters/attachment/AttachmentAdapter\";\nimport { ThreadMessageLike } from \"../external-store\";\nimport { FeedbackAdapter } from \"../adapters/feedback/FeedbackAdapter\";\nimport { SpeechSynthesisAdapter } from \"../adapters/speech/SpeechAdapterTypes\";\nimport { ChatModelAdapter } from \"./ChatModelAdapter\";\nimport { AssistantCloud } from \"assistant-cloud\";\nimport { SuggestionAdapter } from \"../adapters\";\n\nexport type LocalRuntimeOptionsBase = {\n  maxSteps?: number | undefined;\n  adapters: {\n    chatModel: ChatModelAdapter;\n    history?: ThreadHistoryAdapter | undefined;\n    attachments?: AttachmentAdapter | undefined;\n    speech?: SpeechSynthesisAdapter | undefined;\n    feedback?: FeedbackAdapter | undefined;\n    suggestion?: SuggestionAdapter | undefined;\n  };\n\n  /**\n   * Names of tools that are allowed to interrupt the run in order to wait for human/external approval.\n   */\n  unstable_humanToolNames?: string[] | undefined;\n};\n\n// TODO align LocalRuntimeOptions with LocalRuntimeOptionsBase\nexport type LocalRuntimeOptions = Omit<LocalRuntimeOptionsBase, \"adapters\"> & {\n  cloud?: AssistantCloud | undefined;\n  initialMessages?: readonly ThreadMessageLike[] | undefined;\n  adapters?: Omit<LocalRuntimeOptionsBase[\"adapters\"], \"chatModel\"> | undefined;\n};\n\nexport const splitLocalRuntimeOptions = <T extends LocalRuntimeOptions>(\n  options: T,\n) => {\n  const {\n    cloud,\n    initialMessages,\n    maxSteps,\n    adapters,\n    unstable_humanToolNames,\n    ...rest\n  } = options;\n\n  return {\n    localRuntimeOptions: {\n      cloud,\n      initialMessages,\n      maxSteps,\n      adapters,\n      unstable_humanToolNames,\n    },\n    otherOptions: rest,\n  };\n};\n"],"names":[],"mappings":";;;;;AAiCO,IAAM,2BAA2B,CACtC,YACG;IACH,MAAM,EACJ,KAAA,EACA,eAAA,EACA,QAAA,EACA,QAAA,EACA,uBAAA,EACA,GAAG,MACL,GAAI;IAEJ,OAAO;QACL,qBAAqB;YACnB;YACA;YACA;YACA;YACA;QACF;QACA,cAAc;IAChB;AACF","debugId":null}},
    {"offset": {"line": 6600, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/internal.ts"],"sourcesContent":["export type { ThreadRuntimeCore } from \"./legacy-runtime/runtime-cores/core/ThreadRuntimeCore\";\nexport type { ThreadListRuntimeCore } from \"./legacy-runtime/runtime-cores/core/ThreadListRuntimeCore\";\nexport { DefaultThreadComposerRuntimeCore } from \"./legacy-runtime/runtime-cores/composer/DefaultThreadComposerRuntimeCore\";\nexport { CompositeContextProvider } from \"./utils/CompositeContextProvider\";\nexport { MessageRepository } from \"./legacy-runtime/runtime-cores/utils/MessageRepository\";\nexport { BaseAssistantRuntimeCore } from \"./legacy-runtime/runtime-cores/core/BaseAssistantRuntimeCore\";\nexport { generateId } from \"./utils/idUtils\";\nexport { AssistantRuntimeImpl } from \"./legacy-runtime/runtime/AssistantRuntime\";\nexport {\n  ThreadRuntimeImpl,\n  type ThreadRuntimeCoreBinding,\n  type ThreadListItemRuntimeBinding,\n} from \"./legacy-runtime/runtime/ThreadRuntime\";\nexport { fromThreadMessageLike } from \"./legacy-runtime/runtime-cores/external-store/ThreadMessageLike\";\nexport { getAutoStatus } from \"./legacy-runtime/runtime-cores/external-store/auto-status\";\nexport { splitLocalRuntimeOptions } from \"./legacy-runtime/runtime-cores/local/LocalRuntimeOptions\";\n\nexport * from \"./utils/smooth\";\n"],"names":[],"mappings":";;AAEA,SAAS,wCAAwC;AACjD,SAAS,gCAAgC;AACzC,SAAS,yBAAyB;AAClC,SAAS,gCAAgC;AACzC,SAAS,kBAAkB;AAC3B,SAAS,4BAA4B;AACrC;AAKA,SAAS,6BAA6B;AACtC,SAAS,qBAAqB;AAC9B,SAAS,gCAAgC","debugId":null}},
    {"offset": {"line": 6629, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/utils/smooth/SmoothContext.tsx"],"sourcesContent":["\"use client\";\n\nimport {\n  ComponentType,\n  createContext,\n  FC,\n  forwardRef,\n  PropsWithChildren,\n  useContext,\n  useState,\n} from \"react\";\nimport { ReadonlyStore } from \"../../context/ReadonlyStore\";\nimport { create, UseBoundStore } from \"zustand\";\nimport {\n  MessagePartStatus,\n  ToolCallMessagePartStatus,\n} from \"../../types/AssistantTypes\";\nimport { useAssistantApi } from \"../../context\";\nimport { createContextStoreHook } from \"../../context/react/utils/createContextStoreHook\";\n\ntype SmoothContextValue = {\n  useSmoothStatus: UseBoundStore<\n    ReadonlyStore<MessagePartStatus | ToolCallMessagePartStatus>\n  >;\n};\n\nconst SmoothContext = createContext<SmoothContextValue | null>(null);\n\nconst makeSmoothContext = (\n  initialState: MessagePartStatus | ToolCallMessagePartStatus,\n) => {\n  const useSmoothStatus = create(() => initialState);\n  return { useSmoothStatus };\n};\n\nexport const SmoothContextProvider: FC<PropsWithChildren> = ({ children }) => {\n  const outer = useSmoothContext({ optional: true });\n  const api = useAssistantApi();\n\n  const [context] = useState(() =>\n    makeSmoothContext(api.part().getState().status),\n  );\n\n  // do not wrap if there is an outer SmoothContextProvider\n  if (outer) return children;\n\n  return (\n    <SmoothContext.Provider value={context}>{children}</SmoothContext.Provider>\n  );\n};\n\nexport const withSmoothContextProvider = <C extends ComponentType<any>>(\n  Component: C,\n): C => {\n  const Wrapped = forwardRef((props, ref) => {\n    return (\n      <SmoothContextProvider>\n        <Component {...(props as any)} ref={ref} />\n      </SmoothContextProvider>\n    );\n  });\n  Wrapped.displayName = Component.displayName;\n  return Wrapped as any;\n};\n\nfunction useSmoothContext(options?: {\n  optional?: false | undefined;\n}): SmoothContextValue;\nfunction useSmoothContext(options?: {\n  optional?: boolean | undefined;\n}): SmoothContextValue | null;\nfunction useSmoothContext(options?: { optional?: boolean | undefined }) {\n  const context = useContext(SmoothContext);\n  if (!options?.optional && !context)\n    throw new Error(\n      \"This component must be used within a SmoothContextProvider.\",\n    );\n  return context;\n}\n\nexport const { useSmoothStatus, useSmoothStatusStore } = createContextStoreHook(\n  useSmoothContext,\n  \"useSmoothStatus\",\n);\n"],"names":["useSmoothStatus"],"mappings":";;;;;;;;;;;AAEA;AAUA,SAAS,cAA6B;AAKtC,SAAS,uBAAuB;AAChC,SAAS,8BAA8B;AA6BnC;;;;;;;AArBJ,IAAM,oBAAgB,8KAAA,EAAyC,IAAI;AAEnE,IAAM,oBAAoB,CACxB,iBACG;IACH,MAAMA,uBAAkB,qJAAA,EAAO,IAAM,YAAY;IACjD,OAAO;QAAE,iBAAAA;IAAgB;AAC3B;AAEO,IAAM,wBAA+C;QAAC,EAAE,QAAA,CAAS,CAAA,KAAM;IAC5E,MAAM,QAAQ,iBAAiB;QAAE,UAAU;IAAK,CAAC;IACjD,MAAM,UAAM,mNAAA,CAAgB;IAE5B,MAAM,CAAC,OAAO,CAAA,OAAI,yKAAA;0CAAS,IACzB,kBAAkB,IAAI,IAAA,CAAK,EAAE,QAAA,CAAS,EAAE,MAAM;;IAIhD,IAAI,MAAO,CAAA,OAAO;IAElB,OACE,aAAA,GAAA,IAAA,6KAAA,EAAC,cAAc,QAAA,EAAd;QAAuB,OAAO;QAAU;IAAA,CAAS;AAEtD;AAEO,IAAM,4BAA4B,CACvC,cACM;IACN,MAAM,UAAU,+KAAA,EAAW,CAAC,OAAO,QAAQ;QACzC,OACE,aAAA,GAAA,IAAA,6KAAA,EAAC,uBAAA;YACC,UAAA,aAAA,GAAA,IAAA,6KAAA,EAAC,WAAA;gBAAW,GAAI,KAAA;gBAAe;YAAA,CAAU;QAAA,CAC3C;IAEJ,CAAC;IACD,QAAQ,WAAA,GAAc,UAAU,WAAA;IAChC,OAAO;AACT;AAQA,SAAS,iBAAiB,OAAA,EAA8C;IACtE,MAAM,cAAU,2KAAA,EAAW,aAAa;IACxC,IAAI,oDAAC,QAAS,QAAA,KAAY,CAAC,SACzB,MAAM,IAAI,MACR;IAEJ,OAAO;AACT;AAEO,IAAM,EAAE,eAAA,EAAiB,oBAAA,CAAqB,CAAA,OAAI,sOAAA,EACvD,kBACA","debugId":null}},
    {"offset": {"line": 6697, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/utils/smooth/useSmooth.tsx"],"sourcesContent":["\"use client\";\n\nimport { useEffect, useMemo, useRef, useState } from \"react\";\nimport { useAssistantState } from \"../../context\";\nimport {\n  MessagePartStatus,\n  ReasoningMessagePart,\n  TextMessagePart,\n} from \"../../types/AssistantTypes\";\nimport { useCallbackRef } from \"@radix-ui/react-use-callback-ref\";\nimport { useSmoothStatusStore } from \"./SmoothContext\";\nimport { writableStore } from \"../../context/ReadonlyStore\";\nimport { MessagePartState } from \"../../legacy-runtime/runtime/MessagePartRuntime\";\n\nclass TextStreamAnimator {\n  private animationFrameId: number | null = null;\n  private lastUpdateTime: number = Date.now();\n\n  public targetText: string = \"\";\n\n  constructor(\n    public currentText: string,\n    private setText: (newText: string) => void,\n  ) {}\n\n  start() {\n    if (this.animationFrameId !== null) return;\n    this.lastUpdateTime = Date.now();\n    this.animate();\n  }\n\n  stop() {\n    if (this.animationFrameId !== null) {\n      cancelAnimationFrame(this.animationFrameId);\n      this.animationFrameId = null;\n    }\n  }\n\n  private animate = () => {\n    const currentTime = Date.now();\n    const deltaTime = currentTime - this.lastUpdateTime;\n    let timeToConsume = deltaTime;\n\n    const remainingChars = this.targetText.length - this.currentText.length;\n    const baseTimePerChar = Math.min(5, 250 / remainingChars);\n\n    let charsToAdd = 0;\n    while (timeToConsume >= baseTimePerChar && charsToAdd < remainingChars) {\n      charsToAdd++;\n      timeToConsume -= baseTimePerChar;\n    }\n\n    if (charsToAdd !== remainingChars) {\n      this.animationFrameId = requestAnimationFrame(this.animate);\n    } else {\n      this.animationFrameId = null;\n    }\n    if (charsToAdd === 0) return;\n\n    this.currentText = this.targetText.slice(\n      0,\n      this.currentText.length + charsToAdd,\n    );\n    this.lastUpdateTime = currentTime - timeToConsume;\n    this.setText(this.currentText);\n  };\n}\n\nconst SMOOTH_STATUS: MessagePartStatus = Object.freeze({\n  type: \"running\",\n});\n\nexport const useSmooth = (\n  state: MessagePartState & (TextMessagePart | ReasoningMessagePart),\n  smooth: boolean = false,\n): MessagePartState & (TextMessagePart | ReasoningMessagePart) => {\n  const { text } = state;\n  const id = useAssistantState(({ message }) => message.id);\n\n  const idRef = useRef(id);\n  const [displayedText, setDisplayedText] = useState(text);\n\n  const smoothStatusStore = useSmoothStatusStore({ optional: true });\n  const setText = useCallbackRef((text: string) => {\n    setDisplayedText(text);\n    if (smoothStatusStore) {\n      const target =\n        displayedText !== text || state.status.type === \"running\"\n          ? SMOOTH_STATUS\n          : state.status;\n      writableStore(smoothStatusStore).setState(target, true);\n    }\n  });\n\n  // TODO this is hacky\n  useEffect(() => {\n    if (smoothStatusStore) {\n      const target =\n        displayedText !== text || state.status.type === \"running\"\n          ? SMOOTH_STATUS\n          : state.status;\n      writableStore(smoothStatusStore).setState(target, true);\n    }\n  }, [smoothStatusStore, text, displayedText, state.status]);\n\n  const [animatorRef] = useState<TextStreamAnimator>(\n    new TextStreamAnimator(text, setText),\n  );\n\n  useEffect(() => {\n    if (!smooth) {\n      animatorRef.stop();\n      return;\n    }\n\n    if (idRef.current !== id || !text.startsWith(animatorRef.targetText)) {\n      idRef.current = id;\n      setText(text);\n\n      animatorRef.currentText = text;\n      animatorRef.targetText = text;\n      animatorRef.stop();\n\n      return;\n    }\n\n    animatorRef.targetText = text;\n    animatorRef.start();\n  }, [setText, animatorRef, id, smooth, text]);\n\n  useEffect(() => {\n    return () => {\n      animatorRef.stop();\n    };\n  }, [animatorRef]);\n\n  return useMemo(\n    () =>\n      smooth\n        ? {\n            type: \"text\",\n            text: displayedText,\n            status: text === displayedText ? state.status : SMOOTH_STATUS,\n          }\n        : state,\n    [smooth, displayedText, state, text],\n  );\n};\n"],"names":["text"],"mappings":"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","debugId":null}},
    {"offset": {"line": 6850, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/utils/smooth/index.ts"],"sourcesContent":["\"use client\";\n// TODO createContextStoreHook does not work well with server-side nextjs bundler\n// use client necessary here for now\n\nexport { useSmooth } from \"./useSmooth\";\nexport { useSmoothStatus, withSmoothContextProvider } from \"./SmoothContext\";\n"],"names":[],"mappings":";;AAIA,SAAS,iBAAiB;AAC1B,SAAS,iBAAiB,iCAAiC","debugId":null}},
    {"offset": {"line": 6931, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/primitives/actionBar/useActionBarFloatStatus.tsx"],"sourcesContent":["\"use client\";\n\nimport { useAssistantState } from \"../../context\";\n\nexport enum HideAndFloatStatus {\n  Hidden = \"hidden\",\n  Floating = \"floating\",\n  Normal = \"normal\",\n}\n\nexport type UseActionBarFloatStatusProps = {\n  hideWhenRunning?: boolean | undefined;\n  autohide?: \"always\" | \"not-last\" | \"never\" | undefined;\n  autohideFloat?: \"always\" | \"single-branch\" | \"never\" | undefined;\n};\n\nexport const useActionBarFloatStatus = ({\n  hideWhenRunning,\n  autohide,\n  autohideFloat,\n}: UseActionBarFloatStatusProps) => {\n  return useAssistantState(({ thread, message }) => {\n    if (hideWhenRunning && thread.isRunning) return HideAndFloatStatus.Hidden;\n\n    const autohideEnabled =\n      autohide === \"always\" || (autohide === \"not-last\" && !message.isLast);\n\n    // normal status\n    if (!autohideEnabled) return HideAndFloatStatus.Normal;\n\n    // hidden status\n    if (!message.isHovering) return HideAndFloatStatus.Hidden;\n\n    // floating status\n    if (\n      autohideFloat === \"always\" ||\n      (autohideFloat === \"single-branch\" && message.branchCount <= 1)\n    )\n      return HideAndFloatStatus.Floating;\n\n    return HideAndFloatStatus.Normal;\n  });\n};\n"],"names":["HideAndFloatStatus"],"mappings":";;;;;;;AAEA,SAAS,yBAAyB;;;AAE3B,IAAK,qBAAL,aAAA,GAAA,CAAA,CAAKA,wBAAL;IACLA,mBAAAA,CAAA,SAAA,GAAS;IACTA,mBAAAA,CAAA,WAAA,GAAW;IACXA,mBAAAA,CAAA,SAAA,GAAS;IAHC,OAAAA;AAAA,CAAA,EAAA,sBAAA,CAAA;AAYL,IAAM,0BAA0B;QAAC,EACtC,eAAA,EACA,QAAA,EACA,aAAA,EACF,KAAoC;IAClC,WAAO,4NAAA;qDAAkB;gBAAC,EAAE,MAAA,EAAQ,OAAA,CAAQ,CAAA,KAAM;YAChD,IAAI,mBAAmB,OAAO,SAAA,CAAW,CAAA,OAAO,SAAA,UAAA;YAEhD,MAAM,kBACJ,aAAa,YAAa,aAAa,cAAc,CAAC,QAAQ,MAAA;YAGhE,IAAI,CAAC,gBAAiB,CAAA,OAAO,SAAA,UAAA;YAG7B,IAAI,CAAC,QAAQ,UAAA,CAAY,CAAA,OAAO,SAAA,UAAA;YAGhC,IACE,kBAAkB,YACjB,kBAAkB,mBAAmB,QAAQ,WAAA,IAAe,GAE7D,OAAO,WAAA,YAAA;YAET,OAAO,SAAA,UAAA;QACT,CAAC;;AACH","debugId":null}},
    {"offset": {"line": 6967, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/primitives/actionBar/ActionBarRoot.tsx"],"sourcesContent":["\"use client\";\n\nimport { Primitive } from \"@radix-ui/react-primitive\";\nimport { type ComponentRef, forwardRef, ComponentPropsWithoutRef } from \"react\";\nimport {\n  useActionBarFloatStatus,\n  HideAndFloatStatus,\n} from \"./useActionBarFloatStatus\";\n\ntype PrimitiveDivProps = ComponentPropsWithoutRef<typeof Primitive.div>;\n\nexport namespace ActionBarPrimitiveRoot {\n  export type Element = ComponentRef<typeof Primitive.div>;\n  export type Props = PrimitiveDivProps & {\n    /**\n     * Whether to hide the action bar when the thread is running.\n     * @default false\n     */\n    hideWhenRunning?: boolean | undefined;\n    /**\n     * Controls when the action bar should automatically hide.\n     * - \"always\": Always hide unless hovered\n     * - \"not-last\": Hide unless this is the last message\n     * - \"never\": Never auto-hide\n     * @default \"never\"\n     */\n    autohide?: \"always\" | \"not-last\" | \"never\" | undefined;\n    /**\n     * Controls floating behavior when auto-hidden.\n     * - \"always\": Always float when hidden\n     * - \"single-branch\": Float only for single-branch messages\n     * - \"never\": Never float\n     * @default \"never\"\n     */\n    autohideFloat?: \"always\" | \"single-branch\" | \"never\" | undefined;\n  };\n}\n\n/**\n * The root container for action bar components.\n *\n * This component provides intelligent visibility and floating behavior for action bars,\n * automatically hiding and showing based on message state, hover status, and configuration.\n * It supports floating mode for better UX when space is limited.\n *\n * @example\n * ```tsx\n * <ActionBarPrimitive.Root\n *   hideWhenRunning={true}\n *   autohide=\"not-last\"\n *   autohideFloat=\"single-branch\"\n * >\n *   <ActionBarPrimitive.Copy />\n *   <ActionBarPrimitive.Edit />\n *   <ActionBarPrimitive.Reload />\n * </ActionBarPrimitive.Root>\n * ```\n */\nexport const ActionBarPrimitiveRoot = forwardRef<\n  ActionBarPrimitiveRoot.Element,\n  ActionBarPrimitiveRoot.Props\n>(({ hideWhenRunning, autohide, autohideFloat, ...rest }, ref) => {\n  const hideAndfloatStatus = useActionBarFloatStatus({\n    hideWhenRunning,\n    autohide,\n    autohideFloat,\n  });\n\n  if (hideAndfloatStatus === HideAndFloatStatus.Hidden) return null;\n\n  return (\n    <Primitive.div\n      {...(hideAndfloatStatus === HideAndFloatStatus.Floating\n        ? { \"data-floating\": \"true\" }\n        : null)}\n      {...rest}\n      ref={ref}\n    />\n  );\n});\n\nActionBarPrimitiveRoot.displayName = \"ActionBarPrimitive.Root\";\n"],"names":[],"mappings":";;;;;AAEA,SAAS,iBAAiB;AAC1B,SAA4B,kBAA4C;AACxE;AAmEI;;;;;;AAbG,IAAM,6BAAyB,2KAAA,EAGpC,QAAwD,QAAQ;QAA/D,EAAE,eAAA,EAAiB,QAAA,EAAU,aAAA,EAAe,GAAG,KAAK,CAAA;IACrD,MAAM,yBAAqB,sOAAA,EAAwB;QACjD;QACA;QACA;IACF,CAAC;IAED,IAAI,uBAAuB,iOAAA,CAAmB,MAAA,CAAQ,CAAA,OAAO;IAE7D,OACE,aAAA,GAAA,IAAA,6KAAA,EAAC,qLAAA,CAAU,GAAA,EAAV;QACE,GAAI,uBAAuB,iOAAA,CAAmB,QAAA,GAC3C;YAAE,iBAAiB;QAAO,IAC1B,IAAA;QACH,GAAG,IAAA;QACJ;IAAA;AAGN,CAAC;AAED,uBAAuB,WAAA,GAAc","debugId":null}},
    {"offset": {"line": 7004, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/primitives/actionBar/ActionBarCopy.tsx"],"sourcesContent":["\"use client\";\n\nimport { forwardRef } from \"react\";\nimport { ActionButtonProps } from \"../../utils/createActionButton\";\nimport { composeEventHandlers } from \"@radix-ui/primitive\";\nimport { Primitive } from \"@radix-ui/react-primitive\";\nimport { useCallback } from \"react\";\nimport { useAssistantState, useAssistantApi } from \"../../context\";\n\n/**\n * Hook that provides copy functionality for action bar buttons.\n *\n * This hook returns a callback function that copies message content to the clipboard,\n * or null if copying is not available. It handles both regular message content and\n * composer text when in editing mode.\n *\n * @param options Configuration options\n * @param options.copiedDuration Duration in milliseconds to show the copied state\n * @returns A copy callback function, or null if copying is disabled\n *\n * @example\n * ```tsx\n * function CustomCopyButton() {\n *   const copy = useActionBarPrimitiveCopy({ copiedDuration: 2000 });\n *\n *   return (\n *     <button onClick={copy} disabled={!copy}>\n *       {copy ? \"Copy\" : \"Cannot Copy\"}\n *     </button>\n *   );\n * }\n * ```\n */\nconst useActionBarPrimitiveCopy = ({\n  copiedDuration = 3000,\n}: { copiedDuration?: number | undefined } = {}) => {\n  const api = useAssistantApi();\n  const hasCopyableContent = useAssistantState(({ message }) => {\n    return (\n      (message.role !== \"assistant\" || message.status?.type !== \"running\") &&\n      message.parts.some((c) => c.type === \"text\" && c.text.length > 0)\n    );\n  });\n\n  const isEditing = useAssistantState(({ composer }) => composer.isEditing);\n  const composerValue = useAssistantState(({ composer }) => composer.text);\n\n  const callback = useCallback(() => {\n    const valueToCopy = isEditing ? composerValue : api.message().getCopyText();\n\n    if (!valueToCopy) return;\n\n    navigator.clipboard.writeText(valueToCopy).then(() => {\n      api.message().setIsCopied(true);\n      setTimeout(() => api.message().setIsCopied(false), copiedDuration);\n    });\n  }, [api, isEditing, composerValue, copiedDuration]);\n\n  if (!hasCopyableContent) return null;\n  return callback;\n};\n\nexport namespace ActionBarPrimitiveCopy {\n  export type Element = HTMLButtonElement;\n  /**\n   * Props for the ActionBarPrimitive.Copy component.\n   * Inherits all button element props and action button functionality.\n   */\n  export type Props = ActionButtonProps<typeof useActionBarPrimitiveCopy>;\n}\n\n/**\n * A button component that copies message content to the clipboard.\n *\n * This component automatically handles copying message text to the clipboard\n * and provides visual feedback through the data-copied attribute. It's disabled\n * when there's no copyable content available.\n *\n * @example\n * ```tsx\n * <ActionBarPrimitive.Copy copiedDuration={2000}>\n *   Copy Message\n * </ActionBarPrimitive.Copy>\n * ```\n */\nexport const ActionBarPrimitiveCopy = forwardRef<\n  ActionBarPrimitiveCopy.Element,\n  ActionBarPrimitiveCopy.Props\n>(({ copiedDuration, onClick, disabled, ...props }, forwardedRef) => {\n  const isCopied = useAssistantState(({ message }) => message.isCopied);\n  const callback = useActionBarPrimitiveCopy({ copiedDuration });\n  return (\n    <Primitive.button\n      type=\"button\"\n      {...(isCopied ? { \"data-copied\": \"true\" } : {})}\n      {...props}\n      ref={forwardedRef}\n      disabled={disabled || !callback}\n      onClick={composeEventHandlers(onClick, () => {\n        callback?.();\n      })}\n    />\n  );\n});\n\nActionBarPrimitiveCopy.displayName = \"ActionBarPrimitive.Copy\";\n"],"names":[],"mappings":";;;;;AAEA,SAAS,kBAAkB;AAE3B,SAAS,4BAA4B;AACrC,SAAS,iBAAiB;;AAE1B,SAAS,mBAAmB,uBAAuB;AAqF/C;;;;;;;;AA3DJ,IAAM,4BAA4B;QAAC,EACjC,iBAAiB,GAAA,EACnB,oEAA6C,CAAC,MAAM;IAClD,MAAM,UAAM,mNAAA,CAAgB;IAC5B,MAAM,qBAAqB,gOAAA;2EAAkB;gBAAC,EAAE,OAAA,CAAQ,CAAA,KAAM;gBAEzB;YADnC,OAAA,CACG,QAAQ,IAAA,KAAS,2CAAuB,MAAA,oEAAQ,IAAA,MAAS,SAAA,KAC1D,QAAQ,KAAA,CAAM,IAAA;mFAAK,CAAC,IAAM,EAAE,IAAA,KAAS,UAAU,EAAE,IAAA,CAAK,MAAA,GAAS,CAAC;;QAEpE,CAAC;;IAED,MAAM,YAAY,gOAAA;kEAAkB;gBAAC,EAAE,QAAA,CAAS,CAAA;mBAAM,SAAS,SAAS;;;IACxE,MAAM,oBAAgB,4NAAA;sEAAkB;gBAAC,EAAE,QAAA,CAAS,CAAA;mBAAM,SAAS,IAAI;;;IAEvE,MAAM,eAAW,4KAAA;2DAAY,MAAM;YACjC,MAAM,cAAc,YAAY,gBAAgB,IAAI,OAAA,CAAQ,EAAE,WAAA,CAAY;YAE1E,IAAI,CAAC,YAAa,CAAA;YAElB,UAAU,SAAA,CAAU,SAAA,CAAU,WAAW,EAAE,IAAA;mEAAK,MAAM;oBACpD,IAAI,OAAA,CAAQ,EAAE,WAAA,CAAY,IAAI;oBAC9B;2EAAW,IAAM,IAAI,OAAA,CAAQ,EAAE,WAAA,CAAY,KAAK;0EAAG,cAAc;gBACnE,CAAC;;QACH;0DAAG;QAAC;QAAK;QAAW;QAAe,cAAc;KAAC;IAElD,IAAI,CAAC,mBAAoB,CAAA,OAAO;IAChC,OAAO;AACT;AAyBO,IAAM,6BAAyB,2KAAA,EAGpC,QAAkD,iBAAiB;QAAlE,EAAE,cAAA,EAAgB,OAAA,EAAS,QAAA,EAAU,GAAG,MAAM,CAAA;IAC/C,MAAM,eAAW,4NAAA;8DAAkB;gBAAC,EAAE,OAAA,CAAQ,CAAA;mBAAM,QAAQ,QAAQ;;;IACpE,MAAM,WAAW,0BAA0B;QAAE;IAAe,CAAC;IAC7D,OACE,aAAA,GAAA,IAAA,6KAAA,EAAC,qLAAA,CAAU,MAAA,EAAV;QACC,MAAK;QACJ,GAAI,WAAW;YAAE,eAAe;QAAO,IAAI,CAAC,CAAA;QAC5C,GAAG,KAAA;QACJ,KAAK;QACL,UAAU,YAAY,CAAC;QACvB,aAAS,uLAAA,EAAqB,SAAS,MAAM;YAC3C,qBAAA,+BAAA,WAAW;QACb,CAAC;IAAA;AAGP,CAAC;AAED,uBAAuB,WAAA,GAAc","debugId":null}},
    {"offset": {"line": 7099, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/utils/createActionButton.tsx"],"sourcesContent":["import {\n  ComponentRef,\n  forwardRef,\n  ComponentPropsWithoutRef,\n  MouseEventHandler,\n} from \"react\";\nimport { Primitive } from \"@radix-ui/react-primitive\";\nimport { composeEventHandlers } from \"@radix-ui/primitive\";\n\ntype ActionButtonCallback<TProps> = (\n  props: TProps,\n) => MouseEventHandler<HTMLButtonElement> | null;\n\ntype PrimitiveButtonProps = ComponentPropsWithoutRef<typeof Primitive.button>;\n\nexport type ActionButtonProps<THook> = PrimitiveButtonProps &\n  (THook extends (props: infer TProps) => unknown ? TProps : never);\n\nexport type ActionButtonElement = ComponentRef<typeof Primitive.button>;\n\nexport const createActionButton = <TProps,>(\n  displayName: string,\n  useActionButton: ActionButtonCallback<TProps>,\n  forwardProps: (keyof NonNullable<TProps>)[] = [],\n) => {\n  const ActionButton = forwardRef<\n    ActionButtonElement,\n    PrimitiveButtonProps & TProps\n  >((props, forwardedRef) => {\n    const forwardedProps = {} as TProps;\n    const primitiveProps = {} as PrimitiveButtonProps;\n\n    (Object.keys(props) as Array<keyof typeof props>).forEach((key) => {\n      if (forwardProps.includes(key as keyof TProps)) {\n        (forwardedProps as any)[key] = props[key];\n      } else {\n        (primitiveProps as any)[key] = props[key];\n      }\n    });\n\n    const callback = useActionButton(forwardedProps as TProps) ?? undefined;\n    return (\n      <Primitive.button\n        type=\"button\"\n        {...primitiveProps}\n        ref={forwardedRef}\n        disabled={primitiveProps.disabled || !callback}\n        onClick={composeEventHandlers(primitiveProps.onClick, callback)}\n      />\n    );\n  });\n\n  ActionButton.displayName = displayName;\n\n  return ActionButton;\n};\n"],"names":[],"mappings":";;;;;AAAA;AAMA,SAAS,iBAAiB;AAC1B,SAAS,4BAA4B;AAmC/B;;;;;AAtBC,IAAM,qBAAqB,SAChC,aACA;QACA,gFAA8C,CAAC,CAAA,KAC5C;IACH,MAAM,mBAAe,2KAAA,EAGnB,CAAC,OAAO,iBAAiB;QACzB,MAAM,iBAAiB,CAAC;QACxB,MAAM,iBAAiB,CAAC;QAEvB,OAAO,IAAA,CAAK,KAAK,EAAgC,OAAA,CAAQ,CAAC,QAAQ;YACjE,IAAI,aAAa,QAAA,CAAS,GAAmB,GAAG;gBAC7C,cAAA,CAAuB,GAAG,CAAA,GAAI,KAAA,CAAM,GAAG,CAAA;YAC1C,OAAO;gBACJ,cAAA,CAAuB,GAAG,CAAA,GAAI,KAAA,CAAM,GAAG,CAAA;YAC1C;QACF,CAAC;;QAED,MAAM,+CAA2B,cAAwB,6CAAxC,mBAA6C,KAAA;QAC9D,OACE,aAAA,GAAA,IAAA,6KAAA,EAAC,qLAAA,CAAU,MAAA,EAAV;YACC,MAAK;YACJ,GAAG,cAAA;YACJ,KAAK;YACL,UAAU,eAAe,QAAA,IAAY,CAAC;YACtC,aAAS,uLAAA,EAAqB,eAAe,OAAA,EAAS,QAAQ;QAAA;IAGpE,CAAC;IAED,aAAa,WAAA,GAAc;IAE3B,OAAO;AACT","debugId":null}},
    {"offset": {"line": 7143, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/primitives/actionBar/ActionBarReload.tsx"],"sourcesContent":["\"use client\";\n\nimport {\n  ActionButtonElement,\n  ActionButtonProps,\n  createActionButton,\n} from \"../../utils/createActionButton\";\nimport { useCallback } from \"react\";\nimport { useAssistantState, useAssistantApi } from \"../../context\";\n\n/**\n * Hook that provides reload functionality for action bar buttons.\n *\n * This hook returns a callback function that reloads/regenerates the current assistant message,\n * or null if reloading is not available (e.g., thread is running, disabled, or message is not from assistant).\n *\n * @returns A reload callback function, or null if reloading is disabled\n *\n * @example\n * ```tsx\n * function CustomReloadButton() {\n *   const reload = useActionBarReload();\n *\n *   return (\n *     <button onClick={reload} disabled={!reload}>\n *       {reload ? \"Reload Message\" : \"Cannot Reload\"}\n *     </button>\n *   );\n * }\n * ```\n */\nconst useActionBarReload = () => {\n  const api = useAssistantApi();\n\n  const disabled = useAssistantState(\n    (s) =>\n      s.thread.isRunning ||\n      s.thread.isDisabled ||\n      s.message.role !== \"assistant\",\n  );\n\n  const callback = useCallback(() => {\n    api.message().reload();\n  }, [api]);\n\n  if (disabled) return null;\n  return callback;\n};\n\nexport namespace ActionBarPrimitiveReload {\n  export type Element = ActionButtonElement;\n  /**\n   * Props for the ActionBarPrimitive.Reload component.\n   * Inherits all button element props and action button functionality.\n   */\n  export type Props = ActionButtonProps<typeof useActionBarReload>;\n}\n\n/**\n * A button component that reloads/regenerates the current assistant message.\n *\n * This component automatically handles reloading the current assistant message\n * and is disabled when reloading is not available (e.g., thread is running,\n * disabled, or message is not from assistant).\n *\n * @example\n * ```tsx\n * <ActionBarPrimitive.Reload>\n *   Reload Message\n * </ActionBarPrimitive.Reload>\n * ```\n */\nexport const ActionBarPrimitiveReload = createActionButton(\n  \"ActionBarPrimitive.Reload\",\n  useActionBarReload,\n);\n"],"names":[],"mappings":";;;;;AAEA;AAKA,SAAS,mBAAmB;;AAC5B,SAAS,mBAAmB,uBAAuB;;;;;AAuBnD,IAAM,qBAAqB,MAAM;IAC/B,MAAM,UAAM,mNAAA,CAAgB;IAE5B,MAAM,eAAW,4NAAA;0DACf,CAAC,IACC,EAAE,MAAA,CAAO,SAAA,IACT,EAAE,MAAA,CAAO,UAAA,IACT,EAAE,OAAA,CAAQ,IAAA,KAAS;;IAGvB,MAAM,eAAW,4KAAA;oDAAY,MAAM;YACjC,IAAI,OAAA,CAAQ,EAAE,MAAA,CAAO;QACvB;mDAAG;QAAC,GAAG;KAAC;IAER,IAAI,SAAU,CAAA,OAAO;IACrB,OAAO;AACT;AAyBO,IAAM,+BAA2B,0MAAA,EACtC,6BACA","debugId":null}},
    {"offset": {"line": 7178, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/primitives/actionBar/ActionBarEdit.tsx"],"sourcesContent":["\"use client\";\n\nimport {\n  ActionButtonElement,\n  ActionButtonProps,\n  createActionButton,\n} from \"../../utils/createActionButton\";\nimport { useCallback } from \"react\";\nimport { useAssistantState, useAssistantApi } from \"../../context\";\n\n/**\n * Hook that provides edit functionality for action bar buttons.\n *\n * This hook returns a callback function that starts editing the current message,\n * or null if editing is not available (e.g., already in editing mode).\n *\n * @returns An edit callback function, or null if editing is disabled\n *\n * @example\n * ```tsx\n * function CustomEditButton() {\n *   const edit = useActionBarEdit();\n *\n *   return (\n *     <button onClick={edit} disabled={!edit}>\n *       {edit ? \"Edit Message\" : \"Cannot Edit\"}\n *     </button>\n *   );\n * }\n * ```\n */\nconst useActionBarEdit = () => {\n  const api = useAssistantApi();\n  const disabled = useAssistantState(({ composer }) => composer.isEditing);\n\n  const callback = useCallback(() => {\n    api.composer().beginEdit();\n  }, [api]);\n\n  if (disabled) return null;\n  return callback;\n};\n\nexport namespace ActionBarPrimitiveEdit {\n  export type Element = ActionButtonElement;\n  /**\n   * Props for the ActionBarPrimitive.Edit component.\n   * Inherits all button element props and action button functionality.\n   */\n  export type Props = ActionButtonProps<typeof useActionBarEdit>;\n}\n\n/**\n * A button component that starts editing the current message.\n *\n * This component automatically handles starting the edit mode for the current message\n * and is disabled when editing is not available (e.g., already in editing mode).\n *\n * @example\n * ```tsx\n * <ActionBarPrimitive.Edit>\n *   Edit Message\n * </ActionBarPrimitive.Edit>\n * ```\n */\nexport const ActionBarPrimitiveEdit = createActionButton(\n  \"ActionBarPrimitive.Edit\",\n  useActionBarEdit,\n);\n"],"names":[],"mappings":";;;;;AAEA;AAKA,SAAS,mBAAmB;;AAC5B,SAAS,mBAAmB,uBAAuB;;;;;AAuBnD,IAAM,mBAAmB,MAAM;IAC7B,MAAM,UAAM,mNAAA,CAAgB;IAC5B,MAAM,eAAW,4NAAA;wDAAkB;gBAAC,EAAE,QAAA,CAAS,CAAA;mBAAM,SAAS,SAAS;;;IAEvE,MAAM,eAAW,4KAAA;kDAAY,MAAM;YACjC,IAAI,QAAA,CAAS,EAAE,SAAA,CAAU;QAC3B;iDAAG;QAAC,GAAG;KAAC;IAER,IAAI,SAAU,CAAA,OAAO;IACrB,OAAO;AACT;AAwBO,IAAM,6BAAyB,0MAAA,EACpC,2BACA","debugId":null}},
    {"offset": {"line": 7216, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/primitives/actionBar/ActionBarSpeak.tsx"],"sourcesContent":["\"use client\";\n\nimport { useCallback } from \"react\";\nimport { useAssistantState, useAssistantApi } from \"../../context\";\nimport {\n  ActionButtonElement,\n  ActionButtonProps,\n  createActionButton,\n} from \"../../utils/createActionButton\";\n\nconst useActionBarSpeak = () => {\n  const api = useAssistantApi();\n  const callback = useCallback(async () => {\n    api.message().speak();\n  }, [api]);\n\n  const hasSpeakableContent = useAssistantState(({ message }) => {\n    return (\n      (message.role !== \"assistant\" || message.status?.type !== \"running\") &&\n      message.parts.some((c) => c.type === \"text\" && c.text.length > 0)\n    );\n  });\n\n  if (!hasSpeakableContent) return null;\n  return callback;\n};\n\nexport namespace ActionBarPrimitiveSpeak {\n  export type Element = ActionButtonElement;\n  export type Props = ActionButtonProps<typeof useActionBarSpeak>;\n}\n\nexport const ActionBarPrimitiveSpeak = createActionButton(\n  \"ActionBarPrimitive.Speak\",\n  useActionBarSpeak,\n);\n"],"names":[],"mappings":";;;;;AAEA,SAAS,mBAAmB;;AAC5B,SAAS,mBAAmB,uBAAuB;AACnD;;;;;AAMA,IAAM,oBAAoB,MAAM;IAC9B,MAAM,UAAM,mNAAA,CAAgB;IAC5B,MAAM,eAAW,4KAAA;mDAAY,YAAY;YACvC,IAAI,OAAA,CAAQ,EAAE,KAAA,CAAM;QACtB;kDAAG;QAAC,GAAG;KAAC;IAER,MAAM,0BAAsB,4NAAA;oEAAkB;gBAAC,EAAE,OAAA,CAAQ,CAAA,KAAM;;YAC7D,OAAA,CACG,QAAQ,IAAA,KAAS,eAAe,4BAAQ,MAAA,oEAAQ,IAAA,MAAS,SAAA,KAC1D,QAAQ,KAAA,CAAM,IAAA;4EAAK,CAAC,IAAM,EAAE,IAAA,KAAS,UAAU,EAAE,IAAA,CAAK,MAAA,GAAS,CAAC;;QAEpE,CAAC;;IAED,IAAI,CAAC,oBAAqB,CAAA,OAAO;IACjC,OAAO;AACT;AAOO,IAAM,8BAA0B,0MAAA,EACrC,4BACA","debugId":null}},
    {"offset": {"line": 7257, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/primitives/actionBar/ActionBarStopSpeaking.tsx"],"sourcesContent":["\"use client\";\n\nimport { forwardRef } from \"react\";\nimport { ActionButtonProps } from \"../../utils/createActionButton\";\nimport { useEscapeKeydown } from \"@radix-ui/react-use-escape-keydown\";\nimport { Primitive } from \"@radix-ui/react-primitive\";\nimport { composeEventHandlers } from \"@radix-ui/primitive\";\nimport { useCallback } from \"react\";\nimport { useAssistantState, useAssistantApi } from \"../../context\";\n\nconst useActionBarStopSpeaking = () => {\n  const api = useAssistantApi();\n  const isSpeaking = useAssistantState(({ message }) => message.speech != null);\n\n  const callback = useCallback(() => {\n    api.message().stopSpeaking();\n  }, [api]);\n\n  if (!isSpeaking) return null;\n\n  return callback;\n};\n\nexport namespace ActionBarPrimitiveStopSpeaking {\n  export type Element = HTMLButtonElement;\n  export type Props = ActionButtonProps<typeof useActionBarStopSpeaking>;\n}\n\nexport const ActionBarPrimitiveStopSpeaking = forwardRef<\n  ActionBarPrimitiveStopSpeaking.Element,\n  ActionBarPrimitiveStopSpeaking.Props\n>((props, ref) => {\n  const callback = useActionBarStopSpeaking();\n\n  // TODO this stops working if the user is not hovering over an older message\n  useEscapeKeydown((e) => {\n    if (callback) {\n      e.preventDefault();\n      callback();\n    }\n  });\n\n  return (\n    <Primitive.button\n      type=\"button\"\n      disabled={!callback}\n      {...props}\n      ref={ref}\n      onClick={composeEventHandlers(props.onClick, () => {\n        callback?.();\n      })}\n    />\n  );\n});\n\nActionBarPrimitiveStopSpeaking.displayName = \"ActionBarPrimitive.StopSpeaking\";\n"],"names":[],"mappings":";;;;;AAEA,SAAS,kBAAkB;AAE3B,SAAS,wBAAwB;AACjC,SAAS,iBAAiB;AAC1B,SAAS,4BAA4B;;AAErC,SAAS,mBAAmB,uBAAuB;AAmC/C;;;;;;;;;AAjCJ,IAAM,2BAA2B,MAAM;IACrC,MAAM,UAAM,mNAAA,CAAgB;IAC5B,MAAM,aAAa,gOAAA;kEAAkB;gBAAC,EAAE,OAAA,CAAQ,CAAA;mBAAM,QAAQ,MAAA,IAAU,IAAI;;;IAE5E,MAAM,eAAW,4KAAA;0DAAY,MAAM;YACjC,IAAI,OAAA,CAAQ,EAAE,YAAA,CAAa;QAC7B;yDAAG;QAAC,GAAG;KAAC;IAER,IAAI,CAAC,WAAY,CAAA,OAAO;IAExB,OAAO;AACT;AAOO,IAAM,qCAAiC,2KAAA,EAG5C,CAAC,OAAO,QAAQ;IAChB,MAAM,WAAW,yBAAyB;IAG1C,IAAA,2MAAA;2DAAiB,CAAC,MAAM;YACtB,IAAI,UAAU;gBACZ,EAAE,cAAA,CAAe;gBACjB,SAAS;YACX;QACF,CAAC;;IAED,OACE,aAAA,GAAA,IAAA,6KAAA,EAAC,qLAAA,CAAU,MAAA,EAAV;QACC,MAAK;QACL,UAAU,CAAC;QACV,GAAG,KAAA;QACJ;QACA,aAAS,uLAAA,EAAqB,MAAM,OAAA,EAAS,MAAM;YACjD,qBAAA,+BAAA,WAAW;QACb,CAAC;IAAA;AAGP,CAAC;AAED,+BAA+B,WAAA,GAAc","debugId":null}},
    {"offset": {"line": 7322, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/primitives/actionBar/ActionBarFeedbackPositive.tsx"],"sourcesContent":["\"use client\";\n\nimport { forwardRef, useCallback } from \"react\";\nimport { ActionButtonProps } from \"../../utils/createActionButton\";\nimport { composeEventHandlers } from \"@radix-ui/primitive\";\nimport { useAssistantState, useAssistantApi } from \"../../context\";\nimport { Primitive } from \"@radix-ui/react-primitive\";\n\nconst useActionBarFeedbackPositive = () => {\n  const api = useAssistantApi();\n\n  const callback = useCallback(() => {\n    api.message().submitFeedback({ type: \"positive\" });\n  }, [api]);\n\n  return callback;\n};\n\nexport namespace ActionBarPrimitiveFeedbackPositive {\n  export type Element = HTMLButtonElement;\n  export type Props = ActionButtonProps<typeof useActionBarFeedbackPositive>;\n}\n\nexport const ActionBarPrimitiveFeedbackPositive = forwardRef<\n  ActionBarPrimitiveFeedbackPositive.Element,\n  ActionBarPrimitiveFeedbackPositive.Props\n>(({ onClick, disabled, ...props }, forwardedRef) => {\n  const isSubmitted = useAssistantState(\n    (s) => s.message.submittedFeedback?.type === \"positive\",\n  );\n  const callback = useActionBarFeedbackPositive();\n  return (\n    <Primitive.button\n      type=\"button\"\n      {...(isSubmitted ? { \"data-submitted\": \"true\" } : {})}\n      {...props}\n      ref={forwardedRef}\n      disabled={disabled || !callback}\n      onClick={composeEventHandlers(onClick, () => {\n        callback?.();\n      })}\n    />\n  );\n});\n\nActionBarPrimitiveFeedbackPositive.displayName =\n  \"ActionBarPrimitive.FeedbackPositive\";\n"],"names":[],"mappings":";;;;;AAEA,SAAS,YAAY,mBAAmB;AAExC,SAAS,4BAA4B;;AACrC,SAAS,mBAAmB,uBAAuB;AACnD,SAAS,iBAAiB;AA0BtB;;;;;;;AAxBJ,IAAM,+BAA+B,MAAM;IACzC,MAAM,UAAM,mNAAA,CAAgB;IAE5B,MAAM,eAAW,4KAAA;8DAAY,MAAM;YACjC,IAAI,OAAA,CAAQ,EAAE,cAAA,CAAe;gBAAE,MAAM;YAAW,CAAC;QACnD;6DAAG;QAAC,GAAG;KAAC;IAER,OAAO;AACT;AAOO,IAAM,yCAAqC,2KAAA,EAGhD,QAAkC,iBAAiB;QAAlD,EAAE,OAAA,EAAS,QAAA,EAAU,GAAG,MAAM,CAAA;IAC/B,MAAM,kBAAc,4NAAA;6EAClB,CAAC;;mBAAM,mCAAE,OAAA,CAAQ,iBAAA,8FAAmB,IAAA,MAAS;;;IAE/C,MAAM,WAAW,6BAA6B;IAC9C,OACE,aAAA,GAAA,IAAA,6KAAA,EAAC,qLAAA,CAAU,MAAA,EAAV;QACC,MAAK;QACJ,GAAI,cAAc;YAAE,kBAAkB;QAAO,IAAI,CAAC,CAAA;QAClD,GAAG,KAAA;QACJ,KAAK;QACL,UAAU,YAAY,CAAC;QACvB,aAAS,uLAAA,EAAqB,SAAS,MAAM;YAC3C,qBAAA,+BAAA,WAAW;QACb,CAAC;IAAA;AAGP,CAAC;AAED,mCAAmC,WAAA,GACjC","debugId":null}},
    {"offset": {"line": 7381, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/primitives/actionBar/ActionBarFeedbackNegative.tsx"],"sourcesContent":["\"use client\";\n\nimport { forwardRef } from \"react\";\nimport { ActionButtonProps } from \"../../utils/createActionButton\";\nimport { composeEventHandlers } from \"@radix-ui/primitive\";\nimport { Primitive } from \"@radix-ui/react-primitive\";\nimport { useCallback } from \"react\";\nimport { useAssistantState, useAssistantApi } from \"../../context\";\n\nconst useActionBarFeedbackNegative = () => {\n  const api = useAssistantApi();\n\n  const callback = useCallback(() => {\n    api.message().submitFeedback({ type: \"negative\" });\n  }, [api]);\n\n  return callback;\n};\n\nexport namespace ActionBarPrimitiveFeedbackNegative {\n  export type Element = HTMLButtonElement;\n  export type Props = ActionButtonProps<typeof useActionBarFeedbackNegative>;\n}\n\nexport const ActionBarPrimitiveFeedbackNegative = forwardRef<\n  ActionBarPrimitiveFeedbackNegative.Element,\n  ActionBarPrimitiveFeedbackNegative.Props\n>(({ onClick, disabled, ...props }, forwardedRef) => {\n  const isSubmitted = useAssistantState(\n    (s) => s.message.submittedFeedback?.type === \"negative\",\n  );\n  const callback = useActionBarFeedbackNegative();\n  return (\n    <Primitive.button\n      type=\"button\"\n      {...(isSubmitted ? { \"data-submitted\": \"true\" } : {})}\n      {...props}\n      ref={forwardedRef}\n      disabled={disabled || !callback}\n      onClick={composeEventHandlers(onClick, () => {\n        callback?.();\n      })}\n    />\n  );\n});\n\nActionBarPrimitiveFeedbackNegative.displayName =\n  \"ActionBarPrimitive.FeedbackNegative\";\n"],"names":[],"mappings":";;;;;AAEA,SAAS,kBAAkB;AAE3B,SAAS,4BAA4B;AACrC,SAAS,iBAAiB;;AAE1B,SAAS,mBAAmB,uBAAuB;AA0B/C;;;;;;;;AAxBJ,IAAM,+BAA+B,MAAM;IACzC,MAAM,UAAM,mNAAA,CAAgB;IAE5B,MAAM,eAAW,4KAAA;8DAAY,MAAM;YACjC,IAAI,OAAA,CAAQ,EAAE,cAAA,CAAe;gBAAE,MAAM;YAAW,CAAC;QACnD;6DAAG;QAAC,GAAG;KAAC;IAER,OAAO;AACT;AAOO,IAAM,yCAAqC,2KAAA,EAGhD,QAAkC,iBAAiB;QAAlD,EAAE,OAAA,EAAS,QAAA,EAAU,GAAG,MAAM,CAAA;IAC/B,MAAM,kBAAc,4NAAA;6EAClB,CAAC;;mBAAM,mCAAE,OAAA,CAAQ,iBAAA,8FAAmB,IAAA,MAAS;;;IAE/C,MAAM,WAAW,6BAA6B;IAC9C,OACE,aAAA,GAAA,IAAA,6KAAA,EAAC,qLAAA,CAAU,MAAA,EAAV;QACC,MAAK;QACJ,GAAI,cAAc;YAAE,kBAAkB;QAAO,IAAI,CAAC,CAAA;QAClD,GAAG,KAAA;QACJ,KAAK;QACL,UAAU,YAAY,CAAC;QACvB,aAAS,uLAAA,EAAqB,SAAS,MAAM;YAC3C,qBAAA,+BAAA,WAAW;QACb,CAAC;IAAA;AAGP,CAAC;AAED,mCAAmC,WAAA,GACjC","debugId":null}},
    {"offset": {"line": 7441, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/primitives/actionBar/index.ts"],"sourcesContent":["export { ActionBarPrimitiveRoot as Root } from \"./ActionBarRoot\";\nexport { ActionBarPrimitiveCopy as Copy } from \"./ActionBarCopy\";\nexport { ActionBarPrimitiveReload as Reload } from \"./ActionBarReload\";\nexport { ActionBarPrimitiveEdit as Edit } from \"./ActionBarEdit\";\nexport { ActionBarPrimitiveSpeak as Speak } from \"./ActionBarSpeak\";\nexport { ActionBarPrimitiveStopSpeaking as StopSpeaking } from \"./ActionBarStopSpeaking\";\nexport { ActionBarPrimitiveFeedbackPositive as FeedbackPositive } from \"./ActionBarFeedbackPositive\";\nexport { ActionBarPrimitiveFeedbackNegative as FeedbackNegative } from \"./ActionBarFeedbackNegative\";\n"],"names":[],"mappings":";;AAAA,SAAmC,8BAAY;AAC/C,SAAmC,8BAAY;AAC/C,SAAqC,gCAAc;AACnD,SAAmC,8BAAY;AAC/C,SAAoC,+BAAa;AACjD,SAA2C,sCAAoB;AAC/D,SAA+C,0CAAwB;AACvE,SAA+C,0CAAwB","debugId":null}},
    {"offset": {"line": 7505, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/primitives/branchPicker/BranchPickerNext.tsx"],"sourcesContent":["\"use client\";\n\nimport {\n  ActionButtonElement,\n  ActionButtonProps,\n  createActionButton,\n} from \"../../utils/createActionButton\";\nimport { useCallback } from \"react\";\nimport { useAssistantState, useAssistantApi } from \"../../context\";\n\nconst useBranchPickerNext = () => {\n  const api = useAssistantApi();\n  const disabled = useAssistantState(\n    ({ message }) => message.branchNumber >= message.branchCount,\n  );\n\n  const callback = useCallback(() => {\n    api.message().switchToBranch({ position: \"next\" });\n  }, [api]);\n\n  if (disabled) return null;\n  return callback;\n};\n\nexport namespace BranchPickerPrimitiveNext {\n  export type Element = ActionButtonElement;\n  /**\n   * Props for the BranchPickerPrimitive.Next component.\n   * Inherits all button element props and action button functionality.\n   */\n  export type Props = ActionButtonProps<typeof useBranchPickerNext>;\n}\n\n/**\n * A button component that navigates to the next branch in the message tree.\n *\n * This component automatically handles switching to the next available branch\n * and is disabled when there are no more branches to navigate to.\n *\n * @example\n * ```tsx\n * <BranchPickerPrimitive.Next>\n *   Next →\n * </BranchPickerPrimitive.Next>\n * ```\n */\nexport const BranchPickerPrimitiveNext = createActionButton(\n  \"BranchPickerPrimitive.Next\",\n  useBranchPickerNext,\n);\n"],"names":[],"mappings":";;;;;AAEA;AAKA,SAAS,mBAAmB;;AAC5B,SAAS,mBAAmB,uBAAuB;;;;;AAEnD,IAAM,sBAAsB,MAAM;IAChC,MAAM,UAAM,mNAAA,CAAgB;IAC5B,MAAM,eAAW,4NAAA;2DACf;gBAAC,EAAE,OAAA,CAAQ,CAAA;mBAAM,QAAQ,YAAA,IAAgB,QAAQ,WAAA;;;IAGnD,MAAM,eAAW,4KAAA;qDAAY,MAAM;YACjC,IAAI,OAAA,CAAQ,EAAE,cAAA,CAAe;gBAAE,UAAU;YAAO,CAAC;QACnD;oDAAG;QAAC,GAAG;KAAC;IAER,IAAI,SAAU,CAAA,OAAO;IACrB,OAAO;AACT;AAwBO,IAAM,gCAA4B,0MAAA,EACvC,8BACA","debugId":null}},
    {"offset": {"line": 7545, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/primitives/branchPicker/BranchPickerPrevious.tsx"],"sourcesContent":["\"use client\";\n\nimport {\n  ActionButtonElement,\n  ActionButtonProps,\n  createActionButton,\n} from \"../../utils/createActionButton\";\nimport { useCallback } from \"react\";\nimport { useAssistantState, useAssistantApi } from \"../../context\";\n\n/**\n * Hook that provides navigation to the previous branch functionality.\n *\n * This hook returns a callback function that switches to the previous branch\n * in the message branch tree, or null if there is no previous branch available.\n *\n * @returns A previous branch callback function, or null if navigation is disabled\n *\n * @example\n * ```tsx\n * function CustomPreviousButton() {\n *   const previous = useBranchPickerPrevious();\n *\n *   return (\n *     <button onClick={previous} disabled={!previous}>\n *       {previous ? \"Previous Branch\" : \"No Previous Branch\"}\n *     </button>\n *   );\n * }\n * ```\n */\nconst useBranchPickerPrevious = () => {\n  const api = useAssistantApi();\n  const disabled = useAssistantState(\n    ({ message }) => message.branchNumber <= 1,\n  );\n\n  const callback = useCallback(() => {\n    api.message().switchToBranch({ position: \"previous\" });\n  }, [api]);\n\n  if (disabled) return null;\n  return callback;\n};\n\nexport namespace BranchPickerPrimitivePrevious {\n  export type Element = ActionButtonElement;\n  /**\n   * Props for the BranchPickerPrimitive.Previous component.\n   * Inherits all button element props and action button functionality.\n   */\n  export type Props = ActionButtonProps<typeof useBranchPickerPrevious>;\n}\n\n/**\n * A button component that navigates to the previous branch in the message tree.\n *\n * This component automatically handles switching to the previous available branch\n * and is disabled when there are no previous branches to navigate to.\n *\n * @example\n * ```tsx\n * <BranchPickerPrimitive.Previous>\n *   ← Previous\n * </BranchPickerPrimitive.Previous>\n * ```\n */\nexport const BranchPickerPrimitivePrevious = createActionButton(\n  \"BranchPickerPrimitive.Previous\",\n  useBranchPickerPrevious,\n);\n"],"names":[],"mappings":";;;;;AAEA;AAKA,SAAS,mBAAmB;;AAC5B,SAAS,mBAAmB,uBAAuB;;;;;AAuBnD,IAAM,0BAA0B,MAAM;IACpC,MAAM,UAAM,mNAAA,CAAgB;IAC5B,MAAM,eAAW,4NAAA;+DACf;gBAAC,EAAE,OAAA,CAAQ,CAAA;mBAAM,QAAQ,YAAA,IAAgB;;;IAG3C,MAAM,eAAW,4KAAA;yDAAY,MAAM;YACjC,IAAI,OAAA,CAAQ,EAAE,cAAA,CAAe;gBAAE,UAAU;YAAW,CAAC;QACvD;wDAAG;QAAC,GAAG;KAAC;IAER,IAAI,SAAU,CAAA,OAAO;IACrB,OAAO;AACT;AAwBO,IAAM,oCAAgC,0MAAA,EAC3C,kCACA","debugId":null}},
    {"offset": {"line": 7585, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/primitives/branchPicker/BranchPickerCount.tsx"],"sourcesContent":["\"use client\";\n\nimport type { FC } from \"react\";\nimport { useAssistantState } from \"../../context\";\n\nconst useBranchPickerCount = () => {\n  const branchCount = useAssistantState(({ message }) => message.branchCount);\n  return branchCount;\n};\n\nexport namespace BranchPickerPrimitiveCount {\n  /**\n   * Props for the BranchPickerPrimitive.Count component.\n   * This component takes no props.\n   */\n  export type Props = Record<string, never>;\n}\n\n/**\n * A component that displays the total number of branches for the current message.\n *\n * This component renders the branch count as plain text, useful for showing\n * users how many alternative responses are available.\n *\n * @example\n * ```tsx\n * <div>\n *   Branch <BranchPickerPrimitive.Count /> of {totalBranches}\n * </div>\n * ```\n */\nexport const BranchPickerPrimitiveCount: FC<\n  BranchPickerPrimitiveCount.Props\n> = () => {\n  const branchCount = useBranchPickerCount();\n  return <>{branchCount}</>;\n};\n\nBranchPickerPrimitiveCount.displayName = \"BranchPickerPrimitive.Count\";\n"],"names":[],"mappings":";;;;;AAGA,SAAS,yBAAyB;AAgCzB;;;;AA9BT,IAAM,uBAAuB,MAAM;IACjC,MAAM,kBAAc,4NAAA;+DAAkB;gBAAC,EAAE,OAAA,CAAQ,CAAA;mBAAM,QAAQ,WAAW;;;IAC1E,OAAO;AACT;AAuBO,IAAM,6BAET,MAAM;IACR,MAAM,cAAc,qBAAqB;IACzC,OAAO,aAAA,GAAA,IAAA,6KAAA,EAAA,kLAAA,EAAA;QAAG,UAAA;IAAA,CAAY;AACxB;AAEA,2BAA2B,WAAA,GAAc","debugId":null}},
    {"offset": {"line": 7617, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/primitives/branchPicker/BranchPickerNumber.tsx"],"sourcesContent":["\"use client\";\n\nimport type { FC } from \"react\";\nimport { useAssistantState } from \"../../context\";\n\nconst useBranchPickerNumber = () => {\n  const branchNumber = useAssistantState(({ message }) => message.branchNumber);\n  return branchNumber;\n};\n\nexport namespace BranchPickerPrimitiveNumber {\n  export type Props = Record<string, never>;\n}\n\nexport const BranchPickerPrimitiveNumber: FC<\n  BranchPickerPrimitiveNumber.Props\n> = () => {\n  const branchNumber = useBranchPickerNumber();\n  return <>{branchNumber}</>;\n};\n\nBranchPickerPrimitiveNumber.displayName = \"BranchPickerPrimitive.Number\";\n"],"names":[],"mappings":";;;;;AAGA,SAAS,yBAAyB;AAezB;;;;AAbT,IAAM,wBAAwB,MAAM;IAClC,MAAM,mBAAe,4NAAA;iEAAkB;gBAAC,EAAE,OAAA,CAAQ,CAAA;mBAAM,QAAQ,YAAY;;;IAC5E,OAAO;AACT;AAMO,IAAM,8BAET,MAAM;IACR,MAAM,eAAe,sBAAsB;IAC3C,OAAO,aAAA,GAAA,IAAA,6KAAA,EAAA,kLAAA,EAAA;QAAG,UAAA;IAAA,CAAa;AACzB;AAEA,4BAA4B,WAAA,GAAc","debugId":null}},
    {"offset": {"line": 7649, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/primitives/message/MessageIf.tsx"],"sourcesContent":["\"use client\";\n\nimport type { FC, PropsWithChildren } from \"react\";\nimport { useAssistantState } from \"../../context\";\nimport type { RequireAtLeastOne } from \"../../utils/RequireAtLeastOne\";\n\ntype MessageIfFilters = {\n  user: boolean | undefined;\n  assistant: boolean | undefined;\n  system: boolean | undefined;\n  hasBranches: boolean | undefined;\n  copied: boolean | undefined;\n  lastOrHover: boolean | undefined;\n  last: boolean | undefined;\n  speaking: boolean | undefined;\n  hasAttachments: boolean | undefined;\n  hasContent: boolean | undefined;\n  submittedFeedback: \"positive\" | \"negative\" | null | undefined;\n};\ntype UseMessageIfProps = RequireAtLeastOne<MessageIfFilters>;\n\nconst useMessageIf = (props: UseMessageIfProps) => {\n  return useAssistantState(({ message }) => {\n    const {\n      role,\n      attachments,\n      parts,\n      branchCount,\n      isLast,\n      speech,\n      submittedFeedback,\n      isCopied,\n      isHovering,\n    } = message;\n\n    if (props.hasBranches === true && branchCount < 2) return false;\n\n    if (props.user && role !== \"user\") return false;\n    if (props.assistant && role !== \"assistant\") return false;\n    if (props.system && role !== \"system\") return false;\n\n    if (props.lastOrHover === true && !isHovering && !isLast) return false;\n    if (props.last !== undefined && props.last !== isLast) return false;\n\n    if (props.copied === true && !isCopied) return false;\n    if (props.copied === false && isCopied) return false;\n\n    if (props.speaking === true && speech == null) return false;\n    if (props.speaking === false && speech != null) return false;\n\n    if (\n      props.hasAttachments === true &&\n      (role !== \"user\" || !attachments?.length)\n    )\n      return false;\n    if (\n      props.hasAttachments === false &&\n      role === \"user\" &&\n      !!attachments?.length\n    )\n      return false;\n\n    if (props.hasContent === true && parts.length === 0) return false;\n    if (props.hasContent === false && parts.length > 0) return false;\n\n    if (\n      props.submittedFeedback !== undefined &&\n      (submittedFeedback?.type ?? null) !== props.submittedFeedback\n    )\n      return false;\n\n    return true;\n  });\n};\n\nexport namespace MessagePrimitiveIf {\n  export type Props = PropsWithChildren<UseMessageIfProps>;\n}\n\nexport const MessagePrimitiveIf: FC<MessagePrimitiveIf.Props> = ({\n  children,\n  ...query\n}) => {\n  const result = useMessageIf(query);\n  return result ? children : null;\n};\n\nMessagePrimitiveIf.displayName = \"MessagePrimitive.If\";\n"],"names":[],"mappings":";;;;;AAGA,SAAS,yBAAyB;;;AAkBlC,IAAM,eAAe,CAAC,UAA6B;IACjD,WAAO,4NAAA;0CAAkB;gBAAC,EAAE,OAAA,CAAQ,CAAA,KAAM;YACxC,MAAM,EACJ,IAAA,EACA,WAAA,EACA,KAAA,EACA,WAAA,EACA,MAAA,EACA,MAAA,EACA,iBAAA,EACA,QAAA,EACA,UAAA,EACF,GAAI;YAEJ,IAAI,MAAM,WAAA,KAAgB,QAAQ,cAAc,EAAG,CAAA,OAAO;YAE1D,IAAI,MAAM,IAAA,IAAQ,SAAS,OAAQ,CAAA,OAAO;YAC1C,IAAI,MAAM,SAAA,IAAa,SAAS,YAAa,CAAA,OAAO;YACpD,IAAI,MAAM,MAAA,IAAU,SAAS,SAAU,CAAA,OAAO;YAE9C,IAAI,MAAM,WAAA,KAAgB,QAAQ,CAAC,cAAc,CAAC,OAAQ,CAAA,OAAO;YACjE,IAAI,MAAM,IAAA,KAAS,KAAA,KAAa,MAAM,IAAA,KAAS,OAAQ,CAAA,OAAO;YAE9D,IAAI,MAAM,MAAA,KAAW,QAAQ,CAAC,SAAU,CAAA,OAAO;YAC/C,IAAI,MAAM,MAAA,KAAW,SAAS,SAAU,CAAA,OAAO;YAE/C,IAAI,MAAM,QAAA,KAAa,QAAQ,UAAU,KAAM,CAAA,OAAO;YACtD,IAAI,MAAM,QAAA,KAAa,SAAS,UAAU,KAAM,CAAA,OAAO;YAEvD,IACE,MAAM,cAAA,KAAmB,QAAA,CACxB,SAAS,UAAU,4DAAC,YAAa,MAAA,CAAA,GAElC,OAAO;YACT,IACE,MAAM,cAAA,KAAmB,SACzB,SAAS,UACT,CAAC,0BAAC,8CAAa,MAAA,GAEf,OAAO;YAET,IAAI,MAAM,UAAA,KAAe,QAAQ,MAAM,MAAA,KAAW,EAAG,CAAA,OAAO;YAC5D,IAAI,MAAM,UAAA,KAAe,SAAS,MAAM,MAAA,GAAS,EAAG,CAAA,OAAO;gBAIxD;YAFH,IACE,MAAM,iBAAA,KAAsB,KAAA,KAAA,oHACR,IAAA,6EAAQ,IAAA,MAAU,MAAM,iBAAA,EAE5C,OAAO;YAET,OAAO;QACT,CAAC;;AACH;AAMO,IAAM,qBAAmD;QAAC,EAC/D,QAAA,EACA,GAAG,OACL,KAAM;IACJ,MAAM,SAAS,aAAa,KAAK;IACjC,OAAO,SAAS,WAAW;AAC7B;AAEA,mBAAmB,WAAA,GAAc","debugId":null}},
    {"offset": {"line": 7703, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/primitives/branchPicker/BranchPickerRoot.tsx"],"sourcesContent":["\"use client\";\n\nimport { Primitive } from \"@radix-ui/react-primitive\";\nimport { type ComponentRef, forwardRef, ComponentPropsWithoutRef } from \"react\";\nimport { If } from \"../message\";\n\nexport namespace BranchPickerPrimitiveRoot {\n  export type Element = ComponentRef<typeof Primitive.div>;\n  export type Props = ComponentPropsWithoutRef<typeof Primitive.div> & {\n    /**\n     * Whether to hide the branch picker when there's only one branch available.\n     * When true, the component will only render when multiple branches exist.\n     * @default false\n     */\n    hideWhenSingleBranch?: boolean | undefined;\n  };\n}\n\n/**\n * The root container for branch picker components.\n *\n * This component provides a container for branch navigation controls,\n * with optional conditional rendering based on the number of available branches.\n * It integrates with the message branching system to allow users to navigate\n * between different response variations.\n *\n * @example\n * ```tsx\n * <BranchPickerPrimitive.Root hideWhenSingleBranch={true}>\n *   <BranchPickerPrimitive.Previous />\n *   <BranchPickerPrimitive.Count />\n *   <BranchPickerPrimitive.Next />\n * </BranchPickerPrimitive.Root>\n * ```\n */\nexport const BranchPickerPrimitiveRoot = forwardRef<\n  BranchPickerPrimitiveRoot.Element,\n  BranchPickerPrimitiveRoot.Props\n>(({ hideWhenSingleBranch, ...rest }, ref) => {\n  return (\n    <If hasBranches={hideWhenSingleBranch ? true : undefined}>\n      <Primitive.div {...rest} ref={ref} />\n    </If>\n  );\n});\n\nBranchPickerPrimitiveRoot.displayName = \"BranchPickerPrimitive.Root\";\n"],"names":[],"mappings":";;;;;AAEA,SAAS,iBAAiB;AAC1B,SAA4B,kBAA4C;AACxE,SAAS,UAAU;AAqCb;;;;;;AANC,IAAM,gCAA4B,2KAAA,EAGvC,QAAoC,QAAQ;QAA3C,EAAE,oBAAA,EAAsB,GAAG,KAAK,CAAA;IACjC,OACE,aAAA,GAAA,IAAA,6KAAA,EAAC,6OAAA,EAAA;QAAG,aAAa,uBAAuB,OAAO,KAAA;QAC7C,UAAA,aAAA,GAAA,IAAA,6KAAA,EAAC,qLAAA,CAAU,GAAA,EAAV;YAAe,GAAG,IAAA;YAAM;QAAA,CAAU;IAAA,CACrC;AAEJ,CAAC;AAED,0BAA0B,WAAA,GAAc","debugId":null}},
    {"offset": {"line": 7734, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/primitives/branchPicker/index.ts"],"sourcesContent":["export { BranchPickerPrimitiveNext as Next } from \"./BranchPickerNext\";\nexport { BranchPickerPrimitivePrevious as Previous } from \"./BranchPickerPrevious\";\nexport { BranchPickerPrimitiveCount as Count } from \"./BranchPickerCount\";\nexport { BranchPickerPrimitiveNumber as Number } from \"./BranchPickerNumber\";\nexport { BranchPickerPrimitiveRoot as Root } from \"./BranchPickerRoot\";\n"],"names":[],"mappings":";;AAAA,SAAsC,iCAAY;AAClD,SAA0C,qCAAgB;AAC1D,SAAuC,kCAAa;AACpD,SAAwC,mCAAc;AACtD,SAAsC,iCAAY","debugId":null}},
    {"offset": {"line": 7783, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/primitives/composer/ComposerSend.tsx"],"sourcesContent":["\"use client\";\n\nimport {\n  ActionButtonElement,\n  ActionButtonProps,\n  createActionButton,\n} from \"../../utils/createActionButton\";\nimport { useCallback } from \"react\";\nimport { useAssistantState, useAssistantApi } from \"../../context\";\n\nexport const useComposerSend = () => {\n  const api = useAssistantApi();\n\n  const disabled = useAssistantState(\n    (s) => s.thread.isRunning || !s.composer.isEditing || s.composer.isEmpty,\n  );\n\n  const callback = useCallback(() => {\n    api.composer().send();\n  }, [api]);\n\n  if (disabled) return null;\n  return callback;\n};\n\nexport namespace ComposerPrimitiveSend {\n  export type Element = ActionButtonElement;\n  /**\n   * Props for the ComposerPrimitive.Send component.\n   * Inherits all button element props and action button functionality.\n   */\n  export type Props = ActionButtonProps<typeof useComposerSend>;\n}\n\n/**\n * A button component that sends the current message in the composer.\n *\n * This component automatically handles the send functionality and is disabled\n * when sending is not available (e.g., when the thread is running, the composer\n * is empty, or not in editing mode).\n *\n * @example\n * ```tsx\n * <ComposerPrimitive.Send>\n *   Send Message\n * </ComposerPrimitive.Send>\n * ```\n */\nexport const ComposerPrimitiveSend = createActionButton(\n  \"ComposerPrimitive.Send\",\n  useComposerSend,\n);\n"],"names":[],"mappings":";;;;;;;AAEA;AAKA,SAAS,mBAAmB;;AAC5B,SAAS,mBAAmB,uBAAuB;;;;;AAE5C,IAAM,kBAAkB,MAAM;IACnC,MAAM,UAAM,mNAAA,CAAgB;IAE5B,MAAM,eAAW,4NAAA;uDACf,CAAC,IAAM,EAAE,MAAA,CAAO,SAAA,IAAa,CAAC,EAAE,QAAA,CAAS,SAAA,IAAa,EAAE,QAAA,CAAS,OAAA;;IAGnE,MAAM,eAAW,4KAAA;iDAAY,MAAM;YACjC,IAAI,QAAA,CAAS,EAAE,IAAA,CAAK;QACtB;gDAAG;QAAC,GAAG;KAAC;IAER,IAAI,SAAU,CAAA,OAAO;IACrB,OAAO;AACT;AAyBO,IAAM,4BAAwB,0MAAA,EACnC,0BACA","debugId":null}},
    {"offset": {"line": 7820, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/primitives/composer/ComposerRoot.tsx"],"sourcesContent":["\"use client\";\n\nimport { composeEventHandlers } from \"@radix-ui/primitive\";\nimport { Primitive } from \"@radix-ui/react-primitive\";\nimport {\n  type ComponentRef,\n  type FormEvent,\n  forwardRef,\n  ComponentPropsWithoutRef,\n} from \"react\";\nimport { useComposerSend } from \"./ComposerSend\";\n\nexport namespace ComposerPrimitiveRoot {\n  export type Element = ComponentRef<typeof Primitive.form>;\n  /**\n   * Props for the ComposerPrimitive.Root component.\n   * Accepts all standard form element props.\n   */\n  export type Props = ComponentPropsWithoutRef<typeof Primitive.form>;\n}\n\n/**\n * The root form container for message composition.\n *\n * This component provides a form wrapper that handles message submission when the form\n * is submitted (e.g., via Enter key or submit button). It automatically prevents the\n * default form submission and triggers the composer's send functionality.\n *\n * @example\n * ```tsx\n * <ComposerPrimitive.Root>\n *   <ComposerPrimitive.Input placeholder=\"Type your message...\" />\n *   <ComposerPrimitive.Send>Send</ComposerPrimitive.Send>\n * </ComposerPrimitive.Root>\n * ```\n */\nexport const ComposerPrimitiveRoot = forwardRef<\n  ComposerPrimitiveRoot.Element,\n  ComposerPrimitiveRoot.Props\n>(({ onSubmit, ...rest }, forwardedRef) => {\n  const send = useComposerSend();\n\n  const handleSubmit = (e: FormEvent) => {\n    e.preventDefault();\n\n    if (!send) return;\n    send();\n  };\n\n  return (\n    <Primitive.form\n      {...rest}\n      ref={forwardedRef}\n      onSubmit={composeEventHandlers(onSubmit, handleSubmit)}\n    />\n  );\n});\n\nComposerPrimitiveRoot.displayName = \"ComposerPrimitive.Root\";\n"],"names":[],"mappings":";;;;;AAEA,SAAS,4BAA4B;AACrC,SAAS,iBAAiB;AAC1B;AAMA,SAAS,uBAAuB;AAwC5B;;;;;;;AAdG,IAAM,4BAAwB,2KAAA,EAGnC,QAAwB,iBAAiB;QAAxC,EAAE,QAAA,EAAU,GAAG,KAAK,CAAA;IACrB,MAAM,WAAO,kNAAA,CAAgB;IAE7B,MAAM,eAAe,CAAC,MAAiB;QACrC,EAAE,cAAA,CAAe;QAEjB,IAAI,CAAC,KAAM,CAAA;QACX,KAAK;IACP;IAEA,OACE,aAAA,GAAA,IAAA,6KAAA,EAAC,qLAAA,CAAU,IAAA,EAAV;QACE,GAAG,IAAA;QACJ,KAAK;QACL,cAAU,uLAAA,EAAqB,UAAU,YAAY;IAAA;AAG3D,CAAC;AAED,sBAAsB,WAAA,GAAc","debugId":null}},
    {"offset": {"line": 7857, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/utils/hooks/useOnScrollToBottom.tsx"],"sourcesContent":["\"use client\";\n\nimport { useCallbackRef } from \"@radix-ui/react-use-callback-ref\";\nimport { useEffect } from \"react\";\nimport { useThreadViewport } from \"../../context/react/ThreadViewportContext\";\n\nexport const useOnScrollToBottom = (callback: () => void) => {\n  const callbackRef = useCallbackRef(callback);\n  const onScrollToBottom = useThreadViewport((vp) => vp.onScrollToBottom);\n\n  useEffect(() => {\n    return onScrollToBottom(callbackRef);\n  }, [onScrollToBottom, callbackRef]);\n};\n"],"names":[],"mappings":";;;;;AAEA,SAAS,sBAAsB;AAC/B,SAAS,iBAAiB;AAC1B,SAAS,yBAAyB;;;;;AAE3B,IAAM,sBAAsB,CAAC,aAAyB;IAC3D,MAAM,kBAAc,uMAAA,EAAe,QAAQ;IAC3C,MAAM,uBAAmB,uNAAA;mEAAkB,CAAC,KAAO,GAAG,gBAAgB;;IAEtE,IAAA,0KAAA;yCAAU,MAAM;YACd,OAAO,iBAAiB,WAAW;QACrC;wCAAG;QAAC;QAAkB,WAAW;KAAC;AACpC","debugId":null}},
    {"offset": {"line": 7889, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/primitives/composer/ComposerInput.tsx"],"sourcesContent":["\"use client\";\n\nimport { composeEventHandlers } from \"@radix-ui/primitive\";\nimport { useComposedRefs } from \"@radix-ui/react-compose-refs\";\nimport { Slot } from \"@radix-ui/react-slot\";\nimport {\n  ClipboardEvent,\n  type KeyboardEvent,\n  forwardRef,\n  useCallback,\n  useEffect,\n  useRef,\n} from \"react\";\nimport TextareaAutosize, {\n  type TextareaAutosizeProps,\n} from \"react-textarea-autosize\";\nimport { useEscapeKeydown } from \"@radix-ui/react-use-escape-keydown\";\nimport { useOnScrollToBottom } from \"../../utils/hooks/useOnScrollToBottom\";\nimport { useAssistantState, useAssistantApi } from \"../../context\";\n\nexport namespace ComposerPrimitiveInput {\n  export type Element = HTMLTextAreaElement;\n  export type Props = TextareaAutosizeProps & {\n    /**\n     * Whether to render as a child component using Slot.\n     * When true, the component will merge its props with its child.\n     */\n    asChild?: boolean | undefined;\n    /**\n     * Whether to submit the message when Enter is pressed (without Shift).\n     * @default true\n     */\n    submitOnEnter?: boolean | undefined;\n    /**\n     * Whether to cancel message composition when Escape is pressed.\n     * @default true\n     */\n    cancelOnEscape?: boolean | undefined;\n    /**\n     * Whether to automatically focus the input when a new run starts.\n     * @default true\n     */\n    unstable_focusOnRunStart?: boolean | undefined;\n    /**\n     * Whether to automatically focus the input when scrolling to bottom.\n     * @default true\n     */\n    unstable_focusOnScrollToBottom?: boolean | undefined;\n    /**\n     * Whether to automatically focus the input when switching threads.\n     * @default true\n     */\n    unstable_focusOnThreadSwitched?: boolean | undefined;\n    /**\n     * Whether to automatically add pasted files as attachments.\n     * @default true\n     */\n    addAttachmentOnPaste?: boolean | undefined;\n  };\n}\n\n/**\n * A text input component for composing messages.\n *\n * This component provides a rich text input experience with automatic resizing,\n * keyboard shortcuts, file paste support, and intelligent focus management.\n * It integrates with the composer context to manage message state and submission.\n *\n * @example\n * ```tsx\n * <ComposerPrimitive.Input\n *   placeholder=\"Type your message...\"\n *   submitOnEnter={true}\n *   addAttachmentOnPaste={true}\n * />\n * ```\n */\nexport const ComposerPrimitiveInput = forwardRef<\n  ComposerPrimitiveInput.Element,\n  ComposerPrimitiveInput.Props\n>(\n  (\n    {\n      autoFocus = false,\n      asChild,\n      disabled: disabledProp,\n      onChange,\n      onKeyDown,\n      onPaste,\n      submitOnEnter = true,\n      cancelOnEscape = true,\n      unstable_focusOnRunStart = true,\n      unstable_focusOnScrollToBottom = true,\n      unstable_focusOnThreadSwitched = true,\n      addAttachmentOnPaste = true,\n      ...rest\n    },\n    forwardedRef,\n  ) => {\n    const api = useAssistantApi();\n\n    const value = useAssistantState(({ composer }) => {\n      if (!composer.isEditing) return \"\";\n      return composer.text;\n    });\n\n    const Component = asChild ? Slot : TextareaAutosize;\n\n    const isDisabled =\n      useAssistantState(({ thread }) => thread.isDisabled) || disabledProp;\n    const textareaRef = useRef<HTMLTextAreaElement>(null);\n    const ref = useComposedRefs(forwardedRef, textareaRef);\n\n    useEscapeKeydown((e) => {\n      if (!cancelOnEscape) return;\n\n      const composer = api.composer();\n      if (composer.getState().canCancel) {\n        composer.cancel();\n        e.preventDefault();\n      }\n    });\n\n    const handleKeyPress = (e: KeyboardEvent) => {\n      if (isDisabled || !submitOnEnter) return;\n\n      // ignore IME composition events\n      if (e.nativeEvent.isComposing) return;\n\n      if (e.key === \"Enter\" && e.shiftKey === false) {\n        const isRunning = api.thread().getState().isRunning;\n\n        if (!isRunning) {\n          e.preventDefault();\n\n          textareaRef.current?.closest(\"form\")?.requestSubmit();\n        }\n      }\n    };\n\n    const handlePaste = async (e: ClipboardEvent<HTMLTextAreaElement>) => {\n      if (!addAttachmentOnPaste) return;\n      const threadCapabilities = api.thread().getState().capabilities;\n      const files = Array.from(e.clipboardData?.files || []);\n\n      if (threadCapabilities.attachments && files.length > 0) {\n        try {\n          e.preventDefault();\n          await Promise.all(\n            files.map((file) => api.composer().addAttachment(file)),\n          );\n        } catch (error) {\n          console.error(\"Error adding attachment:\", error);\n        }\n      }\n    };\n\n    const autoFocusEnabled = autoFocus && !isDisabled;\n    const focus = useCallback(() => {\n      const textarea = textareaRef.current;\n      if (!textarea || !autoFocusEnabled) return;\n\n      textarea.focus({ preventScroll: true });\n      textarea.setSelectionRange(textarea.value.length, textarea.value.length);\n    }, [autoFocusEnabled]);\n\n    useEffect(() => focus(), [focus]);\n\n    useOnScrollToBottom(() => {\n      if (\n        api.composer().getState().type === \"thread\" &&\n        unstable_focusOnScrollToBottom\n      ) {\n        focus();\n      }\n    });\n\n    useEffect(() => {\n      if (\n        api.composer().getState().type !== \"thread\" ||\n        !unstable_focusOnRunStart\n      )\n        return undefined;\n\n      return api.on(\"thread.run-start\", focus);\n    }, [unstable_focusOnRunStart, focus, api]);\n\n    useEffect(() => {\n      if (\n        api.composer().getState().type !== \"thread\" ||\n        !unstable_focusOnThreadSwitched\n      )\n        return undefined;\n\n      return api.on(\"thread-list-item.switched-to\", focus);\n    }, [unstable_focusOnThreadSwitched, focus, api]);\n\n    return (\n      <Component\n        name=\"input\"\n        value={value}\n        {...rest}\n        ref={ref as React.ForwardedRef<HTMLTextAreaElement>}\n        disabled={isDisabled}\n        onChange={composeEventHandlers(onChange, (e) => {\n          if (!api.composer().getState().isEditing) return;\n          api.composer().setText(e.target.value);\n          api.flushSync();\n        })}\n        onKeyDown={composeEventHandlers(onKeyDown, handleKeyPress)}\n        onPaste={composeEventHandlers(onPaste, handlePaste)}\n      />\n    );\n  },\n);\n\nComposerPrimitiveInput.displayName = \"ComposerPrimitive.Input\";\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 8036, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/primitives/composer/ComposerCancel.tsx"],"sourcesContent":["\"use client\";\n\nimport {\n  ActionButtonElement,\n  ActionButtonProps,\n  createActionButton,\n} from \"../../utils/createActionButton\";\nimport { useCallback } from \"react\";\nimport { useAssistantState, useAssistantApi } from \"../../context\";\n\nconst useComposerCancel = () => {\n  const api = useAssistantApi();\n  const disabled = useAssistantState(({ composer }) => !composer.canCancel);\n\n  const callback = useCallback(() => {\n    api.composer().cancel();\n  }, [api]);\n\n  if (disabled) return null;\n  return callback;\n};\n\nexport namespace ComposerPrimitiveCancel {\n  export type Element = ActionButtonElement;\n  /**\n   * Props for the ComposerPrimitive.Cancel component.\n   * Inherits all button element props and action button functionality.\n   */\n  export type Props = ActionButtonProps<typeof useComposerCancel>;\n}\n\n/**\n * A button component that cancels the current message composition.\n *\n * This component automatically handles the cancel functionality and is disabled\n * when canceling is not available.\n *\n * @example\n * ```tsx\n * <ComposerPrimitive.Cancel>\n *   Cancel\n * </ComposerPrimitive.Cancel>\n * ```\n */\nexport const ComposerPrimitiveCancel = createActionButton(\n  \"ComposerPrimitive.Cancel\",\n  useComposerCancel,\n);\n"],"names":[],"mappings":";;;;;AAEA;AAKA,SAAS,mBAAmB;;AAC5B,SAAS,mBAAmB,uBAAuB;;;;;AAEnD,IAAM,oBAAoB,MAAM;IAC9B,MAAM,UAAM,mNAAA,CAAgB;IAC5B,MAAM,eAAW,4NAAA;yDAAkB;gBAAC,EAAE,QAAA,CAAS,CAAA;mBAAM,CAAC,SAAS,SAAS;;;IAExE,MAAM,eAAW,4KAAA;mDAAY,MAAM;YACjC,IAAI,QAAA,CAAS,EAAE,MAAA,CAAO;QACxB;kDAAG;QAAC,GAAG;KAAC;IAER,IAAI,SAAU,CAAA,OAAO;IACrB,OAAO;AACT;AAwBO,IAAM,8BAA0B,0MAAA,EACrC,4BACA","debugId":null}},
    {"offset": {"line": 8074, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/primitives/composer/ComposerAddAttachment.tsx"],"sourcesContent":["\"use client\";\n\nimport {\n  ActionButtonElement,\n  ActionButtonProps,\n  createActionButton,\n} from \"../../utils/createActionButton\";\nimport { useCallback } from \"react\";\nimport { useAssistantState, useAssistantApi } from \"../../context\";\n\nconst useComposerAddAttachment = ({\n  multiple = true,\n}: {\n  /** allow selecting multiple files */\n  multiple?: boolean | undefined;\n} = {}) => {\n  const disabled = useAssistantState(({ composer }) => !composer.isEditing);\n  const api = useAssistantApi();\n\n  const callback = useCallback(() => {\n    const input = document.createElement(\"input\");\n    input.type = \"file\";\n    input.multiple = multiple;\n    input.hidden = true;\n\n    const attachmentAccept = api.composer().getState().attachmentAccept;\n    if (attachmentAccept !== \"*\") {\n      input.accept = attachmentAccept;\n    }\n\n    document.body.appendChild(input);\n\n    input.onchange = (e) => {\n      const fileList = (e.target as HTMLInputElement).files;\n      if (!fileList) return;\n      for (const file of fileList) {\n        api.composer().addAttachment(file);\n      }\n\n      document.body.removeChild(input);\n    };\n\n    input.oncancel = () => {\n      if (!input.files || input.files.length === 0) {\n        document.body.removeChild(input);\n      }\n    };\n\n    input.click();\n  }, [api, multiple]);\n\n  if (disabled) return null;\n  return callback;\n};\n\nexport namespace ComposerPrimitiveAddAttachment {\n  export type Element = ActionButtonElement;\n  export type Props = ActionButtonProps<typeof useComposerAddAttachment>;\n}\n\nexport const ComposerPrimitiveAddAttachment = createActionButton(\n  \"ComposerPrimitive.AddAttachment\",\n  useComposerAddAttachment,\n  [\"multiple\"],\n);\n"],"names":[],"mappings":";;;;;AAEA;AAKA,SAAS,mBAAmB;;AAC5B,SAAS,mBAAmB,uBAAuB;;;;;AAEnD,IAAM,2BAA2B;QAAC,EAChC,WAAW,IAAA,EACb,oEAGI,CAAC,MAAM;IACT,MAAM,eAAW,4NAAA;gEAAkB;gBAAC,EAAE,QAAA,CAAS,CAAA;mBAAM,CAAC,SAAS,SAAS;;;IACxE,MAAM,UAAM,mNAAA,CAAgB;IAE5B,MAAM,eAAW,4KAAA;0DAAY,MAAM;YACjC,MAAM,QAAQ,SAAS,aAAA,CAAc,OAAO;YAC5C,MAAM,IAAA,GAAO;YACb,MAAM,QAAA,GAAW;YACjB,MAAM,MAAA,GAAS;YAEf,MAAM,mBAAmB,IAAI,QAAA,CAAS,EAAE,QAAA,CAAS,EAAE,gBAAA;YACnD,IAAI,qBAAqB,KAAK;gBAC5B,MAAM,MAAA,GAAS;YACjB;YAEA,SAAS,IAAA,CAAK,WAAA,CAAY,KAAK;YAE/B,MAAM,QAAA;kEAAW,CAAC,MAAM;oBACtB,MAAM,WAAY,EAAE,MAAA,CAA4B,KAAA;oBAChD,IAAI,CAAC,SAAU,CAAA;oBACf,KAAA,MAAW,QAAQ,SAAU;wBAC3B,IAAI,QAAA,CAAS,EAAE,aAAA,CAAc,IAAI;oBACnC;oBAEA,SAAS,IAAA,CAAK,WAAA,CAAY,KAAK;gBACjC;;YAEA,MAAM,QAAA;kEAAW,MAAM;oBACrB,IAAI,CAAC,MAAM,KAAA,IAAS,MAAM,KAAA,CAAM,MAAA,KAAW,GAAG;wBAC5C,SAAS,IAAA,CAAK,WAAA,CAAY,KAAK;oBACjC;gBACF;;YAEA,MAAM,KAAA,CAAM;QACd;yDAAG;QAAC;QAAK,QAAQ;KAAC;IAElB,IAAI,SAAU,CAAA,OAAO;IACrB,OAAO;AACT;AAOO,IAAM,qCAAiC,0MAAA,EAC5C,mCACA,0BACA;IAAC,UAAU;CAAA","debugId":null}},
    {"offset": {"line": 8142, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/context/providers/AttachmentProvider.tsx"],"sourcesContent":["\"use client\";\n\nimport { useMemo, type FC, type PropsWithChildren } from \"react\";\n\nimport {\n  AssistantApi,\n  AssistantProvider,\n  useAssistantApi,\n  createAssistantApiField,\n} from \"../react/AssistantApiContext\";\n\nexport const MessageAttachmentByIndexProvider: FC<\n  PropsWithChildren<{\n    index: number;\n  }>\n> = ({ index, children }) => {\n  const api = useAssistantApi();\n  const api2 = useMemo(() => {\n    return {\n      attachment: createAssistantApiField({\n        source: \"message\",\n        query: { type: \"index\", index },\n        get: () => api.message().attachment({ index }),\n      }),\n    } satisfies Partial<AssistantApi>;\n  }, [api, index]);\n\n  return <AssistantProvider api={api2}>{children}</AssistantProvider>;\n};\n\nexport const ComposerAttachmentByIndexProvider: FC<\n  PropsWithChildren<{\n    index: number;\n  }>\n> = ({ index, children }) => {\n  const api = useAssistantApi();\n  const api2 = useMemo(() => {\n    return {\n      attachment: createAssistantApiField({\n        source: \"composer\",\n        query: { type: \"index\", index },\n        get: () => api.composer().attachment({ index }),\n      }),\n    } satisfies Partial<AssistantApi>;\n  }, [api, index]);\n\n  return <AssistantProvider api={api2}>{children}</AssistantProvider>;\n};\n"],"names":[],"mappings":";;;;;;;AAEA,SAAS,eAAgD;AAEzD;AAuBS;;;;;AAhBF,IAAM,mCAIT;QAAC,EAAE,KAAA,EAAO,QAAA,CAAS,CAAA,KAAM;IAC3B,MAAM,UAAM,mNAAA,CAAgB;IAC5B,MAAM,WAAO,wKAAA;0DAAQ,MAAM;YACzB,OAAO;gBACL,gBAAY,2NAAA,EAAwB;oBAClC,QAAQ;oBACR,OAAO;wBAAE,MAAM;wBAAS;oBAAM;oBAC9B,GAAA;0EAAK,IAAM,IAAI,OAAA,CAAQ,EAAE,UAAA,CAAW;gCAAE;4BAAM,CAAC;;gBAC/C,CAAC;YACH;QACF;yDAAG;QAAC;QAAK,KAAK;KAAC;IAEf,OAAO,aAAA,GAAA,IAAA,6KAAA,EAAC,qNAAA,EAAA;QAAkB,KAAK;QAAO;IAAA,CAAS;AACjD;AAEO,IAAM,oCAIT;QAAC,EAAE,KAAA,EAAO,QAAA,CAAS,CAAA,KAAM;IAC3B,MAAM,UAAM,mNAAA,CAAgB;IAC5B,MAAM,WAAO,wKAAA;2DAAQ,MAAM;YACzB,OAAO;gBACL,gBAAY,2NAAA,EAAwB;oBAClC,QAAQ;oBACR,OAAO;wBAAE,MAAM;wBAAS;oBAAM;oBAC9B,GAAA;2EAAK,IAAM,IAAI,QAAA,CAAS,EAAE,UAAA,CAAW;gCAAE;4BAAM,CAAC;;gBAChD,CAAC;YACH;QACF;0DAAG;QAAC;QAAK,KAAK;KAAC;IAEf,OAAO,aAAA,GAAA,IAAA,6KAAA,EAAC,qNAAA,EAAA;QAAkB,KAAK;QAAO;IAAA,CAAS;AACjD","debugId":null}},
    {"offset": {"line": 8220, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/primitives/composer/ComposerAttachments.tsx"],"sourcesContent":["\"use client\";\n\nimport { ComponentType, type FC, memo, useMemo } from \"react\";\nimport { Attachment } from \"../../types\";\nimport {\n  useAssistantState,\n  ComposerAttachmentByIndexProvider,\n} from \"../../context\";\n\nexport namespace ComposerPrimitiveAttachments {\n  export type Props = {\n    components:\n      | {\n          Image?: ComponentType | undefined;\n          Document?: ComponentType | undefined;\n          File?: ComponentType | undefined;\n          Attachment?: ComponentType | undefined;\n        }\n      | undefined;\n  };\n}\n\nconst getComponent = (\n  components: ComposerPrimitiveAttachments.Props[\"components\"],\n  attachment: Attachment,\n) => {\n  const type = attachment.type;\n  switch (type) {\n    case \"image\":\n      return components?.Image ?? components?.Attachment;\n    case \"document\":\n      return components?.Document ?? components?.Attachment;\n    case \"file\":\n      return components?.File ?? components?.Attachment;\n    default:\n      const _exhaustiveCheck: never = type;\n      throw new Error(`Unknown attachment type: ${_exhaustiveCheck}`);\n  }\n};\n\nconst AttachmentComponent: FC<{\n  components: ComposerPrimitiveAttachments.Props[\"components\"];\n}> = ({ components }) => {\n  const attachment = useAssistantState(({ attachment }) => attachment);\n  if (!attachment) return null;\n\n  const Component = getComponent(components, attachment);\n  if (!Component) return null;\n  return <Component />;\n};\n\nexport namespace ComposerPrimitiveAttachmentByIndex {\n  export type Props = {\n    index: number;\n    components?: ComposerPrimitiveAttachments.Props[\"components\"];\n  };\n}\n\n/**\n * Renders a single attachment at the specified index within the composer.\n *\n * This component provides direct access to render a specific attachment\n * from the composer's attachment list using the provided component configuration.\n *\n * @example\n * ```tsx\n * <ComposerPrimitive.AttachmentByIndex\n *   index={0}\n *   components={{\n *     Image: MyImageAttachment,\n *     Document: MyDocumentAttachment\n *   }}\n * />\n * ```\n */\nexport const ComposerPrimitiveAttachmentByIndex: FC<ComposerPrimitiveAttachmentByIndex.Props> =\n  memo(\n    ({ index, components }) => {\n      return (\n        <ComposerAttachmentByIndexProvider index={index}>\n          <AttachmentComponent components={components} />\n        </ComposerAttachmentByIndexProvider>\n      );\n    },\n    (prev, next) =>\n      prev.index === next.index &&\n      prev.components?.Image === next.components?.Image &&\n      prev.components?.Document === next.components?.Document &&\n      prev.components?.File === next.components?.File &&\n      prev.components?.Attachment === next.components?.Attachment,\n  );\n\nComposerPrimitiveAttachmentByIndex.displayName =\n  \"ComposerPrimitive.AttachmentByIndex\";\n\nexport const ComposerPrimitiveAttachments: FC<\n  ComposerPrimitiveAttachments.Props\n> = ({ components }) => {\n  const attachmentsCount = useAssistantState(\n    (s) => s.composer.attachments.length,\n  );\n\n  const attachmentElements = useMemo(() => {\n    return Array.from({ length: attachmentsCount }, (_, index) => (\n      <ComposerPrimitiveAttachmentByIndex\n        key={index}\n        index={index}\n        components={components}\n      />\n    ));\n  }, [attachmentsCount, components]);\n\n  return attachmentElements;\n};\n\nComposerPrimitiveAttachments.displayName = \"ComposerPrimitive.Attachments\";\n"],"names":["attachment"],"mappings":";;;;;;;AAEA,SAAiC,MAAM,eAAe;AAEtD;;AA4CS;;;;;AA1BT,IAAM,eAAe,CACnB,YACA,eACG;IACH,MAAM,OAAO,WAAW,IAAA;IACxB,OAAQ,MAAM;QACZ,KAAK;;YACH,4BAAO,mEAAY,KAAA,yHAAS,WAAY,UAAA;QAC1C,KAAK;;YACH,kGAAmB,QAAA,gDAAZ,+EAAwB,WAAY,UAAA;QAC7C,KAAK;gBACI;YAAP,8FAAmB,IAAA,uHAAQ,WAAY,UAAA;QACzC;YACE,MAAM,mBAA0B;YAChC,MAAM,IAAI,MAAM,4BAA4C,CAAE,MAAlB,gBAAgB;IAChE;AACF;AAEA,IAAM,sBAED;QAAC,EAAE,UAAA,CAAW,CAAA,KAAM;IACvB,MAAM,iBAAa,4NAAA;6DAAkB;gBAAC,EAAE,YAAAA,WAAAA,CAAW,CAAA;mBAAMA,WAAU;;;IACnE,IAAI,CAAC,WAAY,CAAA,OAAO;IAExB,MAAM,YAAY,aAAa,YAAY,UAAU;IACrD,IAAI,CAAC,UAAW,CAAA,OAAO;IACvB,OAAO,aAAA,GAAA,IAAA,6KAAA,EAAC,WAAA,CAAA,CAAU;AACpB;AA0BO,IAAM,yCACX,qKAAA,EACE;QAAC,EAAE,KAAA,EAAO,UAAA,CAAW,CAAA,KAAM;IACzB,OACE,aAAA,GAAA,IAAA,6KAAA,EAAC,wOAAA,EAAA;QAAkC;QACjC,UAAA,aAAA,GAAA,IAAA,6KAAA,EAAC,qBAAA;YAAoB;QAAA,CAAwB;IAAA,CAC/C;AAEJ,GACA,CAAC,MAAM;qGAIqB,mBAC1B;WAJA,KAAK,KAAA,KAAU,KAAK,KAAA,8BACf,UAAA,qDAAL,iBAAiB,KAAA,gCAAe,UAAA,qDAAL,iBAAiB,KAAA,gCACvC,UAAA,sDAAL,kBAAiB,QAAA,iCAAkB,UAAA,sDAAL,kBAAiB,QAAA,gCAC1C,UAAA,sDAAL,kBAAiB,IAAA,iCAAc,UAAA,wEAAY,IAAA,gCACtC,UAAA,wEAAY,UAAA,iCAAoB,UAAA,sDAAL,kBAAiB,UAAA;;AAGvD,mCAAmC,WAAA,GACjC;AAEK,IAAM,+BAET;QAAC,EAAE,UAAA,CAAW,CAAA,KAAM;IACtB,MAAM,uBAAmB,4NAAA;4EACvB,CAAC,IAAM,EAAE,QAAA,CAAS,WAAA,CAAY,MAAA;;IAGhC,MAAM,yBAAqB,wKAAA;oEAAQ,MAAM;YACvC,OAAO,MAAM,IAAA,CAAK;gBAAE,QAAQ;YAAiB;4EAAG,CAAC,GAAG,QAClD,aAAA,GAAA,IAAA,6KAAA,EAAC,oCAAA;wBAEC;wBACA;oBAAA,GAFK;;QAKX;mEAAG;QAAC;QAAkB,UAAU;KAAC;IAEjC,OAAO;AACT;AAEA,6BAA6B,WAAA,GAAc","debugId":null}},
    {"offset": {"line": 8307, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/primitives/composer/ComposerIf.tsx"],"sourcesContent":["\"use client\";\n\nimport type { FC, PropsWithChildren } from \"react\";\nimport { useAssistantState } from \"../../context\";\nimport type { RequireAtLeastOne } from \"../../utils/RequireAtLeastOne\";\n\ntype ComposerIfFilters = {\n  editing: boolean | undefined;\n};\n\nexport type UseComposerIfProps = RequireAtLeastOne<ComposerIfFilters>;\n\nconst useComposerIf = (props: UseComposerIfProps) => {\n  return useAssistantState(({ composer }) => {\n    if (props.editing === true && !composer.isEditing) return false;\n    if (props.editing === false && composer.isEditing) return false;\n\n    return true;\n  });\n};\n\nexport namespace ComposerPrimitiveIf {\n  export type Props = PropsWithChildren<UseComposerIfProps>;\n}\n\nexport const ComposerPrimitiveIf: FC<ComposerPrimitiveIf.Props> = ({\n  children,\n  ...query\n}) => {\n  const result = useComposerIf(query);\n  return result ? children : null;\n};\n\nComposerPrimitiveIf.displayName = \"ComposerPrimitive.If\";\n"],"names":[],"mappings":";;;;;AAGA,SAAS,yBAAyB;;;AASlC,IAAM,gBAAgB,CAAC,UAA8B;IACnD,WAAO,4NAAA;2CAAkB;gBAAC,EAAE,QAAA,CAAS,CAAA,KAAM;YACzC,IAAI,MAAM,OAAA,KAAY,QAAQ,CAAC,SAAS,SAAA,CAAW,CAAA,OAAO;YAC1D,IAAI,MAAM,OAAA,KAAY,SAAS,SAAS,SAAA,CAAW,CAAA,OAAO;YAE1D,OAAO;QACT,CAAC;;AACH;AAMO,IAAM,sBAAqD;QAAC,EACjE,QAAA,EACA,GAAG,OACL,KAAM;IACJ,MAAM,SAAS,cAAc,KAAK;IAClC,OAAO,SAAS,WAAW;AAC7B;AAEA,oBAAoB,WAAA,GAAc","debugId":null}},
    {"offset": {"line": 8337, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/primitives/composer/index.ts"],"sourcesContent":["export { ComposerPrimitiveRoot as Root } from \"./ComposerRoot\";\nexport { ComposerPrimitiveInput as Input } from \"./ComposerInput\";\nexport { ComposerPrimitiveSend as Send } from \"./ComposerSend\";\nexport { ComposerPrimitiveCancel as Cancel } from \"./ComposerCancel\";\nexport { ComposerPrimitiveAddAttachment as AddAttachment } from \"./ComposerAddAttachment\";\nexport { ComposerPrimitiveAttachments as Attachments } from \"./ComposerAttachments\";\nexport { ComposerPrimitiveAttachmentByIndex as AttachmentByIndex } from \"./ComposerAttachments\";\nexport { ComposerPrimitiveIf as If } from \"./ComposerIf\";\n"],"names":[],"mappings":";;AAAA,SAAkC,6BAAY;AAC9C,SAAmC,8BAAa;AAChD,SAAkC,6BAAY;AAC9C,SAAoC,+BAAc;AAClD,SAA2C,sCAAqB;AAChE,SAAyC,oCAAmB;AAE5D,SAAgC,2BAAU","debugId":null}},
    {"offset": {"line": 8399, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/primitives/error/ErrorRoot.tsx"],"sourcesContent":["\"use client\";\n\nimport { Primitive } from \"@radix-ui/react-primitive\";\nimport { type ComponentRef, forwardRef, ComponentPropsWithoutRef } from \"react\";\n\nexport namespace ErrorPrimitiveRoot {\n  export type Element = ComponentRef<typeof Primitive.div>;\n  export type Props = ComponentPropsWithoutRef<typeof Primitive.div>;\n}\n\nexport const ErrorPrimitiveRoot = forwardRef<\n  ErrorPrimitiveRoot.Element,\n  ErrorPrimitiveRoot.Props\n>((props, forwardRef) => {\n  return <Primitive.div role=\"alert\" {...props} ref={forwardRef} />;\n});\n\nErrorPrimitiveRoot.displayName = \"ErrorPrimitive.Root\";\n"],"names":["forwardRef"],"mappings":";;;;;AAEA,SAAS,iBAAiB;AAC1B,SAA4B,kBAA4C;AAW/D;;;;;AAJF,IAAM,yBAAqB,2KAAA,EAGhC,CAAC,OAAOA,gBAAe;IACvB,OAAO,aAAA,GAAA,IAAA,6KAAA,EAAC,qLAAA,CAAU,GAAA,EAAV;QAAc,MAAK;QAAS,GAAG,KAAA;QAAO,KAAKA;IAAAA,CAAY;AACjE,CAAC;AAED,mBAAmB,WAAA,GAAc","debugId":null}},
    {"offset": {"line": 8425, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/primitives/error/ErrorMessage.tsx"],"sourcesContent":["\"use client\";\n\nimport { Primitive } from \"@radix-ui/react-primitive\";\nimport { type ComponentRef, forwardRef, ComponentPropsWithoutRef } from \"react\";\nimport { useAssistantState } from \"../../context\";\n\nexport namespace ErrorPrimitiveMessage {\n  export type Element = ComponentRef<typeof Primitive.span>;\n  export type Props = ComponentPropsWithoutRef<typeof Primitive.span>;\n}\n\nexport const ErrorPrimitiveMessage = forwardRef<\n  ErrorPrimitiveMessage.Element,\n  ErrorPrimitiveMessage.Props\n>(({ children, ...props }, forwardRef) => {\n  const error = useAssistantState(({ message }) => {\n    return message.status?.type === \"incomplete\" &&\n      message.status.reason === \"error\"\n      ? message.status.error\n      : undefined;\n  });\n\n  if (error === undefined) return null;\n\n  return (\n    <Primitive.span {...props} ref={forwardRef}>\n      {children ?? String(error)}\n    </Primitive.span>\n  );\n});\n\nErrorPrimitiveMessage.displayName = \"ErrorPrimitive.Message\";\n"],"names":["forwardRef"],"mappings":";;;;;AAEA,SAAS,iBAAiB;AAC1B,SAA4B,kBAA4C;AACxE,SAAS,yBAAyB;AAqB9B;;;;;;AAdG,IAAM,4BAAwB,2KAAA,EAGnC,QAAyBA,gBAAe;QAAvC,EAAE,QAAA,EAAU,GAAG,MAAM,CAAA;IACtB,MAAM,YAAQ,4NAAA;0DAAkB;gBAAC,EAAE,OAAA,CAAQ,CAAA,KAAM;;YAC/C,mCAAe,MAAA,oDAAR,gBAAgB,IAAA,MAAS,gBAC9B,QAAQ,MAAA,CAAO,MAAA,KAAW,UACxB,QAAQ,MAAA,CAAO,KAAA,GACf,KAAA;QACN,CAAC;;IAED,IAAI,UAAU,KAAA,EAAW,CAAA,OAAO;IAEhC,OACE,aAAA,GAAA,IAAA,6KAAA,EAAC,qLAAA,CAAU,IAAA,EAAV;QAAgB,GAAG,KAAA;QAAO,KAAKA;QAC7B,UAAA,qBAAA,sBAAA,WAAY,OAAO,KAAK;IAAA,CAC3B;AAEJ,CAAC;AAED,sBAAsB,WAAA,GAAc","debugId":null}},
    {"offset": {"line": 8462, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/primitives/error/index.ts"],"sourcesContent":["export { ErrorPrimitiveRoot as Root } from \"./ErrorRoot\";\nexport { ErrorPrimitiveMessage as Message } from \"./ErrorMessage\";\n"],"names":[],"mappings":";;AAAA,SAA+B,0BAAY;AAC3C,SAAkC,6BAAe","debugId":null}},
    {"offset": {"line": 8496, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/utils/hooks/useManagedRef.ts"],"sourcesContent":["import { useCallback, useRef } from \"react\";\n\nexport const useManagedRef = <TNode>(\n  callback: (node: TNode) => (() => void) | void,\n) => {\n  const cleanupRef = useRef<(() => void) | void>(undefined);\n\n  const ref = useCallback(\n    (el: TNode | null) => {\n      // Call the previous cleanup function\n      if (cleanupRef.current) {\n        cleanupRef.current();\n      }\n\n      // Call the new callback and store its cleanup function\n      if (el) {\n        cleanupRef.current = callback(el);\n      }\n    },\n    [callback],\n  );\n\n  return ref;\n};\n"],"names":[],"mappings":";;;;;AAAA,SAAS,aAAa,cAAc;;AAE7B,IAAM,gBAAgB,CAC3B,aACG;IACH,MAAM,iBAAa,uKAAA,EAA4B,KAAA,CAAS;IAExD,MAAM,UAAM,4KAAA;0CACV,CAAC,OAAqB;YAEpB,IAAI,WAAW,OAAA,EAAS;gBACtB,WAAW,OAAA,CAAQ;YACrB;YAGA,IAAI,IAAI;gBACN,WAAW,OAAA,GAAU,SAAS,EAAE;YAClC;QACF;yCACA;QAAC,QAAQ;KAAA;IAGX,OAAO;AACT","debugId":null}},
    {"offset": {"line": 8525, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/primitives/message/MessageRoot.tsx"],"sourcesContent":["\"use client\";\n\nimport { Primitive } from \"@radix-ui/react-primitive\";\nimport {\n  type ComponentRef,\n  forwardRef,\n  ComponentPropsWithoutRef,\n  useCallback,\n} from \"react\";\nimport { useAssistantApi, useAssistantState } from \"../../context\";\nimport { useManagedRef } from \"../../utils/hooks/useManagedRef\";\nimport { useComposedRefs } from \"@radix-ui/react-compose-refs\";\n\nconst useIsHoveringRef = () => {\n  const api = useAssistantApi();\n  const message = useAssistantState(() => api.message());\n\n  const callbackRef = useCallback(\n    (el: HTMLElement) => {\n      const handleMouseEnter = () => {\n        message.setIsHovering(true);\n      };\n      const handleMouseLeave = () => {\n        message.setIsHovering(false);\n      };\n\n      el.addEventListener(\"mouseenter\", handleMouseEnter);\n      el.addEventListener(\"mouseleave\", handleMouseLeave);\n\n      if (el.matches(\":hover\")) message.setIsHovering(true);\n\n      return () => {\n        el.removeEventListener(\"mouseenter\", handleMouseEnter);\n        el.removeEventListener(\"mouseleave\", handleMouseLeave);\n        message.setIsHovering(false);\n      };\n    },\n    [message],\n  );\n\n  return useManagedRef(callbackRef);\n};\n\nexport namespace MessagePrimitiveRoot {\n  export type Element = ComponentRef<typeof Primitive.div>;\n  /**\n   * Props for the MessagePrimitive.Root component.\n   * Accepts all standard div element props.\n   */\n  export type Props = ComponentPropsWithoutRef<typeof Primitive.div>;\n}\n\n/**\n * The root container component for a message.\n *\n * This component provides the foundational wrapper for message content and handles\n * hover state management for the message. It automatically tracks when the user\n * is hovering over the message, which can be used by child components like action bars.\n *\n * @example\n * ```tsx\n * <MessagePrimitive.Root>\n *   <MessagePrimitive.Content />\n *   <ActionBarPrimitive.Root>\n *     <ActionBarPrimitive.Copy />\n *     <ActionBarPrimitive.Edit />\n *   </ActionBarPrimitive.Root>\n * </MessagePrimitive.Root>\n * ```\n */\nexport const MessagePrimitiveRoot = forwardRef<\n  MessagePrimitiveRoot.Element,\n  MessagePrimitiveRoot.Props\n>((props, forwardRef) => {\n  const isHoveringRef = useIsHoveringRef();\n  const ref = useComposedRefs<HTMLDivElement>(forwardRef, isHoveringRef);\n\n  return <Primitive.div {...props} ref={ref} />;\n});\n\nMessagePrimitiveRoot.displayName = \"MessagePrimitive.Root\";\n"],"names":["forwardRef"],"mappings":";;;;;AAEA,SAAS,iBAAiB;AAC1B;;AAMA,SAAS,iBAAiB,yBAAyB;AACnD,SAAS,qBAAqB;AAC9B,SAAS,uBAAuB;AAkEvB;;;;;;;;AAhET,IAAM,mBAAmB,MAAM;IAC7B,MAAM,UAAM,mNAAA,CAAgB;IAC5B,MAAM,cAAU,4NAAA;uDAAkB,IAAM,IAAI,OAAA,CAAQ,CAAC;;IAErD,MAAM,kBAAc,4KAAA;qDAClB,CAAC,OAAoB;YACnB,MAAM;8EAAmB,MAAM;oBAC7B,QAAQ,aAAA,CAAc,IAAI;gBAC5B;;YACA,MAAM;8EAAmB,MAAM;oBAC7B,QAAQ,aAAA,CAAc,KAAK;gBAC7B;;YAEA,GAAG,gBAAA,CAAiB,cAAc,gBAAgB;YAClD,GAAG,gBAAA,CAAiB,cAAc,gBAAgB;YAElD,IAAI,GAAG,OAAA,CAAQ,QAAQ,EAAG,CAAA,QAAQ,aAAA,CAAc,IAAI;YAEpD;6DAAO,MAAM;oBACX,GAAG,mBAAA,CAAoB,cAAc,gBAAgB;oBACrD,GAAG,mBAAA,CAAoB,cAAc,gBAAgB;oBACrD,QAAQ,aAAA,CAAc,KAAK;gBAC7B;;QACF;oDACA;QAAC,OAAO;KAAA;IAGV,WAAO,yMAAA,EAAc,WAAW;AAClC;AA6BO,IAAM,2BAAuB,2KAAA,EAGlC,CAAC,OAAOA,gBAAe;IACvB,MAAM,gBAAgB,iBAAiB;IACvC,MAAM,UAAM,iMAAA,EAAgCA,aAAY,aAAa;IAErE,OAAO,aAAA,GAAA,IAAA,6KAAA,EAAC,qLAAA,CAAU,GAAA,EAAV;QAAe,GAAG,KAAA;QAAO;IAAA,CAAU;AAC7C,CAAC;AAED,qBAAqB,WAAA,GAAc","debugId":null}},
    {"offset": {"line": 8592, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/context/providers/PartProvider.tsx"],"sourcesContent":["\"use client\";\n\nimport { useMemo, type FC, type PropsWithChildren } from \"react\";\nimport {\n  AssistantApi,\n  AssistantProvider,\n  useAssistantApi,\n  createAssistantApiField,\n} from \"../react/AssistantApiContext\";\n\nexport const PartByIndexProvider: FC<\n  PropsWithChildren<{\n    index: number;\n  }>\n> = ({ index, children }) => {\n  const api = useAssistantApi();\n  const api2 = useMemo(() => {\n    return {\n      part: createAssistantApiField({\n        source: \"message\",\n        query: { type: \"index\", index },\n        get: () => api.message().part({ index }),\n      }),\n    } satisfies Partial<AssistantApi>;\n  }, [api, index]);\n\n  return <AssistantProvider api={api2}>{children}</AssistantProvider>;\n};\n"],"names":[],"mappings":";;;;;AAEA,SAAS,eAAgD;AACzD;AAuBS;;;;;AAhBF,IAAM,sBAIT;QAAC,EAAE,KAAA,EAAO,QAAA,CAAS,CAAA,KAAM;IAC3B,MAAM,UAAM,mNAAA,CAAgB;IAC5B,MAAM,OAAO,4KAAA;6CAAQ,MAAM;YACzB,OAAO;gBACL,UAAM,2NAAA,EAAwB;oBAC5B,QAAQ;oBACR,OAAO;wBAAE,MAAM;wBAAS;oBAAM;oBAC9B,GAAA;6DAAK,IAAM,IAAI,OAAA,CAAQ,EAAE,IAAA,CAAK;gCAAE;4BAAM,CAAC;;gBACzC,CAAC;YACH;QACF;4CAAG;QAAC;QAAK,KAAK;KAAC;IAEf,OAAO,aAAA,GAAA,IAAA,6KAAA,EAAC,qNAAA,EAAA;QAAkB,KAAK;QAAO;IAAA,CAAS;AACjD","debugId":null}},
    {"offset": {"line": 8639, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/context/providers/TextMessagePartProvider.tsx"],"sourcesContent":["\"use client\";\n\nimport { useMemo, type FC, type PropsWithChildren } from \"react\";\nimport {\n  AssistantProvider,\n  AssistantApi,\n  createAssistantApiField,\n} from \"../react/AssistantApiContext\";\nimport {\n  MessagePartClientApi,\n  MessagePartClientState,\n} from \"../../client/types/Part\";\nimport { resource, tapMemo } from \"@assistant-ui/tap\";\nimport { useResource } from \"@assistant-ui/tap/react\";\nimport { asStore, tapApi } from \"../../utils/tap-store\";\n\nconst TextMessagePartClient = resource(\n  ({ text, isRunning }: { text: string; isRunning: boolean }) => {\n    const state = tapMemo<MessagePartClientState>(\n      () => ({\n        type: \"text\",\n        text,\n        status: isRunning ? { type: \"running\" } : { type: \"complete\" },\n      }),\n      [text, isRunning],\n    );\n\n    return tapApi<MessagePartClientApi>({\n      getState: () => state,\n      addToolResult: () => {\n        throw new Error(\"Not supported\");\n      },\n      __internal_getRuntime: () => null,\n    });\n  },\n);\n\nexport const TextMessagePartProvider: FC<\n  PropsWithChildren<{\n    text: string;\n    isRunning?: boolean;\n  }>\n> = ({ text, isRunning = false, children }) => {\n  const store = useResource(\n    asStore(TextMessagePartClient({ text, isRunning })),\n  );\n  const api = useMemo(() => {\n    return {\n      part: createAssistantApiField({\n        source: \"root\",\n        query: {},\n        get: () => store.getState().api,\n      }),\n      subscribe: store.subscribe,\n      flushSync: store.flushSync,\n    } satisfies Partial<AssistantApi>;\n  }, [store]);\n\n  return <AssistantProvider api={api}>{children}</AssistantProvider>;\n};\n"],"names":[],"mappings":";;;;;AAEA,SAAS,eAAgD;AACzD;;AASA,SAAS,UAAU,eAAe;AAClC,SAAS,mBAAmB;;AAC5B,SAAS,SAAS,cAAc;AA4CvB;;;;;;;;AA1CT,IAAM,4BAAwB,mLAAA,EAC5B;QAAC,EAAE,IAAA,EAAM,SAAA,CAAU,CAAA,KAA4C;IAC7D,MAAM,YAAQ,sLAAA,EACZ,IAAA,CAAO;YACL,MAAM;YACN;YACA,QAAQ,YAAY;gBAAE,MAAM;YAAU,IAAI;gBAAE,MAAM;YAAW;QAC/D,CAAA,GACA;QAAC;QAAM,SAAS;KAAA;IAGlB,WAAO,sMAAA,EAA6B;QAClC,UAAU,IAAM;QAChB,eAAe,MAAM;YACnB,MAAM,IAAI,MAAM,eAAe;QACjC;QACA,uBAAuB,IAAM;IAC/B,CAAC;AACH;AAGK,IAAM,0BAKT;QAAC,EAAE,IAAA,EAAM,YAAY,KAAA,EAAO,QAAA,CAAS,CAAA,KAAM;IAC7C,MAAM,YAAQ,8LAAA,MACZ,kMAAA,EAAQ,sBAAsB;QAAE;QAAM;IAAU,CAAC,CAAC;IAEpD,MAAM,MAAM,4KAAA;gDAAQ,MAAM;YACxB,OAAO;gBACL,UAAM,2NAAA,EAAwB;oBAC5B,QAAQ;oBACR,OAAO,CAAC;oBACR,GAAA;gEAAK,IAAM,MAAM,QAAA,CAAS,EAAE,GAAA;;gBAC9B,CAAC;gBACD,WAAW,MAAM,SAAA;gBACjB,WAAW,MAAM,SAAA;YACnB;QACF;+CAAG;QAAC,KAAK;KAAC;IAEV,OAAO,aAAA,GAAA,IAAA,6KAAA,EAAC,qNAAA,EAAA;QAAkB;QAAW;IAAA,CAAS;AAChD","debugId":null}},
    {"offset": {"line": 8715, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/primitives/messagePart/useMessagePartText.tsx"],"sourcesContent":["\"use client\";\n\nimport { MessagePartState } from \"../../legacy-runtime/runtime/MessagePartRuntime\";\nimport { useAssistantState } from \"../../context\";\nimport { TextMessagePart, ReasoningMessagePart } from \"../../types\";\n\nexport const useMessagePartText = () => {\n  const text = useAssistantState(({ part }) => {\n    if (part.type !== \"text\" && part.type !== \"reasoning\")\n      throw new Error(\n        \"MessagePartText can only be used inside text or reasoning message parts.\",\n      );\n\n    return part as MessagePartState & (TextMessagePart | ReasoningMessagePart);\n  });\n\n  return text;\n};\n"],"names":[],"mappings":";;;;;AAGA,SAAS,yBAAyB;;;AAG3B,IAAM,qBAAqB,MAAM;IACtC,MAAM,WAAO,4NAAA;sDAAkB;gBAAC,EAAE,IAAA,CAAK,CAAA,KAAM;YAC3C,IAAI,KAAK,IAAA,KAAS,UAAU,KAAK,IAAA,KAAS,aACxC,MAAM,IAAI,MACR;YAGJ,OAAO;QACT,CAAC;;IAED,OAAO;AACT","debugId":null}},
    {"offset": {"line": 8739, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/primitives/messagePart/MessagePartText.tsx"],"sourcesContent":["\"use client\";\n\nimport { Primitive } from \"@radix-ui/react-primitive\";\nimport {\n  type ComponentRef,\n  forwardRef,\n  ComponentPropsWithoutRef,\n  ElementType,\n} from \"react\";\nimport { useMessagePartText } from \"./useMessagePartText\";\nimport { useSmooth } from \"../../utils/smooth/useSmooth\";\n\nexport namespace MessagePartPrimitiveText {\n  export type Element = ComponentRef<typeof Primitive.span>;\n  export type Props = Omit<\n    ComponentPropsWithoutRef<typeof Primitive.span>,\n    \"children\" | \"asChild\"\n  > & {\n    /**\n     * Whether to enable smooth text streaming animation.\n     * When enabled, text appears with a typing effect as it streams in.\n     * @default true\n     */\n    smooth?: boolean;\n    /**\n     * The HTML element or React component to render as.\n     * @default \"span\"\n     */\n    component?: ElementType;\n  };\n}\n\n/**\n * Renders the text content of a message part with optional smooth streaming.\n *\n * This component displays text content from the current message part context,\n * with support for smooth streaming animation that shows text appearing\n * character by character as it's generated.\n *\n * @example\n * ```tsx\n * <MessagePartPrimitive.Text\n *   smooth={true}\n *   component=\"p\"\n *   className=\"message-text\"\n * />\n * ```\n */\nexport const MessagePartPrimitiveText = forwardRef<\n  MessagePartPrimitiveText.Element,\n  MessagePartPrimitiveText.Props\n>(({ smooth = true, component: Component = \"span\", ...rest }, forwardedRef) => {\n  const { text, status } = useSmooth(useMessagePartText(), smooth);\n\n  return (\n    <Component data-status={status.type} {...rest} ref={forwardedRef}>\n      {text}\n    </Component>\n  );\n});\n\nMessagePartPrimitiveText.displayName = \"MessagePartPrimitive.Text\";\n"],"names":[],"mappings":";;;;;AAGA;AAMA,SAAS,0BAA0B;AACnC,SAAS,iBAAiB;AA6CtB;;;;;;AAPG,IAAM,+BAA2B,2KAAA,EAGtC,QAA4D,iBAAiB;QAA5E,EAAE,SAAS,IAAA,EAAM,WAAW,YAAY,MAAA,EAAQ,GAAG,KAAK,CAAA;IACzD,MAAM,EAAE,IAAA,EAAM,MAAA,CAAO,CAAA,OAAI,kMAAA,EAAU,kOAAA,CAAmB,IAAG,MAAM;IAE/D,OACE,aAAA,GAAA,IAAA,6KAAA,EAAC,WAAA;QAAU,eAAa,OAAO,IAAA;QAAO,GAAG,IAAA;QAAM,KAAK;QACjD,UAAA;IAAA,CACH;AAEJ,CAAC;AAED,yBAAyB,WAAA,GAAc","debugId":null}},
    {"offset": {"line": 8770, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/primitives/messagePart/useMessagePartImage.tsx"],"sourcesContent":["\"use client\";\n\nimport { MessagePartState } from \"../../legacy-runtime/runtime/MessagePartRuntime\";\nimport { useAssistantState } from \"../../context\";\nimport { ImageMessagePart } from \"../../types\";\n\nexport const useMessagePartImage = () => {\n  const image = useAssistantState(({ part }) => {\n    if (part.type !== \"image\")\n      throw new Error(\n        \"MessagePartImage can only be used inside image message parts.\",\n      );\n\n    return part as MessagePartState & ImageMessagePart;\n  });\n\n  return image;\n};\n"],"names":[],"mappings":";;;;;AAGA,SAAS,yBAAyB;;;AAG3B,IAAM,sBAAsB,MAAM;IACvC,MAAM,YAAQ,4NAAA;wDAAkB;gBAAC,EAAE,IAAA,CAAK,CAAA,KAAM;YAC5C,IAAI,KAAK,IAAA,KAAS,SAChB,MAAM,IAAI,MACR;YAGJ,OAAO;QACT,CAAC;;IAED,OAAO;AACT","debugId":null}},
    {"offset": {"line": 8794, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/primitives/messagePart/MessagePartImage.tsx"],"sourcesContent":["\"use client\";\n\nimport { Primitive } from \"@radix-ui/react-primitive\";\nimport { type ComponentRef, forwardRef, ComponentPropsWithoutRef } from \"react\";\nimport { useMessagePartImage } from \"./useMessagePartImage\";\n\nexport namespace MessagePartPrimitiveImage {\n  export type Element = ComponentRef<typeof Primitive.img>;\n  /**\n   * Props for the MessagePartPrimitive.Image component.\n   * Accepts all standard img element props.\n   */\n  export type Props = ComponentPropsWithoutRef<typeof Primitive.img>;\n}\n\n/**\n * Renders an image from the current message part context.\n *\n * This component displays image content from the current message part,\n * automatically setting the src attribute from the message part's image data.\n *\n * @example\n * ```tsx\n * <MessagePartPrimitive.Image\n *   alt=\"Generated image\"\n *   className=\"message-image\"\n *   style={{ maxWidth: '100%' }}\n * />\n * ```\n */\nexport const MessagePartPrimitiveImage = forwardRef<\n  MessagePartPrimitiveImage.Element,\n  MessagePartPrimitiveImage.Props\n>((props, forwardedRef) => {\n  const { image } = useMessagePartImage();\n  return <Primitive.img src={image} {...props} ref={forwardedRef} />;\n});\n\nMessagePartPrimitiveImage.displayName = \"MessagePartPrimitive.Image\";\n"],"names":[],"mappings":";;;;;AAEA,SAAS,iBAAiB;AAC1B,SAA4B,kBAA4C;AACxE,SAAS,2BAA2B;AA+B3B;;;;;;AALF,IAAM,gCAA4B,2KAAA,EAGvC,CAAC,OAAO,iBAAiB;IACzB,MAAM,EAAE,KAAA,CAAM,CAAA,OAAI,gOAAA,CAAoB;IACtC,OAAO,aAAA,GAAA,IAAA,6KAAA,EAAC,qLAAA,CAAU,GAAA,EAAV;QAAc,KAAK;QAAQ,GAAG,KAAA;QAAO,KAAK;IAAA,CAAc;AAClE,CAAC;AAED,0BAA0B,WAAA,GAAc","debugId":null}},
    {"offset": {"line": 8823, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/primitives/messagePart/MessagePartInProgress.tsx"],"sourcesContent":["\"use client\";\n\nimport { FC, PropsWithChildren } from \"react\";\nimport { useAssistantState } from \"../../context\";\n\nexport namespace MessagePartPrimitiveInProgress {\n  export type Props = PropsWithChildren;\n}\n\n// TODO should this be renamed to IsRunning?\nexport const MessagePartPrimitiveInProgress: FC<\n  MessagePartPrimitiveInProgress.Props\n> = ({ children }) => {\n  const isInProgress = useAssistantState(\n    ({ part }) => part.status.type === \"running\",\n  );\n\n  return isInProgress ? children : null;\n};\n\nMessagePartPrimitiveInProgress.displayName = \"MessagePartPrimitive.InProgress\";\n"],"names":[],"mappings":";;;;;AAGA,SAAS,yBAAyB;;;AAO3B,IAAM,iCAET;QAAC,EAAE,QAAA,CAAS,CAAA,KAAM;IACpB,MAAM,mBAAe,4NAAA;0EACnB;gBAAC,EAAE,IAAA,CAAK,CAAA;mBAAM,KAAK,MAAA,CAAO,IAAA,KAAS;;;IAGrC,OAAO,eAAe,WAAW;AACnC;AAEA,+BAA+B,WAAA,GAAc","debugId":null}},
    {"offset": {"line": 8848, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/primitives/message/MessageParts.tsx"],"sourcesContent":["\"use client\";\n\nimport {\n  type ComponentType,\n  type FC,\n  memo,\n  PropsWithChildren,\n  useMemo,\n} from \"react\";\nimport {\n  useAssistantState,\n  useAssistantApi,\n  PartByIndexProvider,\n  TextMessagePartProvider,\n} from \"../../context\";\nimport { MessagePartPrimitiveText } from \"../messagePart/MessagePartText\";\nimport { MessagePartPrimitiveImage } from \"../messagePart/MessagePartImage\";\nimport type {\n  Unstable_AudioMessagePartComponent,\n  EmptyMessagePartComponent,\n  TextMessagePartComponent,\n  ImageMessagePartComponent,\n  SourceMessagePartComponent,\n  ToolCallMessagePartComponent,\n  ToolCallMessagePartProps,\n  FileMessagePartComponent,\n  ReasoningMessagePartComponent,\n} from \"../../types/MessagePartComponentTypes\";\nimport { MessagePartPrimitiveInProgress } from \"../messagePart/MessagePartInProgress\";\nimport { MessagePartStatus } from \"../../types/AssistantTypes\";\nimport { useShallow } from \"zustand/shallow\";\n\ntype MessagePartRange =\n  | { type: \"single\"; index: number }\n  | { type: \"toolGroup\"; startIndex: number; endIndex: number };\n\n/**\n * Groups consecutive tool-call message parts into ranges.\n * Always groups tool calls, even if there's only one.\n */\nconst groupMessageParts = (\n  messageTypes: readonly string[],\n): MessagePartRange[] => {\n  const ranges: MessagePartRange[] = [];\n  let currentToolGroupStart = -1;\n\n  for (let i = 0; i < messageTypes.length; i++) {\n    const type = messageTypes[i];\n\n    if (type === \"tool-call\") {\n      // Start a new tool group if we haven't started one\n      if (currentToolGroupStart === -1) {\n        currentToolGroupStart = i;\n      }\n    } else {\n      // End current tool group if it exists\n      if (currentToolGroupStart !== -1) {\n        ranges.push({\n          type: \"toolGroup\",\n          startIndex: currentToolGroupStart,\n          endIndex: i - 1,\n        });\n        currentToolGroupStart = -1;\n      }\n\n      // Add non-tool-call part individually\n      ranges.push({ type: \"single\", index: i });\n    }\n  }\n\n  // Handle any remaining tool group at the end\n  if (currentToolGroupStart !== -1) {\n    ranges.push({\n      type: \"toolGroup\",\n      startIndex: currentToolGroupStart,\n      endIndex: messageTypes.length - 1,\n    });\n  }\n\n  return ranges;\n};\n\nconst useMessagePartsGroups = (): MessagePartRange[] => {\n  const messageTypes = useAssistantState(\n    useShallow((s) => s.message.parts.map((c: any) => c.type)),\n  );\n\n  return useMemo(() => {\n    if (messageTypes.length === 0) {\n      return [];\n    }\n    return groupMessageParts(messageTypes);\n  }, [messageTypes]);\n};\n\nexport namespace MessagePrimitiveParts {\n  export type Props = {\n    /**\n     * Component configuration for rendering different types of message content.\n     *\n     * You can provide custom components for each content type (text, image, file, etc.)\n     * and configure tool rendering behavior. If not provided, default components will be used.\n     */\n    components?:\n      | {\n          /** Component for rendering empty messages */\n          Empty?: EmptyMessagePartComponent | undefined;\n          /** Component for rendering text content */\n          Text?: TextMessagePartComponent | undefined;\n          /** Component for rendering reasoning content (typically hidden) */\n          Reasoning?: ReasoningMessagePartComponent | undefined;\n          /** Component for rendering source content */\n          Source?: SourceMessagePartComponent | undefined;\n          /** Component for rendering image content */\n          Image?: ImageMessagePartComponent | undefined;\n          /** Component for rendering file content */\n          File?: FileMessagePartComponent | undefined;\n          /** Component for rendering audio content (experimental) */\n          Unstable_Audio?: Unstable_AudioMessagePartComponent | undefined;\n          /** Configuration for tool call rendering */\n          tools?:\n            | {\n                /** Map of tool names to their specific components */\n                by_name?:\n                  | Record<string, ToolCallMessagePartComponent | undefined>\n                  | undefined;\n                /** Fallback component for unregistered tools */\n                Fallback?: ComponentType<ToolCallMessagePartProps> | undefined;\n              }\n            | {\n                /** Override component that handles all tool calls */\n                Override: ComponentType<ToolCallMessagePartProps>;\n              }\n            | undefined;\n\n          /**\n           * Component for rendering grouped consecutive tool calls.\n           *\n           * When provided, this component will automatically wrap consecutive tool-call\n           * message parts, allowing you to create collapsible sections, custom styling,\n           * or other grouped presentations for multiple tool calls.\n           *\n           * The component receives:\n           * - `startIndex`: The index of the first tool call in the group\n           * - `endIndex`: The index of the last tool call in the group\n           * - `children`: The rendered tool call components\n           *\n           * @example\n           * ```tsx\n           * // Collapsible tool group\n           * ToolGroup: ({ startIndex, endIndex, children }) => (\n           *   <details className=\"tool-group\">\n           *     <summary>\n           *       {endIndex - startIndex + 1} tool calls\n           *     </summary>\n           *     <div className=\"tool-group-content\">\n           *       {children}\n           *     </div>\n           *   </details>\n           * )\n           * ```\n           *\n           * @example\n           * ```tsx\n           * // Custom styled tool group with header\n           * ToolGroup: ({ startIndex, endIndex, children }) => (\n           *   <div className=\"border rounded-lg p-4 my-2\">\n           *     <div className=\"text-sm text-gray-600 mb-2\">\n           *       Tool execution #{startIndex + 1}-{endIndex + 1}\n           *     </div>\n           *     <div className=\"space-y-2\">\n           *       {children}\n           *     </div>\n           *   </div>\n           * )\n           * ```\n           *\n           * @param startIndex - Index of the first tool call in the group\n           * @param endIndex - Index of the last tool call in the group\n           * @param children - Rendered tool call components to display within the group\n           *\n           * @deprecated This feature is still experimental and subject to change.\n           */\n          ToolGroup?: ComponentType<\n            PropsWithChildren<{ startIndex: number; endIndex: number }>\n          >;\n        }\n      | undefined;\n  };\n}\n\nconst ToolUIDisplay = ({\n  Fallback,\n  ...props\n}: {\n  Fallback: ToolCallMessagePartComponent | undefined;\n} & ToolCallMessagePartProps) => {\n  const Render = useAssistantState(({ toolUIs }) => {\n    const Render = toolUIs[props.toolName] ?? Fallback;\n    if (Array.isArray(Render)) return Render[0];\n    return Render;\n  });\n  if (!Render) return null;\n  return <Render {...props} />;\n};\n\nconst defaultComponents = {\n  Text: () => (\n    <p style={{ whiteSpace: \"pre-line\" }}>\n      <MessagePartPrimitiveText />\n      <MessagePartPrimitiveInProgress>\n        <span style={{ fontFamily: \"revert\" }}>{\" \\u25CF\"}</span>\n      </MessagePartPrimitiveInProgress>\n    </p>\n  ),\n  Reasoning: () => null,\n  Source: () => null,\n  Image: () => <MessagePartPrimitiveImage />,\n  File: () => null,\n  Unstable_Audio: () => null,\n  ToolGroup: ({ children }) => children,\n} satisfies MessagePrimitiveParts.Props[\"components\"];\n\ntype MessagePartComponentProps = {\n  components: MessagePrimitiveParts.Props[\"components\"];\n};\n\nconst MessagePartComponent: FC<MessagePartComponentProps> = ({\n  components: {\n    Text = defaultComponents.Text,\n    Reasoning = defaultComponents.Reasoning,\n    Image = defaultComponents.Image,\n    Source = defaultComponents.Source,\n    File = defaultComponents.File,\n    Unstable_Audio: Audio = defaultComponents.Unstable_Audio,\n    tools = {},\n  } = {},\n}) => {\n  const api = useAssistantApi();\n  const part = useAssistantState(({ part }) => part);\n\n  const type = part.type;\n  if (type === \"tool-call\") {\n    const addResult = (result: any) => api.part().addToolResult(result);\n    if (\"Override\" in tools)\n      return <tools.Override {...part} addResult={addResult} />;\n    const Tool = tools.by_name?.[part.toolName] ?? tools.Fallback;\n    return <ToolUIDisplay {...part} Fallback={Tool} addResult={addResult} />;\n  }\n\n  if (part.status?.type === \"requires-action\")\n    throw new Error(\"Encountered unexpected requires-action status\");\n\n  switch (type) {\n    case \"text\":\n      return <Text {...part} />;\n\n    case \"reasoning\":\n      return <Reasoning {...part} />;\n\n    case \"source\":\n      return <Source {...part} />;\n\n    case \"image\":\n      // eslint-disable-next-line jsx-a11y/alt-text\n      return <Image {...part} />;\n\n    case \"file\":\n      return <File {...part} />;\n\n    case \"audio\":\n      return <Audio {...part} />;\n\n    default:\n      const unhandledType: never = type;\n      throw new Error(`Unknown message part type: ${unhandledType}`);\n  }\n};\n\nexport namespace MessagePrimitivePartByIndex {\n  export type Props = {\n    index: number;\n    components: MessagePrimitiveParts.Props[\"components\"];\n  };\n}\n\n/**\n * Renders a single message part at the specified index.\n *\n * This component provides direct access to render a specific message part\n * within the current message context, using the provided component configuration.\n *\n * @example\n * ```tsx\n * <MessagePrimitive.PartByIndex\n *   index={0}\n *   components={{\n *     Text: MyTextComponent,\n *     Image: MyImageComponent\n *   }}\n * />\n * ```\n */\nexport const MessagePrimitivePartByIndex: FC<MessagePrimitivePartByIndex.Props> =\n  memo(\n    ({ index, components }) => {\n      return (\n        <PartByIndexProvider index={index}>\n          <MessagePartComponent components={components} />\n        </PartByIndexProvider>\n      );\n    },\n    (prev, next) =>\n      prev.index === next.index &&\n      prev.components?.Text === next.components?.Text &&\n      prev.components?.Reasoning === next.components?.Reasoning &&\n      prev.components?.Source === next.components?.Source &&\n      prev.components?.Image === next.components?.Image &&\n      prev.components?.File === next.components?.File &&\n      prev.components?.Unstable_Audio === next.components?.Unstable_Audio &&\n      prev.components?.tools === next.components?.tools &&\n      prev.components?.ToolGroup === next.components?.ToolGroup,\n  );\n\nMessagePrimitivePartByIndex.displayName = \"MessagePrimitive.PartByIndex\";\n\nconst EmptyPartFallback: FC<{\n  status: MessagePartStatus;\n  component: TextMessagePartComponent;\n}> = ({ status, component: Component }) => {\n  return (\n    <TextMessagePartProvider text=\"\" isRunning={status.type === \"running\"}>\n      <Component type=\"text\" text=\"\" status={status} />\n    </TextMessagePartProvider>\n  );\n};\n\nconst COMPLETE_STATUS: MessagePartStatus = Object.freeze({\n  type: \"complete\",\n});\n\nconst EmptyPartsImpl: FC<MessagePartComponentProps> = ({ components }) => {\n  const status = useAssistantState(\n    (s) => (s.message.status ?? COMPLETE_STATUS) as MessagePartStatus,\n  );\n\n  if (components?.Empty) return <components.Empty status={status} />;\n\n  return (\n    <EmptyPartFallback\n      status={status}\n      component={components?.Text ?? defaultComponents.Text}\n    />\n  );\n};\n\nconst EmptyParts = memo(\n  EmptyPartsImpl,\n  (prev, next) =>\n    prev.components?.Empty === next.components?.Empty &&\n    prev.components?.Text === next.components?.Text,\n);\n\n/**\n * Renders the parts of a message with support for multiple content types.\n *\n * This component automatically handles different types of message content including\n * text, images, files, tool calls, and more. It provides a flexible component\n * system for customizing how each content type is rendered.\n *\n * @example\n * ```tsx\n * <MessagePrimitive.Parts\n *   components={{\n *     Text: ({ text }) => <p className=\"message-text\">{text}</p>,\n *     Image: ({ image }) => <img src={image} alt=\"Message image\" />,\n *     tools: {\n *       by_name: {\n *         calculator: CalculatorTool,\n *         weather: WeatherTool,\n *       },\n *       Fallback: DefaultToolComponent\n *     }\n *   }}\n * />\n * ```\n */\nexport const MessagePrimitiveParts: FC<MessagePrimitiveParts.Props> = ({\n  components,\n}) => {\n  const contentLength = useAssistantState(\n    ({ message }) => message.parts.length,\n  );\n  const messageRanges = useMessagePartsGroups();\n\n  const partsElements = useMemo(() => {\n    if (contentLength === 0) {\n      return <EmptyParts components={components} />;\n    }\n\n    return messageRanges.map((range) => {\n      if (range.type === \"single\") {\n        return (\n          <MessagePrimitivePartByIndex\n            key={range.index}\n            index={range.index}\n            components={components}\n          />\n        );\n      } else {\n        const ToolGroupComponent =\n          components!.ToolGroup ?? defaultComponents.ToolGroup;\n        return (\n          <ToolGroupComponent\n            key={range.startIndex}\n            startIndex={range.startIndex}\n            endIndex={range.endIndex}\n          >\n            {Array.from(\n              { length: range.endIndex - range.startIndex + 1 },\n              (_, i) => (\n                <MessagePrimitivePartByIndex\n                  key={i}\n                  index={range.startIndex + i}\n                  components={components}\n                />\n              ),\n            )}\n          </ToolGroupComponent>\n        );\n      }\n    });\n  }, [messageRanges, components, contentLength]);\n\n  return <>{partsElements}</>;\n};\n\nMessagePrimitiveParts.displayName = \"MessagePrimitive.Parts\";\n"],"names":["Render","part"],"mappings":"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","debugId":null}},
    {"offset": {"line": 9130, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/primitives/message/MessageAttachments.tsx"],"sourcesContent":["\"use client\";\n\nimport { ComponentType, type FC, memo, useMemo } from \"react\";\nimport {\n  useAssistantState,\n  MessageAttachmentByIndexProvider,\n} from \"../../context\";\nimport { CompleteAttachment } from \"../../types\";\n\nexport namespace MessagePrimitiveAttachments {\n  export type Props = {\n    components:\n      | {\n          Image?: ComponentType | undefined;\n          Document?: ComponentType | undefined;\n          File?: ComponentType | undefined;\n          Attachment?: ComponentType | undefined;\n        }\n      | undefined;\n  };\n}\n\nconst getComponent = (\n  components: MessagePrimitiveAttachments.Props[\"components\"],\n  attachment: CompleteAttachment,\n) => {\n  const type = attachment.type;\n  switch (type) {\n    case \"image\":\n      return components?.Image ?? components?.Attachment;\n    case \"document\":\n      return components?.Document ?? components?.Attachment;\n    case \"file\":\n      return components?.File ?? components?.Attachment;\n    default:\n      const _exhaustiveCheck: never = type;\n      throw new Error(`Unknown attachment type: ${_exhaustiveCheck}`);\n  }\n};\n\nconst AttachmentComponent: FC<{\n  components: MessagePrimitiveAttachments.Props[\"components\"];\n}> = ({ components }) => {\n  const attachment = useAssistantState(({ attachment }) => attachment);\n  if (!attachment) return null;\n\n  const Component = getComponent(components, attachment as CompleteAttachment);\n  if (!Component) return null;\n  return <Component />;\n};\n\nexport namespace MessagePrimitiveAttachmentByIndex {\n  export type Props = {\n    index: number;\n    components?: MessagePrimitiveAttachments.Props[\"components\"];\n  };\n}\n\n/**\n * Renders a single attachment at the specified index within the current message.\n *\n * This component provides direct access to render a specific attachment\n * from the message's attachment list using the provided component configuration.\n *\n * @example\n * ```tsx\n * <MessagePrimitive.AttachmentByIndex\n *   index={0}\n *   components={{\n *     Image: MyImageAttachment,\n *     Document: MyDocumentAttachment\n *   }}\n * />\n * ```\n */\nexport const MessagePrimitiveAttachmentByIndex: FC<MessagePrimitiveAttachmentByIndex.Props> =\n  memo(\n    ({ index, components }) => {\n      return (\n        <MessageAttachmentByIndexProvider index={index}>\n          <AttachmentComponent components={components} />\n        </MessageAttachmentByIndexProvider>\n      );\n    },\n    (prev, next) =>\n      prev.index === next.index &&\n      prev.components?.Image === next.components?.Image &&\n      prev.components?.Document === next.components?.Document &&\n      prev.components?.File === next.components?.File &&\n      prev.components?.Attachment === next.components?.Attachment,\n  );\n\nMessagePrimitiveAttachmentByIndex.displayName =\n  \"MessagePrimitive.AttachmentByIndex\";\n\nexport const MessagePrimitiveAttachments: FC<\n  MessagePrimitiveAttachments.Props\n> = ({ components }) => {\n  const attachmentsCount = useAssistantState(({ message }) => {\n    if (message.role !== \"user\") return 0;\n    return message.attachments.length;\n  });\n\n  const attachmentElements = useMemo(() => {\n    return Array.from({ length: attachmentsCount }, (_, index) => (\n      <MessagePrimitiveAttachmentByIndex\n        key={index}\n        index={index}\n        components={components}\n      />\n    ));\n  }, [attachmentsCount, components]);\n\n  return attachmentElements;\n};\n\nMessagePrimitiveAttachments.displayName = \"MessagePrimitive.Attachments\";\n"],"names":["attachment"],"mappings":";;;;;;;AAEA,SAAiC,MAAM,eAAe;AACtD;;AA6CS;;;;;AA1BT,IAAM,eAAe,CACnB,YACA,eACG;IACH,MAAM,OAAO,WAAW,IAAA;IACxB,OAAQ,MAAM;QACZ,KAAK;;YACH,4BAAO,mEAAY,KAAA,yHAAS,WAAY,UAAA;QAC1C,KAAK;;YACH,kGAAmB,QAAA,gDAAZ,+EAAwB,WAAY,UAAA;QAC7C,KAAK;;YACH,8FAAmB,IAAA,4CAAZ,2EAAoB,WAAY,UAAA;QACzC;YACE,MAAM,mBAA0B;YAChC,MAAM,IAAI,MAAM,4BAA4C,CAAE,MAAlB,gBAAgB;IAChE;AACF;AAEA,IAAM,sBAED;QAAC,EAAE,UAAA,CAAW,CAAA,KAAM;IACvB,MAAM,aAAa,gOAAA;6DAAkB;gBAAC,EAAE,YAAAA,WAAAA,CAAW,CAAA;mBAAMA,WAAU;;;IACnE,IAAI,CAAC,WAAY,CAAA,OAAO;IAExB,MAAM,YAAY,aAAa,YAAY,UAAgC;IAC3E,IAAI,CAAC,UAAW,CAAA,OAAO;IACvB,OAAO,aAAA,GAAA,IAAA,6KAAA,EAAC,WAAA,CAAA,CAAU;AACpB;AA0BO,IAAM,wCACX,qKAAA,EACE;QAAC,EAAE,KAAA,EAAO,UAAA,CAAW,CAAA,KAAM;IACzB,OACE,aAAA,GAAA,IAAA,6KAAA,EAAC,uOAAA,EAAA;QAAiC;QAChC,UAAA,aAAA,GAAA,IAAA,6KAAA,EAAC,qBAAA;YAAoB;QAAA,CAAwB;IAAA,CAC/C;AAEJ,GACA,CAAC,MAAM;QAEL,0EAEA,sCACA;WAJA,KAAK,KAAA,KAAU,KAAK,KAAA,8BACf,UAAA,sEAAY,KAAA,gCAAe,UAAA,qDAAL,iBAAiB,KAAA,gCACvC,UAAA,sDAAL,kBAAiB,QAAA,iCAAkB,UAAA,sDAAL,kBAAiB,QAAA,gCAC1C,UAAA,wEAAY,IAAA,iCAAc,UAAA,sDAAL,kBAAiB,IAAA,gCACtC,UAAA,wEAAY,UAAA,iCAAoB,UAAA,sDAAL,kBAAiB,UAAA;;AAGvD,kCAAkC,WAAA,GAChC;AAEK,IAAM,8BAET;QAAC,EAAE,UAAA,CAAW,CAAA,KAAM;IACtB,MAAM,uBAAmB,4NAAA;2EAAkB;gBAAC,EAAE,OAAA,CAAQ,CAAA,KAAM;YAC1D,IAAI,QAAQ,IAAA,KAAS,OAAQ,CAAA,OAAO;YACpC,OAAO,QAAQ,WAAA,CAAY,MAAA;QAC7B,CAAC;;IAED,MAAM,yBAAqB,wKAAA;mEAAQ,MAAM;YACvC,OAAO,MAAM,IAAA,CAAK;gBAAE,QAAQ;YAAiB;2EAAG,CAAC,GAAG,QAClD,aAAA,GAAA,IAAA,6KAAA,EAAC,mCAAA;wBAEC;wBACA;oBAAA,GAFK;;QAKX;kEAAG;QAAC;QAAkB,UAAU;KAAC;IAEjC,OAAO;AACT;AAEA,4BAA4B,WAAA,GAAc","debugId":null}},
    {"offset": {"line": 9221, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/primitives/message/MessageError.tsx"],"sourcesContent":["\"use client\";\n\nimport { FC, PropsWithChildren } from \"react\";\nimport { useAssistantState } from \"../../context\";\n\nexport const MessagePrimitiveError: FC<PropsWithChildren> = ({ children }) => {\n  const hasError = useAssistantState(\n    ({ message }) =>\n      message.status?.type === \"incomplete\" &&\n      message.status.reason === \"error\",\n  );\n  return hasError ? <>{children}</> : null;\n};\n\nMessagePrimitiveError.displayName = \"MessagePrimitive.Error\";\n"],"names":[],"mappings":";;;;;AAGA,SAAS,yBAAyB;AAQd;;;;AANb,IAAM,wBAA+C;QAAC,EAAE,QAAA,CAAS,CAAA,KAAM;IAC5E,MAAM,eAAW,4NAAA;6DACf;gBAAC,EAAE,OAAA,CAAQ,CAAA;;mBACT,4BAAQ,MAAA,oEAAQ,IAAA,MAAS,gBACzB,QAAQ,MAAA,CAAO,MAAA,KAAW;;;IAE9B,OAAO,WAAW,aAAA,GAAA,IAAA,6KAAA,EAAA,kLAAA,EAAA;QAAG;IAAA,CAAS,IAAM;AACtC;AAEA,sBAAsB,WAAA,GAAc","debugId":null}},
    {"offset": {"line": 9251, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/primitives/message/MessagePartsGrouped.tsx"],"sourcesContent":["\"use client\";\n\nimport {\n  type ComponentType,\n  type FC,\n  memo,\n  PropsWithChildren,\n  useMemo,\n} from \"react\";\nimport {\n  useAssistantState,\n  PartByIndexProvider,\n  useAssistantApi,\n  TextMessagePartProvider,\n} from \"../../context\";\nimport { MessagePartPrimitiveText } from \"../messagePart/MessagePartText\";\nimport { MessagePartPrimitiveImage } from \"../messagePart/MessagePartImage\";\nimport type {\n  Unstable_AudioMessagePartComponent,\n  EmptyMessagePartComponent,\n  TextMessagePartComponent,\n  ImageMessagePartComponent,\n  SourceMessagePartComponent,\n  ToolCallMessagePartComponent,\n  ToolCallMessagePartProps,\n  FileMessagePartComponent,\n  ReasoningMessagePartComponent,\n} from \"../../types/MessagePartComponentTypes\";\nimport { MessagePartPrimitiveInProgress } from \"../messagePart/MessagePartInProgress\";\nimport { MessagePartStatus } from \"../../types/AssistantTypes\";\n\ntype MessagePartGroup = {\n  groupKey: string | undefined;\n  indices: number[];\n};\n\nexport type GroupingFunction = (parts: readonly any[]) => MessagePartGroup[];\n\n/**\n * Groups message parts by their parent ID.\n * Parts without a parent ID appear in their chronological position as individual groups.\n * Parts with the same parent ID are grouped together at the position of their first occurrence.\n */\nconst groupMessagePartsByParentId: GroupingFunction = (\n  parts: readonly any[],\n): MessagePartGroup[] => {\n  // Map maintains insertion order, so groups appear in order of first occurrence\n  const groupMap = new Map<string, number[]>();\n\n  // Process each part in order\n  for (let i = 0; i < parts.length; i++) {\n    const part = parts[i];\n    const parentId = part?.parentId as string | undefined;\n\n    // For parts without parentId, assign a unique group ID to maintain their position\n    const groupId = parentId ?? `__ungrouped_${i}`;\n\n    // Get or create the indices array for this group\n    const indices = groupMap.get(groupId) ?? [];\n    indices.push(i);\n    groupMap.set(groupId, indices);\n  }\n\n  // Convert map to array of groups\n  const groups: MessagePartGroup[] = [];\n  for (const [groupId, indices] of groupMap) {\n    // Extract parentId (undefined for ungrouped parts)\n    const groupKey = groupId.startsWith(\"__ungrouped_\") ? undefined : groupId;\n    groups.push({ groupKey, indices });\n  }\n\n  return groups;\n};\n\nconst useMessagePartsGrouped = (\n  groupingFunction: GroupingFunction,\n): MessagePartGroup[] => {\n  const parts = useAssistantState(({ message }) => message.parts);\n\n  return useMemo(() => {\n    if (parts.length === 0) {\n      return [];\n    }\n    return groupingFunction(parts);\n  }, [parts, groupingFunction]);\n};\n\nexport namespace MessagePrimitiveUnstable_PartsGrouped {\n  export type Props = {\n    /**\n     * Function that takes an array of message parts and returns an array of groups.\n     * Each group contains a key (for identification) and an array of indices.\n     *\n     * @example\n     * ```tsx\n     * // Group by parent ID (default behavior)\n     * groupingFunction={(parts) => {\n     *   const groups = new Map<string, number[]>();\n     *   parts.forEach((part, i) => {\n     *     const key = part.parentId ?? `__ungrouped_${i}`;\n     *     const indices = groups.get(key) ?? [];\n     *     indices.push(i);\n     *     groups.set(key, indices);\n     *   });\n     *   return Array.from(groups.entries()).map(([key, indices]) => ({\n     *     key: key.startsWith(\"__ungrouped_\") ? undefined : key,\n     *     indices\n     *   }));\n     * }}\n     * ```\n     *\n     * @example\n     * ```tsx\n     * // Group by tool name\n     * import { groupMessagePartsByToolName } from \"@assistant-ui/react\";\n     *\n     * <MessagePrimitive.Unstable_PartsGrouped\n     *   groupingFunction={groupMessagePartsByToolName}\n     *   components={{\n     *     Group: ({ key, indices, children }) => {\n     *       if (!key) return <>{children}</>;\n     *       return (\n     *         <div className=\"tool-group\">\n     *           <h4>Tool: {key}</h4>\n     *           {children}\n     *         </div>\n     *       );\n     *     }\n     *   }}\n     * />\n     * ```\n     */\n    groupingFunction: GroupingFunction;\n\n    /**\n     * Component configuration for rendering different types of message content.\n     *\n     * You can provide custom components for each content type (text, image, file, etc.)\n     * and configure tool rendering behavior. If not provided, default components will be used.\n     */\n    components:\n      | {\n          /** Component for rendering empty messages */\n          Empty?: EmptyMessagePartComponent | undefined;\n          /** Component for rendering text content */\n          Text?: TextMessagePartComponent | undefined;\n          /** Component for rendering reasoning content (typically hidden) */\n          Reasoning?: ReasoningMessagePartComponent | undefined;\n          /** Component for rendering source content */\n          Source?: SourceMessagePartComponent | undefined;\n          /** Component for rendering image content */\n          Image?: ImageMessagePartComponent | undefined;\n          /** Component for rendering file content */\n          File?: FileMessagePartComponent | undefined;\n          /** Component for rendering audio content (experimental) */\n          Unstable_Audio?: Unstable_AudioMessagePartComponent | undefined;\n          /** Configuration for tool call rendering */\n          tools?:\n            | {\n                /** Map of tool names to their specific components */\n                by_name?:\n                  | Record<string, ToolCallMessagePartComponent | undefined>\n                  | undefined;\n                /** Fallback component for unregistered tools */\n                Fallback?: ComponentType<ToolCallMessagePartProps> | undefined;\n              }\n            | {\n                /** Override component that handles all tool calls */\n                Override: ComponentType<ToolCallMessagePartProps>;\n              }\n            | undefined;\n\n          /**\n           * Component for rendering grouped message parts.\n           *\n           * When provided, this component will automatically wrap message parts that share\n           * the same group key as determined by the groupingFunction.\n           *\n           * The component receives:\n           * - `groupKey`: The group key (or undefined for ungrouped parts)\n           * - `indices`: Array of indices for the parts in this group\n           * - `children`: The rendered message part components\n           *\n           * @example\n           * ```tsx\n           * // Collapsible group\n           * Group: ({ groupKey, indices, children }) => {\n           *   if (!groupKey) return <>{children}</>;\n           *   return (\n           *     <details className=\"message-group\">\n           *       <summary>\n           *         Group {groupKey} ({indices.length} parts)\n           *       </summary>\n           *       <div className=\"group-content\">\n           *         {children}\n           *       </div>\n           *     </details>\n           *   );\n           * }\n           * ```\n           *\n           * @param groupKey - The group key (undefined for ungrouped parts)\n           * @param indices - Array of indices for the parts in this group\n           * @param children - Rendered message part components to display within the group\n           */\n          Group?: ComponentType<\n            PropsWithChildren<{\n              groupKey: string | undefined;\n              indices: number[];\n            }>\n          >;\n        }\n      | undefined;\n  };\n}\n\nconst ToolUIDisplay = ({\n  Fallback,\n  ...props\n}: {\n  Fallback: ToolCallMessagePartComponent | undefined;\n} & ToolCallMessagePartProps) => {\n  const Render = useAssistantState(({ toolUIs }) => {\n    const Render = toolUIs[props.toolName] ?? Fallback;\n    if (Array.isArray(Render)) return Render[0];\n    return Render;\n  });\n  if (!Render) return null;\n  return <Render {...props} />;\n};\n\nconst defaultComponents = {\n  Text: () => (\n    <p style={{ whiteSpace: \"pre-line\" }}>\n      <MessagePartPrimitiveText />\n      <MessagePartPrimitiveInProgress>\n        <span style={{ fontFamily: \"revert\" }}>{\" \\u25CF\"}</span>\n      </MessagePartPrimitiveInProgress>\n    </p>\n  ),\n  Reasoning: () => null,\n  Source: () => null,\n  Image: () => <MessagePartPrimitiveImage />,\n  File: () => null,\n  Unstable_Audio: () => null,\n  Group: ({ children }) => children,\n} satisfies MessagePrimitiveUnstable_PartsGrouped.Props[\"components\"];\n\ntype MessagePartComponentProps = {\n  components: MessagePrimitiveUnstable_PartsGrouped.Props[\"components\"];\n};\n\nconst MessagePartComponent: FC<MessagePartComponentProps> = ({\n  components: {\n    Text = defaultComponents.Text,\n    Reasoning = defaultComponents.Reasoning,\n    Image = defaultComponents.Image,\n    Source = defaultComponents.Source,\n    File = defaultComponents.File,\n    Unstable_Audio: Audio = defaultComponents.Unstable_Audio,\n    tools = {},\n  } = {},\n}) => {\n  const api = useAssistantApi();\n  const part = useAssistantState(({ part }) => part);\n\n  const type = part.type;\n  if (type === \"tool-call\") {\n    const addResult = (result: any) => api.part().addToolResult(result);\n    if (\"Override\" in tools)\n      return <tools.Override {...part} addResult={addResult} />;\n    const Tool = tools.by_name?.[part.toolName] ?? tools.Fallback;\n    return <ToolUIDisplay {...part} Fallback={Tool} addResult={addResult} />;\n  }\n\n  if (part.status?.type === \"requires-action\")\n    throw new Error(\"Encountered unexpected requires-action status\");\n\n  switch (type) {\n    case \"text\":\n      return <Text {...part} />;\n\n    case \"reasoning\":\n      return <Reasoning {...part} />;\n\n    case \"source\":\n      return <Source {...part} />;\n\n    case \"image\":\n      // eslint-disable-next-line jsx-a11y/alt-text\n      return <Image {...part} />;\n\n    case \"file\":\n      return <File {...part} />;\n\n    case \"audio\":\n      return <Audio {...part} />;\n\n    default:\n      const unhandledType: never = type;\n      throw new Error(`Unknown message part type: ${unhandledType}`);\n  }\n};\n\ntype MessagePartProps = {\n  partIndex: number;\n  components: MessagePrimitiveUnstable_PartsGrouped.Props[\"components\"];\n};\n\nconst MessagePartImpl: FC<MessagePartProps> = ({ partIndex, components }) => {\n  return (\n    <PartByIndexProvider index={partIndex}>\n      <MessagePartComponent components={components} />\n    </PartByIndexProvider>\n  );\n};\n\nconst MessagePart = memo(\n  MessagePartImpl,\n  (prev, next) =>\n    prev.partIndex === next.partIndex &&\n    prev.components?.Text === next.components?.Text &&\n    prev.components?.Reasoning === next.components?.Reasoning &&\n    prev.components?.Source === next.components?.Source &&\n    prev.components?.Image === next.components?.Image &&\n    prev.components?.File === next.components?.File &&\n    prev.components?.Unstable_Audio === next.components?.Unstable_Audio &&\n    prev.components?.tools === next.components?.tools &&\n    prev.components?.Group === next.components?.Group,\n);\n\nconst EmptyPartFallback: FC<{\n  status: MessagePartStatus;\n  component: TextMessagePartComponent;\n}> = ({ status, component: Component }) => {\n  return (\n    <TextMessagePartProvider text=\"\" isRunning={status.type === \"running\"}>\n      <Component type=\"text\" text=\"\" status={status} />\n    </TextMessagePartProvider>\n  );\n};\n\nconst COMPLETE_STATUS: MessagePartStatus = Object.freeze({\n  type: \"complete\",\n});\n\nconst EmptyPartsImpl: FC<MessagePartComponentProps> = ({ components }) => {\n  const status = useAssistantState(\n    (s) => (s.message.status ?? COMPLETE_STATUS) as MessagePartStatus,\n  );\n\n  if (components?.Empty) return <components.Empty status={status} />;\n\n  return (\n    <EmptyPartFallback\n      status={status}\n      component={components?.Text ?? defaultComponents.Text}\n    />\n  );\n};\n\nconst EmptyParts = memo(\n  EmptyPartsImpl,\n  (prev, next) =>\n    prev.components?.Empty === next.components?.Empty &&\n    prev.components?.Text === next.components?.Text,\n);\n\n/**\n * Renders the parts of a message grouped by a custom grouping function.\n *\n * This component allows you to group message parts based on any criteria you define.\n * The grouping function receives all message parts and returns an array of groups,\n * where each group has a key and an array of part indices.\n *\n * @example\n * ```tsx\n * // Group by parent ID (default behavior)\n * <MessagePrimitive.Unstable_PartsGrouped\n *   components={{\n *     Text: ({ text }) => <p className=\"message-text\">{text}</p>,\n *     Image: ({ image }) => <img src={image} alt=\"Message image\" />,\n *     Group: ({ groupKey, indices, children }) => {\n *       if (!groupKey) return <>{children}</>;\n *       return (\n *         <div className=\"parent-group border rounded p-4\">\n *           <h4>Parent ID: {groupKey}</h4>\n *           {children}\n *         </div>\n *       );\n *     }\n *   }}\n * />\n * ```\n *\n * @example\n * ```tsx\n * // Group by tool name\n * import { groupMessagePartsByToolName } from \"@assistant-ui/react\";\n *\n * <MessagePrimitive.Unstable_PartsGrouped\n *   groupingFunction={groupMessagePartsByToolName}\n *   components={{\n *     Group: ({ groupKey, indices, children }) => {\n *       if (!groupKey) return <>{children}</>;\n *       return (\n *         <div className=\"tool-group\">\n *           <h4>Tool: {groupKey}</h4>\n *           {children}\n *         </div>\n *       );\n *     }\n *   }}\n * />\n * ```\n */\nexport const MessagePrimitiveUnstable_PartsGrouped: FC<\n  MessagePrimitiveUnstable_PartsGrouped.Props\n> = ({ groupingFunction, components }) => {\n  const contentLength = useAssistantState(\n    ({ message }) => message.parts.length,\n  );\n  const messageGroups = useMessagePartsGrouped(groupingFunction);\n\n  const partsElements = useMemo(() => {\n    if (contentLength === 0) {\n      return <EmptyParts components={components} />;\n    }\n\n    return messageGroups.map((group, groupIndex) => {\n      const GroupComponent = components?.Group ?? defaultComponents.Group;\n\n      return (\n        <GroupComponent\n          key={`group-${groupIndex}-${group.groupKey ?? \"ungrouped\"}`}\n          groupKey={group.groupKey}\n          indices={group.indices}\n        >\n          {group.indices.map((partIndex) => (\n            <MessagePart\n              key={partIndex}\n              partIndex={partIndex}\n              components={components}\n            />\n          ))}\n        </GroupComponent>\n      );\n    });\n  }, [messageGroups, components, contentLength]);\n\n  return <>{partsElements}</>;\n};\n\nMessagePrimitiveUnstable_PartsGrouped.displayName =\n  \"MessagePrimitive.Unstable_PartsGrouped\";\n\n/**\n * Renders the parts of a message grouped by their parent ID.\n * This is a convenience wrapper around Unstable_PartsGrouped with parent ID grouping.\n *\n * @deprecated Use MessagePrimitive.Unstable_PartsGrouped instead for more flexibility\n */\nexport const MessagePrimitiveUnstable_PartsGroupedByParentId: FC<\n  Omit<MessagePrimitiveUnstable_PartsGrouped.Props, \"groupingFunction\">\n> = ({ components, ...props }) => {\n  return (\n    <MessagePrimitiveUnstable_PartsGrouped\n      {...props}\n      components={components}\n      groupingFunction={groupMessagePartsByParentId}\n    />\n  );\n};\n\nMessagePrimitiveUnstable_PartsGroupedByParentId.displayName =\n  \"MessagePrimitive.Unstable_PartsGroupedByParentId\";\n"],"names":["Render","part"],"mappings":"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","debugId":null}},
    {"offset": {"line": 9522, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/primitives/message/index.ts"],"sourcesContent":["export { MessagePrimitiveRoot as Root } from \"./MessageRoot\";\nexport { MessagePrimitiveParts as Parts } from \"./MessageParts\";\nexport { MessagePrimitivePartByIndex as PartByIndex } from \"./MessageParts\";\nexport { MessagePrimitiveParts as Content } from \"./MessageParts\";\nexport { MessagePrimitiveIf as If } from \"./MessageIf\";\nexport { MessagePrimitiveAttachments as Attachments } from \"./MessageAttachments\";\nexport { MessagePrimitiveAttachmentByIndex as AttachmentByIndex } from \"./MessageAttachments\";\nexport { MessagePrimitiveError as Error } from \"./MessageError\";\nexport {\n  MessagePrimitiveUnstable_PartsGrouped as Unstable_PartsGrouped,\n  MessagePrimitiveUnstable_PartsGroupedByParentId as Unstable_PartsGroupedByParentId,\n} from \"./MessagePartsGrouped\";\n"],"names":["MessagePrimitiveParts"],"mappings":";;AAAA,SAAiC,4BAAY;AAC7C,SAAkC,6BAAa;AAG/C,SAA+B,0BAAU;AACzC,SAAwC,mCAAmB;AAE3D,SAAkC,6BAAa;AAC/C","debugId":null}},
    {"offset": {"line": 9587, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/primitives/thread/ThreadRoot.tsx"],"sourcesContent":["\"use client\";\n\nimport { Primitive } from \"@radix-ui/react-primitive\";\nimport { type ComponentRef, forwardRef, ComponentPropsWithoutRef } from \"react\";\n\nexport namespace ThreadPrimitiveRoot {\n  export type Element = ComponentRef<typeof Primitive.div>;\n  /**\n   * Props for the ThreadPrimitive.Root component.\n   * Accepts all standard div element props.\n   */\n  export type Props = ComponentPropsWithoutRef<typeof Primitive.div>;\n}\n\n/**\n * The root container component for a thread.\n *\n * This component serves as the foundational wrapper for all thread-related components.\n * It provides the basic structure and context needed for thread functionality.\n *\n * @example\n * ```tsx\n * <ThreadPrimitive.Root>\n *   <ThreadPrimitive.Viewport>\n *     <ThreadPrimitive.Messages components={{ Message: MyMessage }} />\n *   </ThreadPrimitive.Viewport>\n * </ThreadPrimitive.Root>\n * ```\n */\nexport const ThreadPrimitiveRoot = forwardRef<\n  ThreadPrimitiveRoot.Element,\n  ThreadPrimitiveRoot.Props\n>((props, ref) => {\n  return <Primitive.div {...props} ref={ref} />;\n});\n\nThreadPrimitiveRoot.displayName = \"ThreadPrimitive.Root\";\n"],"names":[],"mappings":";;;;;AAEA,SAAS,iBAAiB;AAC1B,SAA4B,kBAA4C;AA8B/D;;;;;AAJF,IAAM,0BAAsB,2KAAA,EAGjC,CAAC,OAAO,QAAQ;IAChB,OAAO,aAAA,GAAA,IAAA,6KAAA,EAAC,qLAAA,CAAU,GAAA,EAAV;QAAe,GAAG,KAAA;QAAO;IAAA,CAAU;AAC7C,CAAC;AAED,oBAAoB,WAAA,GAAc","debugId":null}},
    {"offset": {"line": 9612, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/primitives/thread/ThreadEmpty.tsx"],"sourcesContent":["\"use client\";\n\nimport type { FC, PropsWithChildren } from \"react\";\nimport { useAssistantState } from \"../../context\";\n\nexport namespace ThreadPrimitiveEmpty {\n  export type Props = PropsWithChildren;\n}\n\nexport const ThreadPrimitiveEmpty: FC<ThreadPrimitiveEmpty.Props> = ({\n  children,\n}) => {\n  const empty = useAssistantState(({ thread }) => thread.messages.length === 0);\n  return empty ? children : null;\n};\n\nThreadPrimitiveEmpty.displayName = \"ThreadPrimitive.Empty\";\n"],"names":[],"mappings":";;;;;AAGA,SAAS,yBAAyB;;;AAM3B,IAAM,uBAAuD;QAAC,EACnE,QAAA,EACF,KAAM;IACJ,MAAM,YAAQ,4NAAA;yDAAkB;gBAAC,EAAE,MAAA,CAAO,CAAA;mBAAM,OAAO,QAAA,CAAS,MAAA,KAAW,CAAC;;;IAC5E,OAAO,QAAQ,WAAW;AAC5B;AAEA,qBAAqB,WAAA,GAAc","debugId":null}},
    {"offset": {"line": 9637, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/primitives/thread/ThreadIf.tsx"],"sourcesContent":["\"use client\";\n\nimport type { FC, PropsWithChildren } from \"react\";\nimport { useAssistantState } from \"../../context\";\nimport type { RequireAtLeastOne } from \"../../utils/RequireAtLeastOne\";\n\ntype ThreadIfFilters = {\n  empty: boolean | undefined;\n  running: boolean | undefined;\n  disabled: boolean | undefined;\n};\n\ntype UseThreadIfProps = RequireAtLeastOne<ThreadIfFilters>;\n\nconst useThreadIf = (props: UseThreadIfProps) => {\n  return useAssistantState(({ thread }) => {\n    if (props.empty === true && thread.messages.length !== 0) return false;\n    if (props.empty === false && thread.messages.length === 0) return false;\n    if (props.running === true && !thread.isRunning) return false;\n    if (props.running === false && thread.isRunning) return false;\n    if (props.disabled === true && !thread.isDisabled) return false;\n    if (props.disabled === false && thread.isDisabled) return false;\n\n    return true;\n  });\n};\n\nexport namespace ThreadPrimitiveIf {\n  export type Props = PropsWithChildren<UseThreadIfProps>;\n}\n\nexport const ThreadPrimitiveIf: FC<ThreadPrimitiveIf.Props> = ({\n  children,\n  ...query\n}) => {\n  const result = useThreadIf(query);\n  return result ? children : null;\n};\n\nThreadPrimitiveIf.displayName = \"ThreadPrimitive.If\";\n"],"names":[],"mappings":";;;;;AAGA,SAAS,yBAAyB;;;AAWlC,IAAM,cAAc,CAAC,UAA4B;IAC/C,WAAO,4NAAA;yCAAkB;gBAAC,EAAE,MAAA,CAAO,CAAA,KAAM;YACvC,IAAI,MAAM,KAAA,KAAU,QAAQ,OAAO,QAAA,CAAS,MAAA,KAAW,EAAG,CAAA,OAAO;YACjE,IAAI,MAAM,KAAA,KAAU,SAAS,OAAO,QAAA,CAAS,MAAA,KAAW,EAAG,CAAA,OAAO;YAClE,IAAI,MAAM,OAAA,KAAY,QAAQ,CAAC,OAAO,SAAA,CAAW,CAAA,OAAO;YACxD,IAAI,MAAM,OAAA,KAAY,SAAS,OAAO,SAAA,CAAW,CAAA,OAAO;YACxD,IAAI,MAAM,QAAA,KAAa,QAAQ,CAAC,OAAO,UAAA,CAAY,CAAA,OAAO;YAC1D,IAAI,MAAM,QAAA,KAAa,SAAS,OAAO,UAAA,CAAY,CAAA,OAAO;YAE1D,OAAO;QACT,CAAC;;AACH;AAMO,IAAM,oBAAiD;QAAC,EAC7D,QAAA,EACA,GAAG,OACL,KAAM;IACJ,MAAM,SAAS,YAAY,KAAK;IAChC,OAAO,SAAS,WAAW;AAC7B;AAEA,kBAAkB,WAAA,GAAc","debugId":null}},
    {"offset": {"line": 9671, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/context/react/hooks/useAssistantEvent.ts"],"sourcesContent":["import { useEffect, useRef } from \"react\";\nimport { useAssistantApi } from \"../../react/AssistantApiContext\";\nimport {\n  AssistantEvent,\n  AssistantEventCallback,\n  AssistantEventSelector,\n  normalizeEventSelector,\n} from \"../../../types/EventTypes\";\n\nexport const useAssistantEvent = <TEvent extends AssistantEvent>(\n  selector: AssistantEventSelector<TEvent>,\n  callback: AssistantEventCallback<TEvent>,\n) => {\n  const api = useAssistantApi();\n  const callbackRef = useRef(callback);\n  useEffect(() => {\n    callbackRef.current = callback;\n  });\n\n  const { scope, event } = normalizeEventSelector(selector);\n  useEffect(\n    () => api.on({ scope, event }, (e) => callbackRef.current(e)),\n    [api, scope, event],\n  );\n};\n"],"names":[],"mappings":";;;;;AAAA,SAAS,WAAW,cAAc;AAClC,SAAS,uBAAuB;AAChC;;;;AAOO,IAAM,oBAAoB,CAC/B,UACA,aACG;IACH,MAAM,UAAM,mNAAA,CAAgB;IAC5B,MAAM,kBAAc,uKAAA,EAAO,QAAQ;IACnC,IAAA,0KAAA;uCAAU,MAAM;YACd,YAAY,OAAA,GAAU;QACxB,CAAC;;IAED,MAAM,EAAE,KAAA,EAAO,KAAA,CAAM,CAAA,OAAI,sMAAA,EAAuB,QAAQ;IACxD,IAAA,0KAAA;uCACE,IAAM,IAAI,EAAA,CAAG;gBAAE;gBAAO;YAAM;+CAAG,CAAC,IAAM,YAAY,OAAA,CAAQ,CAAC,CAAC;;sCAC5D;QAAC;QAAK;QAAO,KAAK;KAAA;AAEtB","debugId":null}},
    {"offset": {"line": 9710, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/utils/hooks/useOnResizeContent.tsx"],"sourcesContent":["import { useCallbackRef } from \"@radix-ui/react-use-callback-ref\";\nimport { useCallback } from \"react\";\nimport { useManagedRef } from \"./useManagedRef\";\n\nexport const useOnResizeContent = (callback: () => void) => {\n  const callbackRef = useCallbackRef(callback);\n\n  const refCallback = useCallback(\n    (el: HTMLElement) => {\n      const resizeObserver = new ResizeObserver(() => {\n        callbackRef();\n      });\n\n      const mutationObserver = new MutationObserver(() => {\n        callbackRef();\n      });\n\n      resizeObserver.observe(el);\n      mutationObserver.observe(el, {\n        childList: true,\n        subtree: true,\n        attributes: true,\n        characterData: true,\n      });\n\n      return () => {\n        resizeObserver.disconnect();\n        mutationObserver.disconnect();\n      };\n    },\n    [callbackRef],\n  );\n\n  return useManagedRef(refCallback);\n};\n"],"names":[],"mappings":";;;;;AAAA,SAAS,sBAAsB;AAC/B,SAAS,mBAAmB;AAC5B,SAAS,qBAAqB;;;;AAEvB,IAAM,qBAAqB,CAAC,aAAyB;IAC1D,MAAM,kBAAc,uMAAA,EAAe,QAAQ;IAE3C,MAAM,kBAAc,4KAAA;uDAClB,CAAC,OAAoB;YACnB,MAAM,iBAAiB,IAAI;+DAAe,MAAM;oBAC9C,YAAY;gBACd,CAAC;;YAED,MAAM,mBAAmB,IAAI;+DAAiB,MAAM;oBAClD,YAAY;gBACd,CAAC;;YAED,eAAe,OAAA,CAAQ,EAAE;YACzB,iBAAiB,OAAA,CAAQ,IAAI;gBAC3B,WAAW;gBACX,SAAS;gBACT,YAAY;gBACZ,eAAe;YACjB,CAAC;YAED;+DAAO,MAAM;oBACX,eAAe,UAAA,CAAW;oBAC1B,iBAAiB,UAAA,CAAW;gBAC9B;;QACF;sDACA;QAAC,WAAW;KAAA;IAGd,WAAO,yMAAA,EAAc,WAAW;AAClC","debugId":null}},
    {"offset": {"line": 9760, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/primitives/thread/useThreadViewportAutoScroll.tsx"],"sourcesContent":["\"use client\";\n\nimport { useComposedRefs } from \"@radix-ui/react-compose-refs\";\nimport { RefCallback, useCallback, useRef } from \"react\";\nimport { useAssistantEvent } from \"../../context\";\nimport { useOnResizeContent } from \"../../utils/hooks/useOnResizeContent\";\nimport { useOnScrollToBottom } from \"../../utils/hooks/useOnScrollToBottom\";\nimport { useManagedRef } from \"../../utils/hooks/useManagedRef\";\nimport { writableStore } from \"../../context/ReadonlyStore\";\nimport { useThreadViewportStore } from \"../../context/react/ThreadViewportContext\";\n\nexport namespace useThreadViewportAutoScroll {\n  export type Options = {\n    autoScroll?: boolean | undefined;\n  };\n}\n\nexport const useThreadViewportAutoScroll = <TElement extends HTMLElement>({\n  autoScroll = true,\n}: useThreadViewportAutoScroll.Options): RefCallback<TElement> => {\n  const divRef = useRef<TElement>(null);\n\n  const threadViewportStore = useThreadViewportStore();\n\n  const lastScrollTop = useRef<number>(0);\n\n  // bug: when ScrollToBottom's button changes its disabled state, the scroll stops\n  // fix: delay the state change until the scroll is done\n  const isScrollingToBottomRef = useRef(false);\n\n  const scrollToBottom = useCallback(\n    (behavior: ScrollBehavior) => {\n      const div = divRef.current;\n      if (!div || !autoScroll) return;\n\n      isScrollingToBottomRef.current = true;\n      div.scrollTo({ top: div.scrollHeight, behavior });\n    },\n    [autoScroll],\n  );\n\n  const handleScroll = () => {\n    const div = divRef.current;\n    if (!div) return;\n\n    const isAtBottom = threadViewportStore.getState().isAtBottom;\n    const newIsAtBottom =\n      div.scrollHeight - div.scrollTop <= div.clientHeight + 1; // TODO figure out why +1 is needed\n\n    if (!newIsAtBottom && lastScrollTop.current < div.scrollTop) {\n      // ignore scroll down\n    } else {\n      if (newIsAtBottom) {\n        isScrollingToBottomRef.current = false;\n      }\n\n      if (newIsAtBottom !== isAtBottom) {\n        writableStore(threadViewportStore).setState({\n          isAtBottom: newIsAtBottom,\n        });\n      }\n    }\n\n    lastScrollTop.current = div.scrollTop;\n  };\n\n  const resizeRef = useOnResizeContent(() => {\n    if (\n      isScrollingToBottomRef.current ||\n      threadViewportStore.getState().isAtBottom\n    ) {\n      scrollToBottom(\"instant\");\n    }\n\n    handleScroll();\n  });\n\n  const scrollRef = useManagedRef<HTMLElement>((el) => {\n    el.addEventListener(\"scroll\", handleScroll);\n    return () => {\n      el.removeEventListener(\"scroll\", handleScroll);\n    };\n  });\n\n  useOnScrollToBottom(() => {\n    scrollToBottom(\"auto\");\n  });\n\n  // autoscroll on run start\n  useAssistantEvent(\"thread.run-start\", () => scrollToBottom(\"auto\"));\n\n  const autoScrollRef = useComposedRefs<TElement>(resizeRef, scrollRef, divRef);\n  return autoScrollRef as RefCallback<TElement>;\n};\n"],"names":[],"mappings":";;;;;AAEA,SAAS,uBAAuB;AAChC,SAAsB,aAAa,cAAc;AACjD,SAAS,yBAAyB;AAClC,SAAS,0BAA0B;AACnC,SAAS,2BAA2B;AACpC,SAAS,qBAAqB;AAC9B,SAAS,qBAAqB;AAC9B,SAAS,8BAA8B;;;;;;;;;;AAQhC,IAAM,8BAA8B;QAA+B,EACxE,aAAa,IAAA,EACf,KAAkE;IAChE,MAAM,aAAS,uKAAA,EAAiB,IAAI;IAEpC,MAAM,0BAAsB,4NAAA,CAAuB;IAEnD,MAAM,oBAAgB,uKAAA,EAAe,CAAC;IAItC,MAAM,6BAAyB,uKAAA,EAAO,KAAK;IAE3C,MAAM,qBAAiB,4KAAA;mEACrB,CAAC,aAA6B;YAC5B,MAAM,MAAM,OAAO,OAAA;YACnB,IAAI,CAAC,OAAO,CAAC,WAAY,CAAA;YAEzB,uBAAuB,OAAA,GAAU;YACjC,IAAI,QAAA,CAAS;gBAAE,KAAK,IAAI,YAAA;gBAAc;YAAS,CAAC;QAClD;kEACA;QAAC,UAAU;KAAA;IAGb,MAAM,eAAe,MAAM;QACzB,MAAM,MAAM,OAAO,OAAA;QACnB,IAAI,CAAC,IAAK,CAAA;QAEV,MAAM,aAAa,oBAAoB,QAAA,CAAS,EAAE,UAAA;QAClD,MAAM,gBACJ,IAAI,YAAA,GAAe,IAAI,SAAA,IAAa,IAAI,YAAA,GAAe;QAEzD,IAAI,CAAC,iBAAiB,cAAc,OAAA,GAAU,IAAI,SAAA,EAAW,CAE7D,OAAO;YACL,IAAI,eAAe;gBACjB,uBAAuB,OAAA,GAAU;YACnC;YAEA,IAAI,kBAAkB,YAAY;gBAChC,IAAA,kMAAA,EAAc,mBAAmB,EAAE,QAAA,CAAS;oBAC1C,YAAY;gBACd,CAAC;YACH;QACF;QAEA,cAAc,OAAA,GAAU,IAAI,SAAA;IAC9B;IAEA,MAAM,gBAAY,mNAAA;qEAAmB,MAAM;YACzC,IACE,uBAAuB,OAAA,IACvB,oBAAoB,QAAA,CAAS,EAAE,UAAA,EAC/B;gBACA,eAAe,SAAS;YAC1B;YAEA,aAAa;QACf,CAAC;;IAED,MAAM,gBAAY,yMAAA;gEAA2B,CAAC,OAAO;YACnD,GAAG,gBAAA,CAAiB,UAAU,YAAY;YAC1C;wEAAO,MAAM;oBACX,GAAG,mBAAA,CAAoB,UAAU,YAAY;gBAC/C;;QACF,CAAC;;IAED,IAAA,qNAAA;2DAAoB,MAAM;YACxB,eAAe,MAAM;QACvB,CAAC;;IAGD,IAAA,4NAAA,EAAkB;yDAAoB,IAAM,eAAe,MAAM,CAAC;;IAElE,MAAM,oBAAgB,iMAAA,EAA0B,WAAW,WAAW,MAAM;IAC5E,OAAO;AACT","debugId":null}},
    {"offset": {"line": 9853, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/primitives/thread/ThreadViewport.tsx"],"sourcesContent":["\"use client\";\n\nimport { useComposedRefs } from \"@radix-ui/react-compose-refs\";\nimport { Primitive } from \"@radix-ui/react-primitive\";\nimport { type ComponentRef, forwardRef, ComponentPropsWithoutRef } from \"react\";\nimport { useThreadViewportAutoScroll } from \"./useThreadViewportAutoScroll\";\nimport { ThreadViewportProvider } from \"../../context/providers/ThreadViewportProvider\";\n\nexport namespace ThreadPrimitiveViewport {\n  export type Element = ComponentRef<typeof Primitive.div>;\n  export type Props = ComponentPropsWithoutRef<typeof Primitive.div> & {\n    /**\n     * Whether to automatically scroll to the bottom when new messages are added.\n     * When enabled, the viewport will automatically scroll to show the latest content.\n     * @default true\n     */\n    autoScroll?: boolean | undefined;\n  };\n}\n\nconst ThreadPrimitiveViewportScrollable = forwardRef<\n  ThreadPrimitiveViewport.Element,\n  ThreadPrimitiveViewport.Props\n>(({ autoScroll, children, ...rest }, forwardedRef) => {\n  const autoScrollRef = useThreadViewportAutoScroll<HTMLDivElement>({\n    autoScroll,\n  });\n\n  const ref = useComposedRefs(forwardedRef, autoScrollRef);\n\n  return (\n    <Primitive.div {...rest} ref={ref}>\n      {children}\n    </Primitive.div>\n  );\n});\n\nThreadPrimitiveViewportScrollable.displayName =\n  \"ThreadPrimitive.ViewportScrollable\";\n\n/**\n * A scrollable viewport container for thread messages.\n *\n * This component provides a scrollable area for displaying thread messages with\n * automatic scrolling capabilities. It manages the viewport state and provides\n * context for child components to access viewport-related functionality.\n *\n * @example\n * ```tsx\n * <ThreadPrimitive.Viewport autoScroll={true}>\n *   <ThreadPrimitive.Messages components={{ Message: MyMessage }} />\n * </ThreadPrimitive.Viewport>\n * ```\n */\nexport const ThreadPrimitiveViewport = forwardRef<\n  ThreadPrimitiveViewport.Element,\n  ThreadPrimitiveViewport.Props\n>((props, ref) => {\n  return (\n    <ThreadViewportProvider>\n      <ThreadPrimitiveViewportScrollable {...props} ref={ref} />\n    </ThreadViewportProvider>\n  );\n});\n\nThreadPrimitiveViewport.displayName = \"ThreadPrimitive.Viewport\";\n"],"names":[],"mappings":";;;;;AAEA,SAAS,uBAAuB;AAChC,SAAS,iBAAiB;AAC1B,SAA4B,kBAA4C;AACxE,SAAS,mCAAmC;AAC5C,SAAS,8BAA8B;AAyBnC;;;;;;;;AAXJ,IAAM,wCAAoC,2KAAA,EAGxC,QAAoC,iBAAiB;QAApD,EAAE,UAAA,EAAY,QAAA,EAAU,GAAG,KAAK,CAAA;IACjC,MAAM,gBAAgB,+OAAA,EAA4C;QAChE;IACF,CAAC;IAED,MAAM,UAAM,iMAAA,EAAgB,cAAc,aAAa;IAEvD,OACE,aAAA,GAAA,IAAA,6KAAA,EAAC,qLAAA,CAAU,GAAA,EAAV;QAAe,GAAG,IAAA;QAAM;QACtB;IAAA,CACH;AAEJ,CAAC;AAED,kCAAkC,WAAA,GAChC;AAgBK,IAAM,8BAA0B,2KAAA,EAGrC,CAAC,OAAO,QAAQ;IAChB,OACE,aAAA,GAAA,IAAA,6KAAA,EAAC,iOAAA,EAAA;QACC,UAAA,aAAA,GAAA,IAAA,6KAAA,EAAC,mCAAA;YAAmC,GAAG,KAAA;YAAO;QAAA,CAAU;IAAA,CAC1D;AAEJ,CAAC;AAED,wBAAwB,WAAA,GAAc","debugId":null}},
    {"offset": {"line": 9899, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/context/providers/MessageProvider.tsx"],"sourcesContent":["\"use client\";\n\nimport { useMemo, type FC, type PropsWithChildren } from \"react\";\nimport {\n  AssistantApi,\n  AssistantProvider,\n  useAssistantApi,\n  createAssistantApiField,\n} from \"../react/AssistantApiContext\";\nimport {\n  checkEventScope,\n  normalizeEventSelector,\n} from \"../../types/EventTypes\";\n\nexport const MessageByIndexProvider: FC<\n  PropsWithChildren<{\n    index: number;\n  }>\n> = ({ index, children }) => {\n  const api = useAssistantApi();\n  const api2 = useMemo(() => {\n    const getMessage = () => api.thread().message({ index });\n    return {\n      message: createAssistantApiField({\n        source: \"thread\",\n        query: { type: \"index\", index },\n        get: () => getMessage(),\n      }),\n      composer: createAssistantApiField({\n        source: \"message\",\n        query: {},\n        get: () => getMessage().composer,\n      }),\n      on(selector, callback) {\n        const { event, scope } = normalizeEventSelector(selector);\n        if (\n          !checkEventScope(\"composer\", scope, event) &&\n          !checkEventScope(\"message\", scope, event)\n        )\n          return api.on(selector, callback);\n\n        return api.on({ scope: \"thread\", event }, (e) => {\n          if (e.messageId === getMessage().getState().id) {\n            callback(e);\n          }\n        });\n      },\n    } satisfies Partial<AssistantApi>;\n  }, [api, index]);\n\n  return <AssistantProvider api={api2}>{children}</AssistantProvider>;\n};\n"],"names":[],"mappings":";;;;;AAEA,SAAS,eAAgD;AACzD;AAMA;AAyCS;;;;;;AApCF,IAAM,yBAIT;QAAC,EAAE,KAAA,EAAO,QAAA,CAAS,CAAA,KAAM;IAC3B,MAAM,UAAM,mNAAA,CAAgB;IAC5B,MAAM,WAAO,wKAAA;gDAAQ,MAAM;YACzB,MAAM;mEAAa,IAAM,IAAI,MAAA,CAAO,EAAE,OAAA,CAAQ;wBAAE;oBAAM,CAAC;;YACvD,OAAO;gBACL,aAAS,2NAAA,EAAwB;oBAC/B,QAAQ;oBACR,OAAO;wBAAE,MAAM;wBAAS;oBAAM;oBAC9B,GAAA;gEAAK,IAAM,WAAW;;gBACxB,CAAC;gBACD,cAAU,2NAAA,EAAwB;oBAChC,QAAQ;oBACR,OAAO,CAAC;oBACR,GAAA;gEAAK,IAAM,WAAW,EAAE,QAAA;;gBAC1B,CAAC;gBACD,IAAG,QAAA,EAAU,QAAA,EAAU;oBACrB,MAAM,EAAE,KAAA,EAAO,KAAA,CAAM,CAAA,GAAI,0MAAA,EAAuB,QAAQ;oBACxD,IACE,KAAC,+LAAA,EAAgB,YAAY,OAAO,KAAK,KACzC,KAAC,+LAAA,EAAgB,WAAW,OAAO,KAAK,GAExC,OAAO,IAAI,EAAA,CAAG,UAAU,QAAQ;oBAElC,OAAO,IAAI,EAAA,CAAG;wBAAE,OAAO;wBAAU;oBAAM;gEAAG,CAAC,MAAM;4BAC/C,IAAI,EAAE,SAAA,KAAc,WAAW,EAAE,QAAA,CAAS,EAAE,EAAA,EAAI;gCAC9C,SAAS,CAAC;4BACZ;wBACF,CAAC;;gBACH;YACF;QACF;+CAAG;QAAC;QAAK,KAAK;KAAC;IAEf,OAAO,aAAA,GAAA,IAAA,6KAAA,EAAC,qNAAA,EAAA;QAAkB,KAAK;QAAO;IAAA,CAAS;AACjD","debugId":null}},
    {"offset": {"line": 9972, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/primitives/thread/ThreadMessages.tsx"],"sourcesContent":["\"use client\";\n\nimport { type ComponentType, type FC, memo, useMemo } from \"react\";\nimport { useAssistantState, MessageByIndexProvider } from \"../../context\";\nimport { ThreadMessage as ThreadMessageType } from \"../../types\";\n\nexport namespace ThreadPrimitiveMessages {\n  export type Props = {\n    /**\n     * Component configuration for rendering different types of messages and composers.\n     *\n     * You can provide either:\n     * 1. A single `Message` component that handles all message types\n     * 2. Specific components for `UserMessage` and `AssistantMessage` (with optional `SystemMessage`)\n     *\n     * Optional edit composer components can be provided to customize the editing experience\n     * for different message types when users edit their messages.\n     */\n    components:\n      | {\n          /** Component used to render all message types */\n          Message: ComponentType;\n          /** Component used when editing any message type */\n          EditComposer?: ComponentType | undefined;\n          /** Component used when editing user messages specifically */\n          UserEditComposer?: ComponentType | undefined;\n          /** Component used when editing assistant messages specifically */\n          AssistantEditComposer?: ComponentType | undefined;\n          /** Component used when editing system messages specifically */\n          SystemEditComposer?: ComponentType | undefined;\n          /** Component used to render user messages specifically */\n          UserMessage?: ComponentType | undefined;\n          /** Component used to render assistant messages specifically */\n          AssistantMessage?: ComponentType | undefined;\n          /** Component used to render system messages specifically */\n          SystemMessage?: ComponentType | undefined;\n        }\n      | {\n          /** Component used to render all message types (fallback) */\n          Message?: ComponentType | undefined;\n          /** Component used when editing any message type */\n          EditComposer?: ComponentType | undefined;\n          /** Component used when editing user messages specifically */\n          UserEditComposer?: ComponentType | undefined;\n          /** Component used when editing assistant messages specifically */\n          AssistantEditComposer?: ComponentType | undefined;\n          /** Component used when editing system messages specifically */\n          SystemEditComposer?: ComponentType | undefined;\n          /** Component used to render user messages */\n          UserMessage: ComponentType;\n          /** Component used to render assistant messages */\n          AssistantMessage: ComponentType;\n          /** Component used to render system messages */\n          SystemMessage?: ComponentType | undefined;\n        };\n  };\n}\n\nconst isComponentsSame = (\n  prev: ThreadPrimitiveMessages.Props[\"components\"],\n  next: ThreadPrimitiveMessages.Props[\"components\"],\n) => {\n  return (\n    prev.Message === next.Message &&\n    prev.EditComposer === next.EditComposer &&\n    prev.UserEditComposer === next.UserEditComposer &&\n    prev.AssistantEditComposer === next.AssistantEditComposer &&\n    prev.SystemEditComposer === next.SystemEditComposer &&\n    prev.UserMessage === next.UserMessage &&\n    prev.AssistantMessage === next.AssistantMessage &&\n    prev.SystemMessage === next.SystemMessage\n  );\n};\n\nconst DEFAULT_SYSTEM_MESSAGE = () => null;\n\nconst getComponent = (\n  components: ThreadPrimitiveMessages.Props[\"components\"],\n  role: ThreadMessageType[\"role\"],\n  isEditing: boolean,\n) => {\n  switch (role) {\n    case \"user\":\n      if (isEditing) {\n        return (\n          components.UserEditComposer ??\n          components.EditComposer ??\n          components.UserMessage ??\n          (components.Message as ComponentType)\n        );\n      } else {\n        return components.UserMessage ?? (components.Message as ComponentType);\n      }\n    case \"assistant\":\n      if (isEditing) {\n        return (\n          components.AssistantEditComposer ??\n          components.EditComposer ??\n          components.AssistantMessage ??\n          (components.Message as ComponentType)\n        );\n      } else {\n        return (\n          components.AssistantMessage ?? (components.Message as ComponentType)\n        );\n      }\n    case \"system\":\n      if (isEditing) {\n        return (\n          components.SystemEditComposer ??\n          components.EditComposer ??\n          components.SystemMessage ??\n          (components.Message as ComponentType)\n        );\n      } else {\n        return components.SystemMessage ?? DEFAULT_SYSTEM_MESSAGE;\n      }\n    default:\n      const _exhaustiveCheck: never = role;\n      throw new Error(`Unknown message role: ${_exhaustiveCheck}`);\n  }\n};\n\ntype ThreadMessageComponentProps = {\n  components: ThreadPrimitiveMessages.Props[\"components\"];\n};\n\nconst ThreadMessageComponent: FC<ThreadMessageComponentProps> = ({\n  components,\n}) => {\n  const role = useAssistantState(({ message }) => message.role);\n  const isEditing = useAssistantState(\n    ({ message }) => message.composer.isEditing,\n  );\n  const Component = getComponent(components, role, isEditing);\n\n  return <Component />;\n};\nexport namespace ThreadPrimitiveMessageByIndex {\n  export type Props = {\n    index: number;\n    components: ThreadPrimitiveMessages.Props[\"components\"];\n  };\n}\n\n/**\n * Renders a single message at the specified index in the current thread.\n *\n * This component provides message context for a specific message in the thread\n * and renders it using the provided component configuration.\n *\n * @example\n * ```tsx\n * <ThreadPrimitive.MessageByIndex\n *   index={0}\n *   components={{\n *     UserMessage: MyUserMessage,\n *     AssistantMessage: MyAssistantMessage\n *   }}\n * />\n * ```\n */\nexport const ThreadPrimitiveMessageByIndex: FC<ThreadPrimitiveMessageByIndex.Props> =\n  memo(\n    ({ index, components }) => {\n      return (\n        <MessageByIndexProvider index={index}>\n          <ThreadMessageComponent components={components} />\n        </MessageByIndexProvider>\n      );\n    },\n    (prev, next) =>\n      prev.index === next.index &&\n      isComponentsSame(prev.components, next.components),\n  );\n\nThreadPrimitiveMessageByIndex.displayName = \"ThreadPrimitive.MessageByIndex\";\n\n/**\n * Renders all messages in the current thread using the provided component configuration.\n *\n * This component automatically renders all messages in the thread, providing the appropriate\n * message context for each message. It handles different message types (user, assistant, system)\n * and supports editing mode through the provided edit composer components.\n *\n * @example\n * ```tsx\n * <ThreadPrimitive.Messages\n *   components={{\n *     UserMessage: MyUserMessage,\n *     AssistantMessage: MyAssistantMessage,\n *     EditComposer: MyEditComposer\n *   }}\n * />\n * ```\n */\nexport const ThreadPrimitiveMessagesImpl: FC<ThreadPrimitiveMessages.Props> = ({\n  components,\n}) => {\n  const messagesLength = useAssistantState(\n    ({ thread }) => thread.messages.length,\n  );\n\n  const messageElements = useMemo(() => {\n    if (messagesLength === 0) return null;\n    return Array.from({ length: messagesLength }, (_, index) => (\n      <ThreadPrimitiveMessageByIndex\n        key={index}\n        index={index}\n        components={components}\n      />\n    ));\n  }, [messagesLength, components]);\n\n  return messageElements;\n};\n\nThreadPrimitiveMessagesImpl.displayName = \"ThreadPrimitive.Messages\";\n\nexport const ThreadPrimitiveMessages = memo(\n  ThreadPrimitiveMessagesImpl,\n  (prev, next) => isComponentsSame(prev.components, next.components),\n);\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 10085, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/primitives/thread/ThreadScrollToBottom.tsx"],"sourcesContent":["\"use client\";\n\nimport {\n  ActionButtonElement,\n  ActionButtonProps,\n  createActionButton,\n} from \"../../utils/createActionButton\";\nimport { useCallback } from \"react\";\nimport {\n  useThreadViewport,\n  useThreadViewportStore,\n} from \"../../context/react/ThreadViewportContext\";\n\nconst useThreadScrollToBottom = () => {\n  const isAtBottom = useThreadViewport((s) => s.isAtBottom);\n\n  const threadViewportStore = useThreadViewportStore();\n\n  const handleScrollToBottom = useCallback(() => {\n    threadViewportStore.getState().scrollToBottom();\n  }, [threadViewportStore]);\n\n  if (isAtBottom) return null;\n  return handleScrollToBottom;\n};\n\nexport namespace ThreadPrimitiveScrollToBottom {\n  export type Element = ActionButtonElement;\n  export type Props = ActionButtonProps<typeof useThreadScrollToBottom>;\n}\n\nexport const ThreadPrimitiveScrollToBottom = createActionButton(\n  \"ThreadPrimitive.ScrollToBottom\",\n  useThreadScrollToBottom,\n);\n"],"names":[],"mappings":";;;;;AAEA;AAKA,SAAS,mBAAmB;AAC5B;;;;;AAKA,IAAM,0BAA0B,MAAM;IACpC,MAAM,iBAAa,uNAAA;iEAAkB,CAAC,IAAM,EAAE,UAAU;;IAExD,MAAM,0BAAsB,4NAAA,CAAuB;IAEnD,MAAM,2BAAuB,4KAAA;qEAAY,MAAM;YAC7C,oBAAoB,QAAA,CAAS,EAAE,cAAA,CAAe;QAChD;oEAAG;QAAC,mBAAmB;KAAC;IAExB,IAAI,WAAY,CAAA,OAAO;IACvB,OAAO;AACT;AAOO,IAAM,oCAAgC,0MAAA,EAC3C,kCACA","debugId":null}},
    {"offset": {"line": 10119, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/primitives/thread/ThreadSuggestion.tsx"],"sourcesContent":["\"use client\";\n\nimport {\n  ActionButtonElement,\n  ActionButtonProps,\n  createActionButton,\n} from \"../../utils/createActionButton\";\nimport { useCallback } from \"react\";\nimport { useAssistantState, useAssistantApi } from \"../../context\";\n\nconst useThreadSuggestion = ({\n  prompt,\n  autoSend,\n}: {\n  prompt: string;\n  method?: \"replace\";\n  autoSend?: boolean | undefined;\n}) => {\n  const api = useAssistantApi();\n  const disabled = useAssistantState(({ thread }) => thread.isDisabled);\n\n  const callback = useCallback(() => {\n    const isRunning = api.thread().getState().isRunning;\n    if (autoSend && !isRunning) {\n      api.thread().append(prompt);\n    } else {\n      api.composer().setText(prompt);\n    }\n  }, [api, autoSend, prompt]);\n\n  if (disabled) return null;\n  return callback;\n};\n\nexport namespace ThreadPrimitiveSuggestion {\n  export type Element = ActionButtonElement;\n  export type Props = ActionButtonProps<typeof useThreadSuggestion>;\n}\n\nexport const ThreadPrimitiveSuggestion = createActionButton(\n  \"ThreadPrimitive.Suggestion\",\n  useThreadSuggestion,\n  [\"prompt\", \"autoSend\", \"method\"],\n);\n"],"names":[],"mappings":";;;;;AAEA;AAKA,SAAS,mBAAmB;;AAC5B,SAAS,mBAAmB,uBAAuB;;;;;AAEnD,IAAM,sBAAsB;QAAC,EAC3B,MAAA,EACA,QAAA,EACF,KAIM;IACJ,MAAM,UAAM,mNAAA,CAAgB;IAC5B,MAAM,eAAW,4NAAA;2DAAkB;gBAAC,EAAE,MAAA,CAAO,CAAA;mBAAM,OAAO,UAAU;;;IAEpE,MAAM,eAAW,4KAAA;qDAAY,MAAM;YACjC,MAAM,YAAY,IAAI,MAAA,CAAO,EAAE,QAAA,CAAS,EAAE,SAAA;YAC1C,IAAI,YAAY,CAAC,WAAW;gBAC1B,IAAI,MAAA,CAAO,EAAE,MAAA,CAAO,MAAM;YAC5B,OAAO;gBACL,IAAI,QAAA,CAAS,EAAE,OAAA,CAAQ,MAAM;YAC/B;QACF;oDAAG;QAAC;QAAK;QAAU,MAAM;KAAC;IAE1B,IAAI,SAAU,CAAA,OAAO;IACrB,OAAO;AACT;AAOO,IAAM,gCAA4B,0MAAA,EACvC,8BACA,qBACA;IAAC;IAAU;IAAY,QAAQ;CAAA","debugId":null}},
    {"offset": {"line": 10169, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/primitives/thread/index.ts"],"sourcesContent":["export { ThreadPrimitiveRoot as Root } from \"./ThreadRoot\";\nexport { ThreadPrimitiveEmpty as Empty } from \"./ThreadEmpty\";\nexport { ThreadPrimitiveIf as If } from \"./ThreadIf\";\nexport { ThreadPrimitiveViewport as Viewport } from \"./ThreadViewport\";\nexport { ThreadPrimitiveMessages as Messages } from \"./ThreadMessages\";\nexport { ThreadPrimitiveMessageByIndex as MessageByIndex } from \"./ThreadMessages\";\nexport { ThreadPrimitiveScrollToBottom as ScrollToBottom } from \"./ThreadScrollToBottom\";\nexport { ThreadPrimitiveSuggestion as Suggestion } from \"./ThreadSuggestion\";\n"],"names":[],"mappings":";;AAAA,SAAgC,2BAAY;AAC5C,SAAiC,4BAAa;AAC9C,SAA8B,yBAAU;AACxC,SAAoC,+BAAgB;AACpD,SAAoC,+BAAgB;AAEpD,SAA0C,qCAAsB;AAChE,SAAsC,iCAAkB","debugId":null}},
    {"offset": {"line": 10231, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/primitives/attachment/AttachmentRoot.tsx"],"sourcesContent":["\"use client\";\n\nimport { Primitive } from \"@radix-ui/react-primitive\";\nimport { ComponentPropsWithoutRef, ComponentRef, forwardRef } from \"react\";\n\ntype PrimitiveDivProps = ComponentPropsWithoutRef<typeof Primitive.div>;\n\nexport namespace AttachmentPrimitiveRoot {\n  export type Element = ComponentRef<typeof Primitive.div>;\n  /**\n   * Props for the AttachmentPrimitive.Root component.\n   * Accepts all standard div element props.\n   */\n  export type Props = PrimitiveDivProps;\n}\n\n/**\n * The root container component for an attachment.\n *\n * This component provides the foundational wrapper for attachment-related components\n * and content. It serves as the context provider for attachment state and actions.\n *\n * @example\n * ```tsx\n * <AttachmentPrimitive.Root>\n *   <AttachmentPrimitive.Name />\n *   <AttachmentPrimitive.Remove />\n * </AttachmentPrimitive.Root>\n * ```\n */\nexport const AttachmentPrimitiveRoot = forwardRef<\n  AttachmentPrimitiveRoot.Element,\n  AttachmentPrimitiveRoot.Props\n>((props, ref) => {\n  return <Primitive.div {...props} ref={ref} />;\n});\n\nAttachmentPrimitiveRoot.displayName = \"AttachmentPrimitive.Root\";\n"],"names":[],"mappings":";;;;;AAEA,SAAS,iBAAiB;AAC1B,SAAiD,kBAAkB;AA+B1D;;;;;AAJF,IAAM,8BAA0B,2KAAA,EAGrC,CAAC,OAAO,QAAQ;IAChB,OAAO,aAAA,GAAA,IAAA,6KAAA,EAAC,qLAAA,CAAU,GAAA,EAAV;QAAe,GAAG,KAAA;QAAO;IAAA,CAAU;AAC7C,CAAC;AAED,wBAAwB,WAAA,GAAc","debugId":null}},
    {"offset": {"line": 10256, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/primitives/attachment/AttachmentThumb.tsx"],"sourcesContent":["\"use client\";\n\nimport { ComponentPropsWithoutRef, forwardRef, type ComponentRef } from \"react\";\nimport { useAssistantState } from \"../../context\";\nimport { Primitive } from \"@radix-ui/react-primitive\";\n\ntype PrimitiveDivProps = ComponentPropsWithoutRef<typeof Primitive.div>;\n\nexport namespace AttachmentPrimitiveThumb {\n  export type Element = ComponentRef<typeof Primitive.div>;\n  export type Props = PrimitiveDivProps;\n}\n\nexport const AttachmentPrimitiveThumb = forwardRef<\n  AttachmentPrimitiveThumb.Element,\n  AttachmentPrimitiveThumb.Props\n>((props, ref) => {\n  const ext = useAssistantState(({ attachment }) => {\n    const parts = attachment.name.split(\".\");\n    return parts.length > 1 ? parts.pop()! : \"\";\n  });\n  return (\n    <Primitive.div {...props} ref={ref}>\n      .{ext}\n    </Primitive.div>\n  );\n});\n\nAttachmentPrimitiveThumb.displayName = \"AttachmentPrimitive.Thumb\";\n"],"names":[],"mappings":";;;;;AAEA,SAAmC,kBAAqC;AACxE,SAAS,yBAAyB;AAClC,SAAS,iBAAiB;AAkBtB;;;;;;AATG,IAAM,+BAA2B,2KAAA,EAGtC,CAAC,OAAO,QAAQ;IAChB,MAAM,UAAM,4NAAA;2DAAkB;gBAAC,EAAE,UAAA,CAAW,CAAA,KAAM;YAChD,MAAM,QAAQ,WAAW,IAAA,CAAK,KAAA,CAAM,GAAG;YACvC,OAAO,MAAM,MAAA,GAAS,IAAI,MAAM,GAAA,CAAI,IAAK;QAC3C,CAAC;;IACD,OACE,aAAA,GAAA,IAAA,8KAAA,EAAC,qLAAA,CAAU,GAAA,EAAV;QAAe,GAAG,KAAA;QAAO;QAAU,UAAA;YAAA;YAChC;SAAA;IAAA,CACJ;AAEJ,CAAC;AAED,yBAAyB,WAAA,GAAc","debugId":null}},
    {"offset": {"line": 10294, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/primitives/attachment/AttachmentName.tsx"],"sourcesContent":["\"use client\";\n\nimport type { FC } from \"react\";\nimport { useAssistantState } from \"../../context\";\n\nexport namespace AttachmentPrimitiveName {\n  export type Props = Record<string, never>;\n}\n\nexport const AttachmentPrimitiveName: FC<\n  AttachmentPrimitiveName.Props\n> = () => {\n  const name = useAssistantState(({ attachment }) => attachment.name);\n  return <>{name}</>;\n};\n\nAttachmentPrimitiveName.displayName = \"AttachmentPrimitive.Name\";\n"],"names":[],"mappings":";;;;;AAGA,SAAS,yBAAyB;AAUzB;;;;AAJF,IAAM,0BAET,MAAM;IACR,MAAM,WAAO,4NAAA;2DAAkB;gBAAC,EAAE,UAAA,CAAW,CAAA;mBAAM,WAAW,IAAI;;;IAClE,OAAO,aAAA,GAAA,IAAA,6KAAA,EAAA,kLAAA,EAAA;QAAG,UAAA;IAAA,CAAK;AACjB;AAEA,wBAAwB,WAAA,GAAc","debugId":null}},
    {"offset": {"line": 10322, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/primitives/attachment/AttachmentRemove.tsx"],"sourcesContent":["\"use client\";\n\nimport {\n  ActionButtonElement,\n  ActionButtonProps,\n  createActionButton,\n} from \"../../utils/createActionButton\";\nimport { useCallback } from \"react\";\nimport { useAssistantApi } from \"../../context\";\n\nconst useAttachmentRemove = () => {\n  const api = useAssistantApi();\n\n  const handleRemoveAttachment = useCallback(() => {\n    api.attachment().remove();\n  }, [api]);\n\n  return handleRemoveAttachment;\n};\n\nexport namespace AttachmentPrimitiveRemove {\n  export type Element = ActionButtonElement;\n  export type Props = ActionButtonProps<typeof useAttachmentRemove>;\n}\n\nexport const AttachmentPrimitiveRemove = createActionButton(\n  \"AttachmentPrimitive.Remove\",\n  useAttachmentRemove,\n);\n"],"names":[],"mappings":";;;;;AAEA;AAKA,SAAS,mBAAmB;AAC5B,SAAS,uBAAuB;;;;;AAEhC,IAAM,sBAAsB,MAAM;IAChC,MAAM,UAAM,mNAAA,CAAgB;IAE5B,MAAM,6BAAyB,4KAAA;mEAAY,MAAM;YAC/C,IAAI,UAAA,CAAW,EAAE,MAAA,CAAO;QAC1B;kEAAG;QAAC,GAAG;KAAC;IAER,OAAO;AACT;AAOO,IAAM,gCAA4B,0MAAA,EACvC,8BACA","debugId":null}},
    {"offset": {"line": 10352, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/primitives/attachment/index.ts"],"sourcesContent":["export { AttachmentPrimitiveRoot as Root } from \"./AttachmentRoot\";\nexport { AttachmentPrimitiveThumb as unstable_Thumb } from \"./AttachmentThumb\";\nexport { AttachmentPrimitiveName as Name } from \"./AttachmentName\";\nexport { AttachmentPrimitiveRemove as Remove } from \"./AttachmentRemove\";\n"],"names":[],"mappings":";;AAAA,SAAoC,+BAAY;AAChD,SAAqC,gCAAsB;AAC3D,SAAoC,+BAAY;AAChD,SAAsC,iCAAc","debugId":null}},
    {"offset": {"line": 10396, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/primitives/threadListItem/ThreadListItemRoot.tsx"],"sourcesContent":["\"use client\";\n\nimport { Primitive } from \"@radix-ui/react-primitive\";\nimport { type ComponentRef, forwardRef, ComponentPropsWithoutRef } from \"react\";\nimport { useAssistantState } from \"../../context\";\n\ntype PrimitiveDivProps = ComponentPropsWithoutRef<typeof Primitive.div>;\n\nexport namespace ThreadListItemPrimitiveRoot {\n  export type Element = ComponentRef<typeof Primitive.div>;\n  export type Props = PrimitiveDivProps;\n}\n\nexport const ThreadListItemPrimitiveRoot = forwardRef<\n  ThreadListItemPrimitiveRoot.Element,\n  ThreadListItemPrimitiveRoot.Props\n>((props, ref) => {\n  const isMain = useAssistantState(\n    ({ threads, threadListItem }) => threads.mainThreadId === threadListItem.id,\n  );\n\n  return (\n    <Primitive.div\n      {...(isMain ? { \"data-active\": \"true\", \"aria-current\": \"true\" } : null)}\n      {...props}\n      ref={ref}\n    />\n  );\n});\n\nThreadListItemPrimitiveRoot.displayName = \"ThreadListItemPrimitive.Root\";\n"],"names":[],"mappings":";;;;;AAEA,SAAS,iBAAiB;AAC1B,SAA4B,kBAA4C;AACxE,SAAS,yBAAyB;AAkB9B;;;;;;AATG,IAAM,kCAA8B,2KAAA,EAGzC,CAAC,OAAO,QAAQ;IAChB,MAAM,aAAS,4NAAA;iEACb;gBAAC,EAAE,OAAA,EAAS,cAAA,CAAe,CAAA;mBAAM,QAAQ,YAAA,KAAiB,eAAe,EAAA;;;IAG3E,OACE,aAAA,GAAA,IAAA,6KAAA,EAAC,qLAAA,CAAU,GAAA,EAAV;QACE,GAAI,SAAS;YAAE,eAAe;YAAQ,gBAAgB;QAAO,IAAI,IAAA;QACjE,GAAG,KAAA;QACJ;IAAA;AAGN,CAAC;AAED,4BAA4B,WAAA,GAAc","debugId":null}},
    {"offset": {"line": 10433, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/primitives/threadListItem/ThreadListItemArchive.ts"],"sourcesContent":["\"use client\";\n\nimport {\n  ActionButtonElement,\n  ActionButtonProps,\n  createActionButton,\n} from \"../../utils/createActionButton\";\nimport { useAssistantApi } from \"../../context\";\nimport { useCallback } from \"react\";\n\nconst useThreadListItemArchive = () => {\n  const api = useAssistantApi();\n  return useCallback(() => {\n    api.threadListItem().archive();\n  }, [api]);\n};\n\nexport namespace ThreadListItemPrimitiveArchive {\n  export type Element = ActionButtonElement;\n  export type Props = ActionButtonProps<typeof useThreadListItemArchive>;\n}\n\nexport const ThreadListItemPrimitiveArchive = createActionButton(\n  \"ThreadListItemPrimitive.Archive\",\n  useThreadListItemArchive,\n);\n"],"names":[],"mappings":";;;;;AAEA;AAKA,SAAS,uBAAuB;AAChC,SAAS,mBAAmB;;;;;AAE5B,IAAM,2BAA2B,MAAM;IACrC,MAAM,UAAM,mNAAA,CAAgB;IAC5B,OAAO,gLAAA;gDAAY,MAAM;YACvB,IAAI,cAAA,CAAe,EAAE,OAAA,CAAQ;QAC/B;+CAAG;QAAC,GAAG;KAAC;AACV;AAOO,IAAM,qCAAiC,0MAAA,EAC5C,mCACA","debugId":null}},
    {"offset": {"line": 10462, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/primitives/threadListItem/ThreadListItemUnarchive.ts"],"sourcesContent":["\"use client\";\n\nimport {\n  ActionButtonElement,\n  ActionButtonProps,\n  createActionButton,\n} from \"../../utils/createActionButton\";\nimport { useAssistantApi } from \"../../context\";\nimport { useCallback } from \"react\";\n\nconst useThreadListItemUnarchive = () => {\n  const api = useAssistantApi();\n  return useCallback(() => {\n    api.threadListItem().unarchive();\n  }, [api]);\n};\n\nexport namespace ThreadListItemPrimitiveUnarchive {\n  export type Element = ActionButtonElement;\n  export type Props = ActionButtonProps<typeof useThreadListItemUnarchive>;\n}\n\nexport const ThreadListItemPrimitiveUnarchive = createActionButton(\n  \"ThreadListItemPrimitive.Unarchive\",\n  useThreadListItemUnarchive,\n);\n"],"names":[],"mappings":";;;;;AAEA;AAKA,SAAS,uBAAuB;AAChC,SAAS,mBAAmB;;;;;AAE5B,IAAM,6BAA6B,MAAM;IACvC,MAAM,UAAM,mNAAA,CAAgB;IAC5B,OAAO,gLAAA;kDAAY,MAAM;YACvB,IAAI,cAAA,CAAe,EAAE,SAAA,CAAU;QACjC;iDAAG;QAAC,GAAG;KAAC;AACV;AAOO,IAAM,uCAAmC,0MAAA,EAC9C,qCACA","debugId":null}},
    {"offset": {"line": 10491, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/primitives/threadListItem/ThreadListItemDelete.ts"],"sourcesContent":["\"use client\";\n\nimport {\n  ActionButtonElement,\n  ActionButtonProps,\n  createActionButton,\n} from \"../../utils/createActionButton\";\nimport { useAssistantApi } from \"../../context\";\nimport { useCallback } from \"react\";\n\nconst useThreadListItemDelete = () => {\n  const api = useAssistantApi();\n  return useCallback(() => {\n    api.threadListItem().delete();\n  }, [api]);\n};\n\nexport namespace ThreadListItemPrimitiveDelete {\n  export type Element = ActionButtonElement;\n  export type Props = ActionButtonProps<typeof useThreadListItemDelete>;\n}\n\nexport const ThreadListItemPrimitiveDelete = createActionButton(\n  \"ThreadListItemPrimitive.Delete\",\n  useThreadListItemDelete,\n);\n"],"names":[],"mappings":";;;;;AAEA;AAKA,SAAS,uBAAuB;AAChC,SAAS,mBAAmB;;;;;AAE5B,IAAM,0BAA0B,MAAM;IACpC,MAAM,UAAM,mNAAA,CAAgB;IAC5B,OAAO,gLAAA;+CAAY,MAAM;YACvB,IAAI,cAAA,CAAe,EAAE,MAAA,CAAO;QAC9B;8CAAG;QAAC,GAAG;KAAC;AACV;AAOO,IAAM,oCAAgC,0MAAA,EAC3C,kCACA","debugId":null}},
    {"offset": {"line": 10520, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/primitives/threadListItem/ThreadListItemTrigger.ts"],"sourcesContent":["\"use client\";\n\nimport {\n  ActionButtonElement,\n  ActionButtonProps,\n  createActionButton,\n} from \"../../utils/createActionButton\";\nimport { useAssistantApi } from \"../../context\";\nimport { useCallback } from \"react\";\n\nconst useThreadListItemTrigger = () => {\n  const api = useAssistantApi();\n  return useCallback(() => {\n    api.threadListItem().switchTo();\n  }, [api]);\n};\n\nexport namespace ThreadListItemPrimitiveTrigger {\n  export type Element = ActionButtonElement;\n  export type Props = ActionButtonProps<typeof useThreadListItemTrigger>;\n}\n\nexport const ThreadListItemPrimitiveTrigger = createActionButton(\n  \"ThreadListItemPrimitive.Trigger\",\n  useThreadListItemTrigger,\n);\n"],"names":[],"mappings":";;;;;AAEA;AAKA,SAAS,uBAAuB;AAChC,SAAS,mBAAmB;;;;;AAE5B,IAAM,2BAA2B,MAAM;IACrC,MAAM,UAAM,mNAAA,CAAgB;IAC5B,OAAO,gLAAA;gDAAY,MAAM;YACvB,IAAI,cAAA,CAAe,EAAE,QAAA,CAAS;QAChC;+CAAG;QAAC,GAAG;KAAC;AACV;AAOO,IAAM,qCAAiC,0MAAA,EAC5C,mCACA","debugId":null}},
    {"offset": {"line": 10549, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/primitives/threadListItem/ThreadListItemTitle.tsx"],"sourcesContent":["\"use client\";\n\nimport type { FC, ReactNode } from \"react\";\nimport { useAssistantState } from \"../../context\";\n\nexport namespace ThreadListItemPrimitiveTitle {\n  export type Props = {\n    fallback?: ReactNode;\n  };\n}\n\nexport const ThreadListItemPrimitiveTitle: FC<\n  ThreadListItemPrimitiveTitle.Props\n> = ({ fallback }) => {\n  const title = useAssistantState(({ threadListItem }) => threadListItem.title);\n  return <>{title || fallback}</>;\n};\n\nThreadListItemPrimitiveTitle.displayName = \"ThreadListItemPrimitive.Title\";\n"],"names":[],"mappings":";;;;;AAGA,SAAS,yBAAyB;AAYzB;;;;AAJF,IAAM,+BAET;QAAC,EAAE,QAAA,CAAS,CAAA,KAAM;IACpB,MAAM,YAAQ,4NAAA;iEAAkB;gBAAC,EAAE,cAAA,CAAe,CAAA;mBAAM,eAAe,KAAK;;;IAC5E,OAAO,aAAA,GAAA,IAAA,6KAAA,EAAA,kLAAA,EAAA;QAAG,UAAA,SAAS;IAAA,CAAS;AAC9B;AAEA,6BAA6B,WAAA,GAAc","debugId":null}},
    {"offset": {"line": 10578, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/primitives/threadListItem/index.ts"],"sourcesContent":["export { ThreadListItemPrimitiveRoot as Root } from \"./ThreadListItemRoot\";\nexport { ThreadListItemPrimitiveArchive as Archive } from \"./ThreadListItemArchive\";\nexport { ThreadListItemPrimitiveUnarchive as Unarchive } from \"./ThreadListItemUnarchive\";\nexport { ThreadListItemPrimitiveDelete as Delete } from \"./ThreadListItemDelete\";\nexport { ThreadListItemPrimitiveTrigger as Trigger } from \"./ThreadListItemTrigger\";\nexport { ThreadListItemPrimitiveTitle as Title } from \"./ThreadListItemTitle\";\n"],"names":[],"mappings":";;AAAA,SAAwC,mCAAY;AACpD,SAA2C,sCAAe;AAC1D,SAA6C,wCAAiB;AAC9D,SAA0C,qCAAc;AACxD,SAA2C,sCAAe;AAC1D,SAAyC,oCAAa","debugId":null}},
    {"offset": {"line": 10632, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/primitives/threadList/ThreadListNew.tsx"],"sourcesContent":["\"use client\";\n\nimport {\n  ActionButtonElement,\n  ActionButtonProps,\n} from \"../../utils/createActionButton\";\nimport { forwardRef } from \"react\";\nimport { Primitive } from \"@radix-ui/react-primitive\";\nimport { composeEventHandlers } from \"@radix-ui/primitive\";\nimport { useAssistantState, useAssistantApi } from \"../../context\";\n\nexport namespace ThreadListPrimitiveNew {\n  export type Element = ActionButtonElement;\n  export type Props = ActionButtonProps<() => void>;\n}\n\nexport const ThreadListPrimitiveNew = forwardRef<\n  ThreadListPrimitiveNew.Element,\n  ThreadListPrimitiveNew.Props\n>(({ onClick, disabled, ...props }, forwardedRef) => {\n  const isMain = useAssistantState(\n    ({ threads }) => threads.newThreadId === threads.mainThreadId,\n  );\n\n  const api = useAssistantApi();\n\n  return (\n    <Primitive.button\n      type=\"button\"\n      {...(isMain ? { \"data-active\": \"true\", \"aria-current\": \"true\" } : null)}\n      {...props}\n      ref={forwardedRef}\n      disabled={disabled}\n      onClick={composeEventHandlers(onClick, () => {\n        api.threads().switchToNewThread();\n      })}\n    />\n  );\n});\n\nThreadListPrimitiveNew.displayName = \"ThreadListPrimitive.New\";\n"],"names":[],"mappings":";;;;;AAMA,SAAS,kBAAkB;AAC3B,SAAS,iBAAiB;AAC1B,SAAS,4BAA4B;;AACrC,SAAS,mBAAmB,uBAAuB;AAkB/C;;;;;;;AAXG,IAAM,6BAAyB,2KAAA,EAGpC,QAAkC,iBAAiB;QAAlD,EAAE,OAAA,EAAS,QAAA,EAAU,GAAG,MAAM,CAAA;IAC/B,MAAM,SAAS,gOAAA;4DACb;gBAAC,EAAE,OAAA,CAAQ,CAAA;mBAAM,QAAQ,WAAA,KAAgB,QAAQ,YAAA;;;IAGnD,MAAM,UAAM,mNAAA,CAAgB;IAE5B,OACE,aAAA,GAAA,IAAA,6KAAA,EAAC,qLAAA,CAAU,MAAA,EAAV;QACC,MAAK;QACJ,GAAI,SAAS;YAAE,eAAe;YAAQ,gBAAgB;QAAO,IAAI,IAAA;QACjE,GAAG,KAAA;QACJ,KAAK;QACL;QACA,aAAS,uLAAA,EAAqB,SAAS,MAAM;YAC3C,IAAI,OAAA,CAAQ,EAAE,iBAAA,CAAkB;QAClC,CAAC;IAAA;AAGP,CAAC;AAED,uBAAuB,WAAA,GAAc","debugId":null}},
    {"offset": {"line": 10679, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/primitives/threadList/ThreadListItems.tsx"],"sourcesContent":["\"use client\";\n\nimport { ComponentType, FC, memo, useMemo } from \"react\";\nimport {\n  ThreadListItemByIndexProvider,\n  useAssistantState,\n} from \"../../context\";\n\nexport namespace ThreadListPrimitiveItems {\n  export type Props = {\n    archived?: boolean | undefined;\n    components: {\n      ThreadListItem: ComponentType;\n    };\n  };\n}\n\nexport namespace ThreadListPrimitiveItemByIndex {\n  export type Props = {\n    index: number;\n    archived?: boolean | undefined;\n    components: ThreadListPrimitiveItems.Props[\"components\"];\n  };\n}\n\n/**\n * Renders a single thread list item at the specified index.\n *\n * This component provides direct access to render a specific thread\n * from the thread list using the provided component configuration.\n *\n * @example\n * ```tsx\n * <ThreadListPrimitive.ItemByIndex\n *   index={0}\n *   components={{\n *     ThreadListItem: MyThreadListItem\n *   }}\n * />\n * ```\n */\nexport const ThreadListPrimitiveItemByIndex: FC<ThreadListPrimitiveItemByIndex.Props> =\n  memo(\n    ({ index, archived = false, components }) => {\n      const ThreadListItemComponent = components.ThreadListItem;\n\n      return (\n        <ThreadListItemByIndexProvider index={index} archived={archived}>\n          <ThreadListItemComponent />\n        </ThreadListItemByIndexProvider>\n      );\n    },\n    (prev, next) =>\n      prev.index === next.index &&\n      prev.archived === next.archived &&\n      prev.components.ThreadListItem === next.components.ThreadListItem,\n  );\n\nThreadListPrimitiveItemByIndex.displayName = \"ThreadListPrimitive.ItemByIndex\";\n\nexport const ThreadListPrimitiveItems: FC<ThreadListPrimitiveItems.Props> = ({\n  archived = false,\n  components,\n}) => {\n  const contentLength = useAssistantState(({ threads }) =>\n    archived ? threads.archivedThreadIds.length : threads.threadIds.length,\n  );\n\n  const listElements = useMemo(() => {\n    return Array.from({ length: contentLength }, (_, index) => (\n      <ThreadListPrimitiveItemByIndex\n        key={index}\n        index={index}\n        archived={archived}\n        components={components}\n      />\n    ));\n  }, [contentLength, archived, components]);\n\n  return listElements;\n};\n\nThreadListPrimitiveItems.displayName = \"ThreadListPrimitive.Items\";\n"],"names":[],"mappings":";;;;;;;AAEA,SAA4B,MAAM,eAAe;;AACjD;AA6CU;;;;;AAPH,IAAM,qCACX,qKAAA,EACE;QAAC,EAAE,KAAA,EAAO,WAAW,KAAA,EAAO,UAAA,CAAW,CAAA,KAAM;IAC3C,MAAM,0BAA0B,WAAW,cAAA;IAE3C,OACE,aAAA,GAAA,IAAA,6KAAA,EAAC,wOAAA,EAAA;QAA8B;QAAc;QAC3C,UAAA,aAAA,GAAA,IAAA,6KAAA,EAAC,yBAAA,CAAA,CAAwB;IAAA,CAC3B;AAEJ,GACA,CAAC,MAAM,OACL,KAAK,KAAA,KAAU,KAAK,KAAA,IACpB,KAAK,QAAA,KAAa,KAAK,QAAA,IACvB,KAAK,UAAA,CAAW,cAAA,KAAmB,KAAK,UAAA,CAAW,cAAA;AAGzD,+BAA+B,WAAA,GAAc;AAEtC,IAAM,2BAA+D;QAAC,EAC3E,WAAW,KAAA,EACX,UAAA,EACF,KAAM;IACJ,MAAM,oBAAgB,4NAAA;qEAAkB;gBAAC,EAAE,OAAA,CAAQ,CAAA;mBACjD,WAAW,QAAQ,iBAAA,CAAkB,MAAA,GAAS,QAAQ,SAAA,CAAU,MAAA;;;IAGlE,MAAM,mBAAe,wKAAA;0DAAQ,MAAM;YACjC,OAAO,MAAM,IAAA,CAAK;gBAAE,QAAQ;YAAc;kEAAG,CAAC,GAAG,QAC/C,aAAA,GAAA,IAAA,6KAAA,EAAC,gCAAA;wBAEC;wBACA;wBACA;oBAAA,GAHK;;QAMX;yDAAG;QAAC;QAAe;QAAU,UAAU;KAAC;IAExC,OAAO;AACT;AAEA,yBAAyB,WAAA,GAAc","debugId":null}},
    {"offset": {"line": 10738, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/primitives/threadList/ThreadListRoot.tsx"],"sourcesContent":["\"use client\";\n\nimport { Primitive } from \"@radix-ui/react-primitive\";\nimport { ComponentPropsWithoutRef, ComponentRef, forwardRef } from \"react\";\n\ntype PrimitiveDivProps = ComponentPropsWithoutRef<typeof Primitive.div>;\n\nexport namespace ThreadListPrimitiveRoot {\n  export type Element = ComponentRef<typeof Primitive.div>;\n  export type Props = PrimitiveDivProps;\n}\n\nexport const ThreadListPrimitiveRoot = forwardRef<\n  ThreadListPrimitiveRoot.Element,\n  ThreadListPrimitiveRoot.Props\n>((props, ref) => {\n  return <Primitive.div {...props} ref={ref} />;\n});\n\nThreadListPrimitiveRoot.displayName = \"ThreadListPrimitive.Root\";\n"],"names":[],"mappings":";;;;;AAEA,SAAS,iBAAiB;AAC1B,SAAiD,kBAAkB;AAa1D;;;;;AAJF,IAAM,8BAA0B,2KAAA,EAGrC,CAAC,OAAO,QAAQ;IAChB,OAAO,aAAA,GAAA,IAAA,6KAAA,EAAC,qLAAA,CAAU,GAAA,EAAV;QAAe,GAAG,KAAA;QAAO;IAAA,CAAU;AAC7C,CAAC;AAED,wBAAwB,WAAA,GAAc","debugId":null}},
    {"offset": {"line": 10763, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/welcome/Desktop/Spidexx4/my-app/node_modules/%40assistant-ui/react/src/primitives/threadList/index.ts"],"sourcesContent":["export { ThreadListPrimitiveNew as New } from \"./ThreadListNew\";\nexport { ThreadListPrimitiveItems as Items } from \"./ThreadListItems\";\nexport { ThreadListPrimitiveItemByIndex as ItemByIndex } from \"./ThreadListItems\";\nexport { ThreadListPrimitiveRoot as Root } from \"./ThreadListRoot\";\n"],"names":[],"mappings":";;AAAA,SAAmC,8BAAW;AAC9C,SAAqC,gCAAa;AAElD,SAAoC,+BAAY","debugId":null}}]
}